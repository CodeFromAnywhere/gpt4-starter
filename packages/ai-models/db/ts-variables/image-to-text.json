{
  "createdAt": 1678369207725,
  "updatedAt": 1678369207725,
  "deletedAt": 0,
  "createdFirstAt": 1678369207725,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "imageToText",
  "slug": "image-to-text",
  "operationRelativeTypescriptFilePath": "src/imageToText.ts",
  "type": {
    "rawType": "(absoluteImagePath: string, config?: { text?: string | undefined; similarity?: boolean | undefined; maxLength?: number | undefined; minLength?: number | undefined; } | undefined) => Promise<{ isSuccessful: boolean; message: string; result?: object | undefined; }>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  absoluteImagePath: string,\n  config?: {\n    text?: string;\n    similarity?: boolean;\n    maxLength?: number;\n    minLength?: number;\n  }\n): Promise<{ isSuccessful: boolean; message: string; result?: object }> => {\n  /**\n  use getassetdirectly\n   */\n  const imageUrl = \"\"; // TODO: should be available through our own server, preferably, based on absoluteImagePath.\n\n  const result = await bananaCarrot({ imageUrl, ...(config || {}) });\n\n  return result;\n}",
  "description": "Image caption generation using banana.dev API with the carrot model\n\nTakes in a path to an image.\nReturns a caption for that image.",
  "id": "ddbttqecrqlybpghimopzxsb"
}