export const sdkInterfacePaths = {
  "NamedParameters<typeof executeCronFunction>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-executecronfunction.json",
  "NamedParameters<typeof firstCoreFunction>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-firstcorefunction.json",
  "NamedParameters<typeof prod>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-prod.json",
  "NamedParameters<typeof prodCli>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-prodcli.json",
  "NamedParameters<typeof runFunctionServer>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-runfunctionserver.json",
  "NamedParameters<typeof runFunctionServerCli>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-runfunctionservercli.json",
  "NamedParameters<typeof runFunctionServerDev>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-runfunctionserverdev.json",
  "NamedParameters<typeof runFunctionServerDevCli>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-runfunctionserverdevcli.json",
  "NamedParameters<typeof scheduleCronJobs>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-schedulecronjobs.json",
  "NamedParameters<typeof startSearchWebIfAvailable>": "/apps/function-server/db/ts-interfaces/namedparameterstypeof-startsearchwebifavailable.json",
  "TsFunction": "/modules/markdown-types/db/ts-interfaces/tsfunction.json",
  "FunctionExecution": "/modules/function-types/db/ts-interfaces/functionexecution.json",
  "NamedParameters<typeof FormTab>": "/apps/os-web/db/ts-interfaces/namedparameterstypeof-formtab.json",
  "NamedParameters<typeof FunctionExecutionTable>": "/apps/os-web/db/ts-interfaces/namedparameterstypeof-functionexecutiontable.json",
  "NamedParameters<typeof FunctionLayout>": "/apps/os-web/db/ts-interfaces/namedparameterstypeof-functionlayout.json",
  "NamedParameters<typeof FunctionPage>": "/apps/os-web/db/ts-interfaces/namedparameterstypeof-functionpage.json",
  "NamedParameters<typeof getTimelineItems>": "/apps/os-web/db/ts-interfaces/namedparameterstypeof-gettimelineitems.json",
  "NamedParameters<typeof useMe>": "/apps/os-web/db/ts-interfaces/namedparameterstypeof-useme.json",
  "QueryPageProps": "/apps/os-web/db/ts-interfaces/querypageprops.json",
  "BackendAsset": "/modules/writer-functions/db/ts-interfaces/backendasset.json",
  "ContextualPrompt": "/modules/prompt-components/db/ts-interfaces/contextualprompt.json",
  "FileType": "/modules/generative-functions-node/db/ts-interfaces/filetype.json",
  "FunctionContext": "/modules/youtube-to-mp3/db/ts-interfaces/functioncontext.json",
  "NamedParameters<typeof addEmojiToEveryWord>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-addemojitoeveryword.json",
  "NamedParameters<typeof addStatement>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-addstatement.json",
  "NamedParameters<typeof addWord>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-addword.json",
  "NamedParameters<typeof biggestFunctionName>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-biggestfunctionname.json",
  "NamedParameters<typeof checkQueue>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-checkqueue.json",
  "NamedParameters<typeof cleanup>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-cleanup.json",
  "NamedParameters<typeof controlChatGptWrapper>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-controlchatgptwrapper.json",
  "NamedParameters<typeof deletePromptResult>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-deletepromptresult.json",
  "NamedParameters<typeof developersQuote>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-developersquote.json",
  "NamedParameters<typeof diaryToInstagram>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-diarytoinstagram.json",
  "NamedParameters<typeof documentationWriting>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-documentationwriting.json",
  "NamedParameters<typeof emojiAugmentation>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-emojiaugmentation.json",
  "NamedParameters<typeof explain>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-explain.json",
  "NamedParameters<typeof explainInDutch>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-explainindutch.json",
  "NamedParameters<typeof explainInNepali>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-explaininnepali.json",
  "NamedParameters<typeof explainInPortuguese>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-explaininportuguese.json",
  "NamedParameters<typeof explainLineByLine>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-explainlinebyline.json",
  "NamedParameters<typeof fixGrammarAndSpellingMistakes>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-fixgrammarandspellingmistakes.json",
  "NamedParameters<typeof followUpQuestions>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-followupquestions.json",
  "NamedParameters<typeof getCategoriesTest>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-getcategoriestest.json",
  "NamedParameters<typeof getContextualPrompt>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-getcontextualprompt.json",
  "NamedParameters<typeof getContextualPromptCategories>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-getcontextualpromptcategories.json",
  "NamedParameters<typeof getContextualPromptResultJsonFilePath>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-getcontextualpromptresultjsonfilepath.json",
  "NamedParameters<typeof getObjectForkKeyRecursively>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-getobjectforkkeyrecursively.json",
  "NamedParameters<typeof getQueueStatus>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-getqueuestatus.json",
  "NamedParameters<typeof getToolFunctions>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-gettoolfunctions.json",
  "NamedParameters<typeof haiku>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-haiku.json",
  "NamedParameters<typeof hookOneliners>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-hookoneliners.json",
  "NamedParameters<typeof improveCode>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-improvecode.json",
  "NamedParameters<typeof investorPitch>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-investorpitch.json",
  "NamedParameters<typeof marcusAurelius>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-marcusaurelius.json",
  "NamedParameters<typeof opposite>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-opposite.json",
  "NamedParameters<typeof outlineToInvestorPitch>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-outlinetoinvestorpitch.json",
  "NamedParameters<typeof poem>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-poem.json",
  "NamedParameters<typeof processChatGptPrompt>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-processchatgptprompt.json",
  "NamedParameters<typeof processPromptOnFile>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-processpromptonfile.json",
  "NamedParameters<typeof processPromptOnFolderWithContext>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-processpromptonfolderwithcontext.json",
  "NamedParameters<typeof quiz>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-quiz.json",
  "NamedParameters<typeof removeAllFake>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-removeallfake.json",
  "NamedParameters<typeof rickAndMorty>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-rickandmorty.json",
  "NamedParameters<typeof rickAndMortyRick>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-rickandmortyrick.json",
  "NamedParameters<typeof setIsFavoritePromptResult>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-setisfavoritepromptresult.json",
  "NamedParameters<typeof shouldAddToQueue>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-shouldaddtoqueue.json",
  "NamedParameters<typeof socratesAndSnoopDogg>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-socratesandsnoopdogg.json",
  "NamedParameters<typeof storytelling>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-storytelling.json",
  "NamedParameters<typeof summarizeMeetingWithContext>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-summarizemeetingwithcontext.json",
  "NamedParameters<typeof test>": "/modules/search-fs/db/ts-interfaces/namedparameterstypeof-test.json",
  "NamedParameters<typeof toolFunctionWithContext>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-toolfunctionwithcontext.json",
  "NamedParameters<typeof translateEverything>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-translateeverything.json",
  "NamedParameters<typeof translateEverythingIntoHindi>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-translateeverythingintohindi.json",
  "NamedParameters<typeof translateEverythingPortuguese>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-translateeverythingportuguese.json",
  "NamedParameters<typeof translateToPortuguese>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-translatetoportuguese.json",
  "NamedParameters<typeof typescriptExplain>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-typescriptexplain.json",
  "NamedParameters<typeof williamShakespear>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-williamshakespear.json",
  "NamedParameters<typeof writeContextualPromptSdk>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-writecontextualpromptsdk.json",
  "NamedParameters<typeof writeCreatePromptCode>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-writecreatepromptcode.json",
  "NamedParameters<typeof ye>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-ye.json",
  "NamedParameters<typeof yodafy>": "/packages/ai-functions-node/db/ts-interfaces/namedparameterstypeof-yodafy.json",
  "ProcessPromptProps": "/packages/ai-functions-node/db/ts-interfaces/processpromptprops.json",
  "QueueStatus": "/packages/ai-functions-node/db/ts-interfaces/queuestatus.json",
  "StackCount": "/packages/ai-functions-node/db/ts-interfaces/stackcount.json",
  "NamedParameters<typeof getGroupOrPersonId>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-getgrouporpersonid.json",
  "NamedParameters<typeof imageToText>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-imagetotext.json",
  "NamedParameters<typeof languageTranslation>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-languagetranslation.json",
  "NamedParameters<typeof musicTrackSeparation>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-musictrackseparation.json",
  "NamedParameters<typeof speakerSeparation>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-speakerseparation.json",
  "NamedParameters<typeof speechToText>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-speechtotext.json",
  "NamedParameters<typeof textToImage>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-texttoimage.json",
  "NamedParameters<typeof textToSpeech>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-texttospeech.json",
  "NamedParameters<typeof textToText>": "/packages/ai-models/db/ts-interfaces/namedparameterstypeof-texttotext.json",
  "OpenAiTextCompletionModelEnum": "/packages/openai-wrapper/db/ts-interfaces/openaitextcompletionmodelenum.json",
  "TextToTextModelEnum": "/packages/ai-models/db/ts-interfaces/texttotextmodelenum.json",
  "CopyPair": "/packages/collect-static-assets/db/ts-interfaces/copypair.json",
  "NamedParameters<typeof copyCopyPairs>": "/packages/collect-static-assets/db/ts-interfaces/namedparameterstypeof-copycopypairs.json",
  "NamedParameters<typeof copyReaderStaticAssets>": "/packages/collect-static-assets/db/ts-interfaces/namedparameterstypeof-copyreaderstaticassets.json",
  "NamedParameters<typeof findReaderStaticAssets>": "/packages/collect-static-assets/db/ts-interfaces/namedparameterstypeof-findreaderstaticassets.json",
  "NamedParameters<typeof findStaticAssets>": "/packages/collect-static-assets/db/ts-interfaces/namedparameterstypeof-findstaticassets.json",
  "ReaderWebPage": "/modules/webpage-types/db/ts-interfaces/readerwebpage.json",
  "MailDataFromOptional": "/packages/communication-wrapper/db/ts-interfaces/maildatafromoptional.json",
  "MessagingChannel": "/packages/communication-wrapper/db/ts-interfaces/messagingchannel.json",
  "NamedParameters<typeof sendMail>": "/packages/communication-wrapper/db/ts-interfaces/namedparameterstypeof-sendmail.json",
  "NamedParameters<typeof sendMailTest>": "/packages/communication-wrapper/db/ts-interfaces/namedparameterstypeof-sendmailtest.json",
  "NamedParameters<typeof sendMessage>": "/packages/communication-wrapper/db/ts-interfaces/namedparameterstypeof-sendmessage.json",
  "NamedParameters<typeof sendSms>": "/packages/communication-wrapper/db/ts-interfaces/namedparameterstypeof-sendsms.json",
  "NamedParameters<typeof sendTwilioMessage>": "/packages/communication-wrapper/db/ts-interfaces/namedparameterstypeof-sendtwiliomessage.json",
  "NamedParameters<typeof trySendMessage>": "/packages/communication-wrapper/db/ts-interfaces/namedparameterstypeof-trysendmessage.json",
  "Person": "/modules/todo-types/db/ts-interfaces/person.json",
  "Persona": "/modules/peer-types/db/ts-interfaces/persona.json",
  "SendMessageConfig": "/packages/communication-wrapper/db/ts-interfaces/sendmessageconfig.json",
  "TwilioWebhookType": "/packages/communication-wrapper/db/ts-interfaces/twiliowebhooktype.json",
  "ChatCompletionConfig": "/packages/openai-wrapper/db/ts-interfaces/chatcompletionconfig.json",
  "ChatCompletionRequestMessage": "/packages/openai-wrapper/db/ts-interfaces/chatcompletionrequestmessage.json",
  "ChatMessage": "/modules/social-media-types/db/ts-interfaces/chatmessage.json",
  "NamedParameters<typeof calculateMessagesTokenCount>": "/packages/openai-wrapper/db/ts-interfaces/namedparameterstypeof-calculatemessagestokencount.json",
  "NamedParameters<typeof calculateOpenaiMessagesTokenCount>": "/packages/openai-wrapper/db/ts-interfaces/namedparameterstypeof-calculateopenaimessagestokencount.json",
  "NamedParameters<typeof calculateOpenaiMessagesTokenCountSum>": "/packages/openai-wrapper/db/ts-interfaces/namedparameterstypeof-calculateopenaimessagestokencountsum.json",
  "NamedParameters<typeof calculateTokenCount>": "/packages/openai-wrapper/db/ts-interfaces/namedparameterstypeof-calculatetokencount.json",
  "NamedParameters<typeof chat>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-chat.json",
  "NamedParameters<typeof chatCompletion>": "/packages/openai-wrapper/db/ts-interfaces/namedparameterstypeof-chatcompletion.json",
  "NamedParameters<typeof getOpenaiInstance>": "/packages/openai-wrapper/db/ts-interfaces/namedparameterstypeof-getopenaiinstance.json",
  "NamedParameters<typeof gpt3>": "/packages/openai-wrapper/db/ts-interfaces/namedparameterstypeof-gpt3.json",
  "NamedParameters<typeof messagesToTokenableText>": "/packages/openai-wrapper/db/ts-interfaces/namedparameterstypeof-messagestotokenabletext.json",
  "NamedParameters<typeof whisper>": "/packages/whisper-local/db/ts-interfaces/namedparameterstypeof-whisper.json",
  "OpenAiChatCompletionModelEnum": "/packages/openai-wrapper/db/ts-interfaces/openaichatcompletionmodelenum.json",
  "NamedParameters<typeof watchAll>": "/packages/watch-all/db/ts-interfaces/namedparameterstypeof-watchall.json",
  "NamedParameters<typeof watchAllCli>": "/packages/watch-all/db/ts-interfaces/namedparameterstypeof-watchallcli.json",
  "NamedParameters<typeof exploreBadNamingFiles>": "/packages/watch-bad-naming/db/ts-interfaces/namedparameterstypeof-explorebadnamingfiles.json",
  "NamedParameters<typeof isBadName>": "/packages/watch-bad-naming/db/ts-interfaces/namedparameterstypeof-isbadname.json",
  "NamedParameters<typeof main>": "/modules/say/db/ts-interfaces/namedparameterstypeof-main.json",
  "NamedParameters<typeof renameAllBadlyNamedFiles>": "/packages/watch-bad-naming/db/ts-interfaces/namedparameterstypeof-renameallbadlynamedfiles.json",
  "NamedParameters<typeof renameBadlyNamedFile>": "/packages/watch-bad-naming/db/ts-interfaces/namedparameterstypeof-renamebadlynamedfile.json",
  "NamedParameters<typeof getBetterLocation>": "/packages/watch-markdown/db/ts-interfaces/namedparameterstypeof-getbetterlocation.json",
  "NamedParameters<typeof getIsPrivate>": "/packages/watch-markdown/db/ts-interfaces/namedparameterstypeof-getisprivate.json",
  "NamedParameters<typeof makeMarkdownIndex>": "/packages/watch-markdown/db/ts-interfaces/namedparameterstypeof-makemarkdownindex.json",
  "NamedParameters<typeof makeMarkdownIndexCli>": "/packages/watch-markdown/db/ts-interfaces/namedparameterstypeof-makemarkdownindexcli.json",
  "NamedParameters<typeof getRecordingType>": "/packages/watch-mp3-transcriptions/db/ts-interfaces/namedparameterstypeof-getrecordingtype.json",
  "NamedParameters<typeof transcriptionToGptChunks>": "/packages/watch-mp3-transcriptions/db/ts-interfaces/namedparameterstypeof-transcriptiontogptchunks.json",
  "NamedParameters<typeof getYoutubeVideoUrls>": "/packages/watch-system-recordings/db/ts-interfaces/namedparameterstypeof-getyoutubevideourls.json",
  "NamedParameters<typeof createTranscriptionJson>": "/packages/whisper-local/db/ts-interfaces/namedparameterstypeof-createtranscriptionjson.json",
  "NamedParameters<typeof createTranscriptionJsonCli>": "/packages/whisper-local/db/ts-interfaces/namedparameterstypeof-createtranscriptionjsoncli.json",
  "NamedParameters<typeof getTranslationText>": "/packages/whisper-local/db/ts-interfaces/namedparameterstypeof-gettranslationtext.json",
  "NamedParameters<typeof isWav16bit>": "/packages/whisper-local/db/ts-interfaces/namedparameterstypeof-iswav16bit.json",
  "NamedParameters<typeof readTranscriptionCsv>": "/packages/whisper-local/db/ts-interfaces/namedparameterstypeof-readtranscriptioncsv.json",
  "NamedParameters<typeof whisperLocalCpp>": "/packages/whisper-local/db/ts-interfaces/namedparameterstypeof-whisperlocalcpp.json",
  "WhisperConfig": "/modules/ai-types/db/ts-interfaces/whisperconfig.json",
  "WhisperLanguage": "/modules/ai-types/db/ts-interfaces/whisperlanguage.json",
  "WhisperModelName": "/modules/ai-types/db/ts-interfaces/whispermodelname.json",
  "AiDataset": "/modules/ai-types/db/ts-interfaces/aidataset.json",
  "AiDemoApp": "/modules/ai-types/db/ts-interfaces/aidemoapp.json",
  "AiModel": "/modules/ai-types/db/ts-interfaces/aimodel.json",
  "CategoryChildObject": "/modules/ai-types/db/ts-interfaces/categorychildobject.json",
  "ContextualContent": "/modules/ai-types/db/ts-interfaces/contextualcontent.json",
  "ContextualPromptInfo": "/modules/ai-types/db/ts-interfaces/contextualpromptinfo.json",
  "ContextualPromptResult": "/modules/markdown/db/ts-interfaces/contextualpromptresult.json",
  "ContextualPromptsObject": "/modules/ai-types/db/ts-interfaces/contextualpromptsobject.json",
  "DefaultModelType": "/modules/todo-types/db/ts-interfaces/defaultmodeltype.json",
  "FolderContent": "/modules/ai-types/db/ts-interfaces/foldercontent.json",
  "GptIdeasUser": "/modules/ai-types/db/ts-interfaces/gptideasuser.json",
  "LanguageModelEnum": "/modules/ai-types/db/ts-interfaces/languagemodelenum.json",
  "ProcessPromptFunctionResult": "/modules/ai-types/db/ts-interfaces/processpromptfunctionresult.json",
  "PromptFunctionConfig": "/modules/ai-types/db/ts-interfaces/promptfunctionconfig.json",
  "RecordingType": "/modules/ai-types/db/ts-interfaces/recordingtype.json",
  "SlugModelType": "/modules/peer-types/db/ts-interfaces/slugmodeltype.json",
  "StandardFunctionConfig": "/modules/function-types/db/ts-interfaces/standardfunctionconfig.json",
  "TranscribedText": "/modules/ai-types/db/ts-interfaces/transcribedtext.json",
  "Transcription": "/modules/ai-types/db/ts-interfaces/transcription.json",
  "NamedParameters<typeof allOperationsRemoveJsSrc>": "/modules/all/db/ts-interfaces/namedparameterstypeof-alloperationsremovejssrc.json",
  "NamedParameters<typeof allOperationsToMarkdown>": "/modules/all/db/ts-interfaces/namedparameterstypeof-alloperationstomarkdown.json",
  "NamedParameters<typeof clearAllTsDatabases>": "/modules/all/db/ts-interfaces/namedparameterstypeof-clearalltsdatabases.json",
  "NamedParameters<typeof codeAll>": "/modules/all/db/ts-interfaces/namedparameterstypeof-codeall.json",
  "NamedParameters<typeof getAllOperationClassifications>": "/modules/all/db/ts-interfaces/namedparameterstypeof-getalloperationclassifications.json",
  "NamedParameters<typeof mdAllOperations>": "/modules/all/db/ts-interfaces/namedparameterstypeof-mdalloperations.json",
  "NamedParameters<typeof minifyAllOperations>": "/modules/all/db/ts-interfaces/namedparameterstypeof-minifyalloperations.json",
  "NamedParameters<typeof removeAllFiles>": "/modules/all/db/ts-interfaces/namedparameterstypeof-removeallfiles.json",
  "NamedParameters<typeof removeAllFolders>": "/modules/all/db/ts-interfaces/namedparameterstypeof-removeallfolders.json",
  "NamedParameters<typeof removeAllFoldersCli>": "/modules/all/db/ts-interfaces/namedparameterstypeof-removeallfolderscli.json",
  "NamedParameters<typeof runScriptEverywhere>": "/modules/all/db/ts-interfaces/namedparameterstypeof-runscripteverywhere.json",
  "NamedParameters<typeof setScriptEverywhere>": "/modules/all/db/ts-interfaces/namedparameterstypeof-setscripteverywhere.json",
  "ApiConfig": "/modules/api/db/ts-interfaces/apiconfig.json",
  "NamedParameters<typeof fn1>": "/modules/api/db/ts-interfaces/namedparameterstypeof-fn1.json",
  "NamedParameters<typeof fn2>": "/modules/api/db/ts-interfaces/namedparameterstypeof-fn2.json",
  "NamedParameters<typeof fn3>": "/modules/api/db/ts-interfaces/namedparameterstypeof-fn3.json",
  "NamedParameters<typeof untypedApiFunction>": "/modules/api/db/ts-interfaces/namedparameterstypeof-untypedapifunction.json",
  "NamedParameters<typeof getGetApiUrl>": "/modules/api-js/db/ts-interfaces/namedparameterstypeof-getgetapiurl.json",
  "ApiStoreType": "/modules/api-store/db/ts-interfaces/apistoretype.json",
  "NamedParameters<typeof AppsMenu>": "/modules/apps-menu/db/ts-interfaces/namedparameterstypeof-appsmenu.json",
  "NamedParameters<typeof ask>": "/modules/ask/db/ts-interfaces/namedparameterstypeof-ask.json",
  "NamedParameters<typeof askOk>": "/modules/ask/db/ts-interfaces/namedparameterstypeof-askok.json",
  "NamedParameters<typeof getArgumentOrAsk>": "/modules/ask/db/ts-interfaces/namedparameterstypeof-getargumentorask.json",
  "Asset": "/modules/asset-view/db/ts-interfaces/asset.json",
  "AssetInputType": "/modules/name-conventions/db/ts-interfaces/assetinputtype.json",
  "AssetParameter": "/modules/asset-functions-js/db/ts-interfaces/assetparameter.json",
  "NamedParameters<typeof addToken>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-addtoken.json",
  "NamedParameters<typeof ensureToken>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-ensuretoken.json",
  "NamedParameters<typeof findAssetParametersRecursively>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-findassetparametersrecursively.json",
  "NamedParameters<typeof getAssetDirectlyApiUrl>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-getassetdirectlyapiurl.json",
  "NamedParameters<typeof getConversionInfoFromType>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-getconversioninfofromtype.json",
  "NamedParameters<typeof getExtensionFromAsset>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-getextensionfromasset.json",
  "NamedParameters<typeof getNameFromRelativePath>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-getnamefromrelativepath.json",
  "NamedParameters<typeof getNameWithTokenFromRelativePath>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-getnamewithtokenfromrelativepath.json",
  "NamedParameters<typeof getReferencedAssetApiUrl>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-getreferencedassetapiurl.json",
  "NamedParameters<typeof getTypeFromUrlOrPath>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-gettypefromurlorpath.json",
  "NamedParameters<typeof readableSize>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-readablesize.json",
  "NamedParameters<typeof removeTokenIfPresent>": "/modules/asset-functions-js/db/ts-interfaces/namedparameterstypeof-removetokenifpresent.json",
  "CompressionConfig": "/modules/asset-type/db/ts-interfaces/compressionconfig.json",
  "DownloadConfig": "/modules/asset-functions-node/db/ts-interfaces/downloadconfig.json",
  "NamedParameters<typeof compressAsset>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-compressasset.json",
  "NamedParameters<typeof downloadRemoteAsset>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-downloadremoteasset.json",
  "NamedParameters<typeof createDownloadWithContext>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-createdownloadwithcontext.json",
  "NamedParameters<typeof deleteReferencedAsset>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-deletereferencedasset.json",
  "NamedParameters<typeof findAbsoluteAssetPathFromReference>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-findabsoluteassetpathfromreference.json",
  "NamedParameters<typeof findAllProjectMedia>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-findallprojectmedia.json",
  "NamedParameters<typeof findDownload>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-finddownload.json",
  "NamedParameters<typeof getStorageLocationInfo>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-getstoragelocationinfo.json",
  "NamedParameters<typeof getTemporaryAssetsFolderPath>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-gettemporaryassetsfolderpath.json",
  "NamedParameters<typeof makeDownloadableFile>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-makedownloadablefile.json",
  "NamedParameters<typeof processAsset>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-processasset.json",
  "NamedParameters<typeof removeOldTemporaryAssets>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-removeoldtemporaryassets.json",
  "NamedParameters<typeof serverDownloadReply>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-serverdownloadreply.json",
  "NamedParameters<typeof uploadAssetWithContext>": "/modules/asset-functions-node/db/ts-interfaces/namedparameterstypeof-uploadassetwithcontext.json",
  "ReceivedFile": "/modules/asset-functions-node/db/ts-interfaces/receivedfile.json",
  "MediaSourceEnum": "/modules/asset-input/db/ts-interfaces/mediasourceenum.json",
  "NamedParameters<typeof getTypeFromFileBlob>": "/modules/asset-input/db/ts-interfaces/namedparameterstypeof-gettypefromfileblob.json",
  "NamedParameters<typeof makeBackendAsset>": "/modules/asset-input/db/ts-interfaces/namedparameterstypeof-makebackendasset.json",
  "NamedParameters<typeof SelectMedia>": "/modules/asset-input/db/ts-interfaces/namedparameterstypeof-selectmedia.json",
  "AssetType": "/modules/markdown-types/db/ts-interfaces/assettype.json",
  "CompressionOption": "/modules/asset-type/db/ts-interfaces/compressionoption.json",
  "Download": "/modules/asset-type/db/ts-interfaces/download.json",
  "Image": "/modules/asset-type/db/ts-interfaces/image.json",
  "NewAssetType": "/modules/react-with-native-form-asset-input/db/ts-interfaces/newassettype.json",
  "OpenFile": "/modules/asset-type/db/ts-interfaces/openfile.json",
  "UploadAssetBody": "/modules/asset-type/db/ts-interfaces/uploadassetbody.json",
  "UploadAssetResult": "/modules/asset-type/db/ts-interfaces/uploadassetresult.json",
  "AugmentedAnyModelType": "/modules/schema-util/db/ts-interfaces/augmentedanymodeltype.json",
  "NamedParameters<typeof getSrc>": "/modules/asset-view/db/ts-interfaces/namedparameterstypeof-getsrc.json",
  "NamedParameters<typeof itemGetBackendAssetUrl>": "/modules/asset-view/db/ts-interfaces/namedparameterstypeof-itemgetbackendasseturl.json",
  "NamedParameters<typeof useAsset>": "/modules/asset-view/db/ts-interfaces/namedparameterstypeof-useasset.json",
  "NamedParameters<typeof useAssetInfo>": "/modules/asset-view/db/ts-interfaces/namedparameterstypeof-useassetinfo.json",
  "NamedParameters<typeof getAugmentedWordObject>": "/modules/augmented-word-node/db/ts-interfaces/namedparameterstypeof-getaugmentedwordobject.json",
  "NamedParameters<typeof getAugmentedWords>": "/modules/augmented-word-node/db/ts-interfaces/namedparameterstypeof-getaugmentedwords.json",
  "NamedParameters<typeof getBundleAugmentedWords>": "/modules/augmented-word-node/db/ts-interfaces/namedparameterstypeof-getbundleaugmentedwords.json",
  "AugmentedWord": "/modules/writer-input/db/ts-interfaces/augmentedword.json",
  "AugmentedWordObject": "/modules/augmented-word-types/db/ts-interfaces/augmentedwordobject.json",
  "AugmentedWordTypeEnum": "/modules/augmented-word-types/db/ts-interfaces/augmentedwordtypeenum.json",
  "Authorization": "/modules/server-login/db/ts-interfaces/authorization.json",
  "AuthorizationModel": "/modules/peer-types/db/ts-interfaces/authorizationmodel.json",
  "Id": "/modules/todo-types/db/ts-interfaces/id.json",
  "Device": "/modules/server-login/db/ts-interfaces/device.json",
  "NamedParameters<typeof ConfirmForm>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-confirmform.json",
  "NamedParameters<typeof LoginForm>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-loginform.json",
  "NamedParameters<typeof LoginWrapper>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-loginwrapper.json",
  "NamedParameters<typeof MeAuthenticationInfo>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-meauthenticationinfo.json",
  "NamedParameters<typeof PersonProfileDetailsForm>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-personprofiledetailsform.json",
  "NamedParameters<typeof PublicPersonComponent>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-publicpersoncomponent.json",
  "NamedParameters<typeof PublicProfile>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-publicprofile.json",
  "NamedParameters<typeof SignupForm>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-signupform.json",
  "NamedParameters<typeof UpdateMeForm>": "/modules/authentication/db/ts-interfaces/namedparameterstypeof-updatemeform.json",
  "PersonInfo": "/modules/authentication/db/ts-interfaces/personinfo.json",
  "PersonProfileDetails": "/modules/server-login/db/ts-interfaces/personprofiledetails.json",
  "PublicPerson": "/modules/peer-types/db/ts-interfaces/publicperson.json",
  "GroupAuthorizationObject": "/modules/function-types/db/ts-interfaces/groupauthorizationobject.json",
  "NamedParameters<typeof bananaCarrot>": "/modules/bananadev-wrapper/db/ts-interfaces/namedparameterstypeof-bananacarrot.json",
  "NamedParameters<typeof bananaStableDiffusion>": "/modules/bananadev-wrapper/db/ts-interfaces/namedparameterstypeof-bananastablediffusion.json",
  "NamedParameters<typeof bananaWhisper>": "/modules/bananadev-wrapper/db/ts-interfaces/namedparameterstypeof-bananawhisper.json",
  "NamedParameters<typeof getBatteryLevelPercentage>": "/modules/battery/db/ts-interfaces/namedparameterstypeof-getbatterylevelpercentage.json",
  "NamedParameters<typeof isSystemUsingBattery>": "/modules/battery/db/ts-interfaces/namedparameterstypeof-issystemusingbattery.json",
  "NamedParameters<typeof BreadCrumbs>": "/modules/breadcrumbs/db/ts-interfaces/namedparameterstypeof-breadcrumbs.json",
  "NamedParameters<typeof renderBreadCrumbs>": "/modules/breadcrumbs/db/ts-interfaces/namedparameterstypeof-renderbreadcrumbs.json",
  "BrowserPage": "/modules/browser-types/db/ts-interfaces/browserpage.json",
  "BrowserSession": "/modules/puppeteer-utils/db/ts-interfaces/browsersession.json",
  "AppShell": "/modules/bundle-types/db/ts-interfaces/appshell.json",
  "BundleConfig": "/modules/markdown-types/db/ts-interfaces/bundleconfig.json",
  "BundleMarkdownReaderConfig": "/modules/bundle-types/db/ts-interfaces/bundlemarkdownreaderconfig.json",
  "CreateBundleConfig": "/modules/bundle-types/db/ts-interfaces/createbundleconfig.json",
  "CustomisableBundleConfig": "/modules/bundle-types/db/ts-interfaces/customisablebundleconfig.json",
  "EnvironmentVariableObject": "/modules/bundle-types/db/ts-interfaces/environmentvariableobject.json",
  "FinalBundleConfig": "/modules/bundle-types/db/ts-interfaces/finalbundleconfig.json",
  "FinalCreateBundleConfig": "/modules/bundle-types/db/ts-interfaces/finalcreatebundleconfig.json",
  "FinalCustomisableBundleConfig": "/modules/bundle-types/db/ts-interfaces/finalcustomisablebundleconfig.json",
  "FrontBackBundle": "/modules/bundle-types/db/ts-interfaces/frontbackbundle.json",
  "InformationStrategy": "/modules/bundle-types/db/ts-interfaces/informationstrategy.json",
  "Json": "/modules/model-types/db/ts-interfaces/json.json",
  "OperationName": "/modules/bundle-types/db/ts-interfaces/operationname.json",
  "OperationPrivacy": "/modules/bundle-types/db/ts-interfaces/operationprivacy.json",
  "ProjectRelativeFilePath": "/modules/bundle-types/db/ts-interfaces/projectrelativefilepath.json",
  "ProjectRelativeFolderPath": "/modules/bundle-types/db/ts-interfaces/projectrelativefolderpath.json",
  "PublicBundleConfig": "/modules/function-types/db/ts-interfaces/publicbundleconfig.json",
  "ServerOperationName": "/modules/bundle-types/db/ts-interfaces/serveroperationname.json",
  "Slug": "/modules/todo-types/db/ts-interfaces/slug.json",
  "BundleSummary": "/modules/bundle-util/db/ts-interfaces/bundlesummary.json",
  "NamedParameters<typeof getBundleSummary>": "/modules/bundle-util/db/ts-interfaces/namedparameterstypeof-getbundlesummary.json",
  "NamedParameters<typeof getDbModelsForBundle>": "/modules/bundle-util/db/ts-interfaces/namedparameterstypeof-getdbmodelsforbundle.json",
  "ChatMessageAnalysis": "/modules/chat/db/ts-interfaces/chatmessageanalysis.json",
  "Language": "/modules/writer-types/db/ts-interfaces/language.json",
  "NamedParameters<typeof generateInstantResponseMessage>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-generateinstantresponsemessage.json",
  "NamedParameters<typeof getChatMessageAnalysis>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getchatmessageanalysis.json",
  "NamedParameters<typeof getCostPerMessageCredit>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getcostpermessagecredit.json",
  "NamedParameters<typeof getCredit>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getcredit.json",
  "NamedParameters<typeof getMessageLimitInfo>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getmessagelimitinfo.json",
  "NamedParameters<typeof getMessagesAmountCheap>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getmessagesamountcheap.json",
  "NamedParameters<typeof getMessagesAmountMore>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getmessagesamountmore.json",
  "NamedParameters<typeof getMinimumCredit>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getminimumcredit.json",
  "NamedParameters<typeof getPaywallResult>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getpaywallresult.json",
  "NamedParameters<typeof getPersonaStatistics>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getpersonastatistics.json",
  "NamedParameters<typeof getSystemMessage>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getsystemmessage.json",
  "NamedParameters<typeof getSystemMessageOtherLanguage>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-getsystemmessageotherlanguage.json",
  "NamedParameters<typeof jsonGpt>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-jsongpt.json",
  "NamedParameters<typeof proactiveOutreach>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-proactiveoutreach.json",
  "NamedParameters<typeof processMessage>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-processmessage.json",
  "NamedParameters<typeof sendChatAiStatsUpdate>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-sendchataistatsupdate.json",
  "NamedParameters<typeof sendDailyAlarmSms>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-senddailyalarmsms.json",
  "NamedParameters<typeof truncateMessages>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-truncatemessages.json",
  "NamedParameters<typeof weeklyMail>": "/modules/chat/db/ts-interfaces/namedparameterstypeof-weeklymail.json",
  "PersonaStatistics": "/modules/chat/db/ts-interfaces/personastatistics.json",
  "NamedParameters<typeof getChatMessagesPath>": "/modules/chat-message-orm/db/ts-interfaces/namedparameterstypeof-getchatmessagespath.json",
  "NamedParameters<typeof getPerson>": "/modules/chat-message-orm/db/ts-interfaces/namedparameterstypeof-getperson.json",
  "NamedParameters<typeof getPersonPath>": "/modules/chat-message-orm/db/ts-interfaces/namedparameterstypeof-getpersonpath.json",
  "NamedParameters<typeof getPersonSlug>": "/modules/chat-message-orm/db/ts-interfaces/namedparameterstypeof-getpersonslug.json",
  "NamedParameters<typeof insertChatMessages>": "/modules/chat-message-orm/db/ts-interfaces/namedparameterstypeof-insertchatmessages.json",
  "NamedParameters<typeof setPerson>": "/modules/chat-message-orm/db/ts-interfaces/namedparameterstypeof-setperson.json",
  "PersonIndex": "/modules/chat-message-orm/db/ts-interfaces/personindex.json",
  "LoginResponse": "/modules/chatgpt-controller/db/ts-interfaces/loginresponse.json",
  "NamedParameters<typeof chatGPTAuth>": "/modules/chatgpt-controller/db/ts-interfaces/namedparameterstypeof-chatgptauth.json",
  "NamedParameters<typeof detectChatGptPage>": "/modules/chatgpt-controller/db/ts-interfaces/namedparameterstypeof-detectchatgptpage.json",
  "NamedParameters<typeof openAIChat>": "/modules/chatgpt-controller/db/ts-interfaces/namedparameterstypeof-openaichat.json",
  "OpenAIChatProps": "/modules/chatgpt-controller/db/ts-interfaces/openaichatprops.json",
  "OpenAIChatResponseType": "/modules/chatgpt-controller/db/ts-interfaces/openaichatresponsetype.json",
  "Page": "/modules/puppeteer-utils/db/ts-interfaces/page.json",
  "ExecOptions": "/modules/child-process-helper/db/ts-interfaces/execoptions.json",
  "NamedParameters<typeof execAsync>": "/modules/child-process-helper/db/ts-interfaces/namedparameterstypeof-execasync.json",
  "NamedParameters<typeof spawnAsync>": "/modules/child-process-helper/db/ts-interfaces/namedparameterstypeof-spawnasync.json",
  "SpawnOptionsWithoutStdio": "/modules/child-process-helper/db/ts-interfaces/spawnoptionswithoutstdio.json",
  "NamedParameters<typeof cleanupTsDatabase>": "/modules/cleanup-typescript-database/db/ts-interfaces/namedparameterstypeof-cleanuptsdatabase.json",
  "NamedParameters<typeof shouldDeleteTsModel>": "/modules/cleanup-typescript-database/db/ts-interfaces/namedparameterstypeof-shoulddeletetsmodel.json",
  "TsBuildError": "/modules/code-types/db/ts-interfaces/tsbuilderror.json",
  "TsComment": "/modules/function-types/db/ts-interfaces/tscomment.json",
  "TsExport": "/modules/find-all-dependency-operations/db/ts-interfaces/tsexport.json",
  "TsImport": "/modules/markdown-parsings/db/ts-interfaces/tsimport.json",
  "TsInterface": "/modules/markdown-types/db/ts-interfaces/tsinterface.json",
  "TsLintWarning": "/modules/code-types/db/ts-interfaces/tslintwarning.json",
  "TsVariable": "/modules/markdown-parsings/db/ts-interfaces/tsvariable.json",
  "AnyModelType": "/modules/model-types/db/ts-interfaces/anymodeltype.json",
  "CategorizedFilePaths": "/modules/path-util/db/ts-interfaces/categorizedfilepaths.json",
  "CommitInfo": "/modules/code-types/db/ts-interfaces/commitinfo.json",
  "CompilerOptions": "/modules/code-types/db/ts-interfaces/compileroptions.json",
  "ContributorPersonInfo": "/modules/code-types/db/ts-interfaces/contributorpersoninfo.json",
  "Dataset": "/modules/code-types/db/ts-interfaces/dataset.json",
  "DatasetConfig": "/modules/code-types/db/ts-interfaces/datasetconfig.json",
  "DatasetConfigKey": "/modules/code-types/db/ts-interfaces/datasetconfigkey.json",
  "DatasetConfigShape": "/modules/code-types/db/ts-interfaces/datasetconfigshape.json",
  "DatasetFilter": "/modules/code-types/db/ts-interfaces/datasetfilter.json",
  "DatasetFilterOperator": "/modules/code-types/db/ts-interfaces/datasetfilteroperator.json",
  "DatasetSort": "/modules/db-crud/db/ts-interfaces/datasetsort.json",
  "DbStorageMethod": "/modules/fs-orm/db/ts-interfaces/dbstoragemethod.json",
  "ExplorationDetails": "/modules/code-types/db/ts-interfaces/explorationdetails.json",
  "FileContentInfo": "/modules/markdown-types/db/ts-interfaces/filecontentinfo.json",
  "FolderExploration": "/modules/code-types/db/ts-interfaces/folderexploration.json",
  "FolderSummary": "/modules/types/db/ts-interfaces/foldersummary.json",
  "ImportClassification": "/modules/code-types/db/ts-interfaces/importclassification.json",
  "IndexModels": "/modules/code-types/db/ts-interfaces/indexmodels.json",
  "Markdown": "/modules/todo-types/db/ts-interfaces/markdown.json",
  "MaybeInteface": "/modules/index-typescript/db/ts-interfaces/maybeinteface.json",
  "ModelInfo": "/modules/code-types/db/ts-interfaces/modelinfo.json",
  "ModelView": "/modules/code-types/db/ts-interfaces/modelview.json",
  "ModelViewEnum": "/modules/code-types/db/ts-interfaces/modelviewenum.json",
  "Operation": "/modules/operation-util/db/ts-interfaces/operation.json",
  "OperationClassification": "/modules/markdown-parsings/db/ts-interfaces/operationclassification.json",
  "OperationPathParse": "/modules/index-typescript/db/ts-interfaces/operationpathparse.json",
  "OperationRepositoryInfo": "/modules/code-types/db/ts-interfaces/operationrepositoryinfo.json",
  "PackageInfoObject": "/modules/get-imports-exports/db/ts-interfaces/packageinfoobject.json",
  "ParameterName": "/modules/language-types/db/ts-interfaces/parametername.json",
  "PathMetaData": "/modules/code-types/db/ts-interfaces/pathmetadata.json",
  "PathParse": "/modules/code-types/db/ts-interfaces/pathparse.json",
  "PathStats": "/modules/markdown-types/db/ts-interfaces/pathstats.json",
  "Price": "/modules/todo-types/db/ts-interfaces/price.json",
  "Schema": "/modules/types/db/ts-interfaces/schema.json",
  "SimplifiedSchema": "/modules/types/db/ts-interfaces/simplifiedschema.json",
  "SimplifiedSchemaType": "/modules/schema-types/db/ts-interfaces/simplifiedschematype.json",
  "TsConfig": "/modules/get-path/db/ts-interfaces/tsconfig.json",
  "TsIndexModelType": "/modules/model-types/db/ts-interfaces/tsindexmodeltype.json",
  "TsInterfaceProperties": "/modules/code-types/db/ts-interfaces/tsinterfaceproperties.json",
  "TypeInfo": "/modules/types/db/ts-interfaces/typeinfo.json",
  "TypescriptFile": "/modules/code-types/db/ts-interfaces/typescriptfile.json",
  "TypescriptIndex": "/modules/code-types/db/ts-interfaces/typescriptindex.json",
  "TypescriptScopeContent": "/modules/code-types/db/ts-interfaces/typescriptscopecontent.json",
  "TypescriptScopeContext": "/modules/code-types/db/ts-interfaces/typescriptscopecontext.json",
  "TypescriptScopeStatementContext": "/modules/code-types/db/ts-interfaces/typescriptscopestatementcontext.json",
  "TypescriptScopeTypeContext": "/modules/code-types/db/ts-interfaces/typescriptscopetypecontext.json",
  "CommentType": "/modules/read-typescript-file/db/ts-interfaces/commenttype.json",
  "CommentTypeObject": "/modules/schema-types/db/ts-interfaces/commenttypeobject.json",
  "Frontmatter": "/modules/model-types/db/ts-interfaces/frontmatter.json",
  "NamedParameters<typeof stripComment>": "/modules/comment-util/db/ts-interfaces/namedparameterstypeof-stripcomment.json",
  "NamedParameters<typeof stripCommentEnd>": "/modules/comment-util/db/ts-interfaces/namedparameterstypeof-stripcommentend.json",
  "NamedParameters<typeof stripCommentStart>": "/modules/comment-util/db/ts-interfaces/namedparameterstypeof-stripcommentstart.json",
  "NamedParameters<typeof stripSlashes>": "/modules/comment-util/db/ts-interfaces/namedparameterstypeof-stripslashes.json",
  "NamedParameters<typeof stripStar>": "/modules/comment-util/db/ts-interfaces/namedparameterstypeof-stripstar.json",
  "NamedParameters<typeof trim>": "/modules/comment-util/db/ts-interfaces/namedparameterstypeof-trim.json",
  "NamedParameters<typeof trimSurroundingNewlines>": "/modules/comment-util/db/ts-interfaces/namedparameterstypeof-trimsurroundingnewlines.json",
  "NamedParameters<typeof getCompileErrors>": "/modules/compile-typescript/db/ts-interfaces/namedparameterstypeof-getcompileerrors.json",
  "NamedParameters<typeof getTypescriptErrorsFromFiles>": "/modules/compile-typescript/db/ts-interfaces/namedparameterstypeof-gettypescripterrorsfromfiles.json",
  "NamedParameters<typeof writeBuildErrors>": "/modules/compile-typescript/db/ts-interfaces/namedparameterstypeof-writebuilderrors.json",
  "PackageJson": "/modules/compile-typescript/db/ts-interfaces/packagejson.json",
  "Casing": "/modules/convert-case/db/ts-interfaces/casing.json",
  "NamedParameters<typeof camelCase>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-camelcase.json",
  "NamedParameters<typeof capitalCase>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-capitalcase.json",
  "NamedParameters<typeof capitaliseFirstLetter>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-capitalisefirstletter.json",
  "NamedParameters<typeof convertCase>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-convertcase.json",
  "NamedParameters<typeof convertToTargetCasing>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-converttotargetcasing.json",
  "NamedParameters<typeof fileSlugify>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-fileslugify.json",
  "NamedParameters<typeof getDelimiter>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-getdelimiter.json",
  "NamedParameters<typeof humanCase>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-humancase.json",
  "NamedParameters<typeof kebabCase>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-kebabcase.json",
  "NamedParameters<typeof lowerCaseArray>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-lowercasearray.json",
  "NamedParameters<typeof pascalCase>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-pascalcase.json",
  "NamedParameters<typeof slugify>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-slugify.json",
  "NamedParameters<typeof snakeCase>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-snakecase.json",
  "NamedParameters<typeof splitCasingDelimiters>": "/modules/convert-case/db/ts-interfaces/namedparameterstypeof-splitcasingdelimiters.json",
  "NamedParameters<typeof errorToast>": "/modules/cool-toast/db/ts-interfaces/namedparameterstypeof-errortoast.json",
  "NamedParameters<typeof infoToast>": "/modules/cool-toast/db/ts-interfaces/namedparameterstypeof-infotoast.json",
  "NamedParameters<typeof showStandardResponse>": "/modules/cool-toast/db/ts-interfaces/namedparameterstypeof-showstandardresponse.json",
  "NamedParameters<typeof successToast>": "/modules/cool-toast/db/ts-interfaces/namedparameterstypeof-successtoast.json",
  "NamedParameters<typeof warningToast>": "/modules/cool-toast/db/ts-interfaces/namedparameterstypeof-warningtoast.json",
  "StandardizedApiReturnType": "/modules/cool-toast/db/ts-interfaces/standardizedapireturntype.json",
  "CsvItemType": "/modules/csv-util/db/ts-interfaces/csvitemtype.json",
  "NamedParameters<typeof tryParseCsv>": "/modules/csv-util/db/ts-interfaces/namedparameterstypeof-tryparsecsv.json",
  "CsvModelType": "/modules/model-types/db/ts-interfaces/csvmodeltype.json",
  "CsvTestModel": "/modules/database/db/ts-interfaces/csvtestmodel.json",
  "DefaultTestModel": "/modules/database/db/ts-interfaces/defaulttestmodel.json",
  "KeyValueMarkdownModelType": "/modules/todo-types/db/ts-interfaces/keyvaluemarkdownmodeltype.json",
  "KvmdTestModel": "/modules/database/db/ts-interfaces/kvmdtestmodel.json",
  "MarkdownModelType": "/modules/payment-types/db/ts-interfaces/markdownmodeltype.json",
  "MarkdownTestModel": "/modules/database/db/ts-interfaces/markdowntestmodel.json",
  "NamedParameters<typeof generateCsvInstance>": "/modules/database/db/ts-interfaces/namedparameterstypeof-generatecsvinstance.json",
  "NamedParameters<typeof generateJsonSingleInstance>": "/modules/database/db/ts-interfaces/namedparameterstypeof-generatejsonsingleinstance.json",
  "NamedParameters<typeof generateKvmdInstance>": "/modules/database/db/ts-interfaces/namedparameterstypeof-generatekvmdinstance.json",
  "NamedParameters<typeof generateMarkdownInstance>": "/modules/database/db/ts-interfaces/namedparameterstypeof-generatemarkdowninstance.json",
  "NamedParameters<typeof generateSlugTestModel>": "/modules/database/db/ts-interfaces/namedparameterstypeof-generateslugtestmodel.json",
  "NamedParameters<typeof get>": "/modules/database/db/ts-interfaces/namedparameterstypeof-get.json",
  "NamedParameters<typeof getCli>": "/modules/database/db/ts-interfaces/namedparameterstypeof-getcli.json",
  "NamedParameters<typeof getRanomAge>": "/modules/database/db/ts-interfaces/namedparameterstypeof-getranomage.json",
  "NamedParameters<typeof migration>": "/modules/database/db/ts-interfaces/namedparameterstypeof-migration.json",
  "NamedParameters<typeof randomName>": "/modules/database/db/ts-interfaces/namedparameterstypeof-randomname.json",
  "NamedParameters<typeof removeCli>": "/modules/database/db/ts-interfaces/namedparameterstypeof-removecli.json",
  "NamedParameters<typeof set>": "/modules/database/db/ts-interfaces/namedparameterstypeof-set.json",
  "NamedParameters<typeof testOperationModels>": "/modules/database/db/ts-interfaces/namedparameterstypeof-testoperationmodels.json",
  "NamedParameters<typeof testPerformance>": "/modules/database/db/ts-interfaces/namedparameterstypeof-testperformance.json",
  "NamedParameters<typeof updateCli>": "/modules/database/db/ts-interfaces/namedparameterstypeof-updatecli.json",
  "NamedParameters<typeof upsert>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-upsert.json",
  "NamedParameters<typeof upsertCli>": "/modules/database/db/ts-interfaces/namedparameterstypeof-upsertcli.json",
  "SlugTestModel": "/modules/database/db/ts-interfaces/slugtestmodel.json",
  "TestModels": "/modules/database/db/ts-interfaces/testmodels.json",
  "DbCrudStore": "/modules/db-crud/db/ts-interfaces/dbcrudstore.json",
  "NamedParameters<typeof DatasetForm>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-datasetform.json",
  "NamedParameters<typeof getPropertiesDataParameterNames>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-getpropertiesdataparameternames.json",
  "NamedParameters<typeof ModelComponent>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-modelcomponent.json",
  "NamedParameters<typeof openWhatsapp>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-openwhatsapp.json",
  "NamedParameters<typeof SearchBar>": "/modules/layout/db/ts-interfaces/namedparameterstypeof-searchbar.json",
  "NamedParameters<typeof shimmer>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-shimmer.json",
  "NamedParameters<typeof sortToItem>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-sorttoitem.json",
  "NamedParameters<typeof toBase64>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-tobase64.json",
  "NamedParameters<typeof UpsertPage>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-upsertpage.json",
  "NamedParameters<typeof useInfiniteGetDbModel>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-useinfinitegetdbmodel.json",
  "NamedParameters<typeof useModelFromUrl>": "/modules/db-crud/db/ts-interfaces/namedparameterstypeof-usemodelfromurl.json",
  "SchemaProperty": "/modules/schema-util/db/ts-interfaces/schemaproperty.json",
  "CacheLookupResult": "/modules/db-recipes/db/ts-interfaces/cachelookupresult.json",
  "NamedParameters<typeof cacheLookup>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-cachelookup.json",
  "NamedParameters<typeof calculateOperatingSystemBundle>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-calculateoperatingsystembundle.json",
  "NamedParameters<typeof getCachedFunctions>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-getcachedfunctions.json",
  "NamedParameters<typeof getDatabaseMenu>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-getdatabasemenu.json",
  "NamedParameters<typeof getDbModelMetadataWithContext>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-getdbmodelmetadatawithcontext.json",
  "NamedParameters<typeof getDbModelNames>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-getdbmodelnames.json",
  "NamedParameters<typeof getFunctionIndex>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-getfunctionindex.json",
  "NamedParameters<typeof getNestedDatabaseMenu>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-getnesteddatabasemenu.json",
  "NamedParameters<typeof hasDbRecipes>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-hasdbrecipes.json",
  "NamedParameters<typeof makeSrcRelativeFolder>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-makesrcrelativefolder.json",
  "NamedParameters<typeof tsInterfaceToDbMenu>": "/modules/db-recipes/db/ts-interfaces/namedparameterstypeof-tsinterfacetodbmenu.json",
  "NamedParameters<typeof filterInterfacesFromOperationNames>": "/modules/db-util/db/ts-interfaces/namedparameterstypeof-filterinterfacesfromoperationnames.json",
  "NamedParameters<typeof getDbModelsFromOperations>": "/modules/db-util/db/ts-interfaces/namedparameterstypeof-getdbmodelsfromoperations.json",
  "NamedParameters<typeof detectFolderLanguage>": "/modules/detect-language/db/ts-interfaces/namedparameterstypeof-detectfolderlanguage.json",
  "NamedParameters<typeof detectLanguage>": "/modules/detect-language/db/ts-interfaces/namedparameterstypeof-detectlanguage.json",
  "NamedParameters<typeof docToMd>": "/modules/doc-to-md/db/ts-interfaces/namedparameterstypeof-doctomd.json",
  "NamedParameters<typeof docxToMd>": "/modules/doc-to-md/db/ts-interfaces/namedparameterstypeof-docxtomd.json",
  "NamedParameters<typeof runTests>": "/modules/doc-to-md/db/ts-interfaces/namedparameterstypeof-runtests.json",
  "NamedParameters<typeof docsGetPages>": "/modules/docs-get-pages/db/ts-interfaces/namedparameterstypeof-docsgetpages.json",
  "NamedParameters<typeof getPublicMarkdownFilePaths>": "/modules/docs-get-pages/db/ts-interfaces/namedparameterstypeof-getpublicmarkdownfilepaths.json",
  "NamedParameters<typeof removeExtensionsFromPath>": "/modules/docs-get-pages/db/ts-interfaces/namedparameterstypeof-removeextensionsfrompath.json",
  "NamedParameters<typeof removeNumberPrefix>": "/modules/docs-get-pages/db/ts-interfaces/namedparameterstypeof-removenumberprefix.json",
  "NamedParameters<typeof shouldExposeMarkdownFile>": "/modules/docs-get-pages/db/ts-interfaces/namedparameterstypeof-shouldexposemarkdownfile.json",
  "NamedParameters<typeof stripReadmeFromFolder>": "/modules/docs-get-pages/db/ts-interfaces/namedparameterstypeof-stripreadmefromfolder.json",
  "NamedParameters<typeof exploreOperation>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-exploreoperation.json",
  "NamedParameters<typeof exploreProject>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-exploreproject.json",
  "NamedParameters<typeof getExplorationType>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-getexplorationtype.json",
  "NamedParameters<typeof getFileWithExtension>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-getfilewithextension.json",
  "NamedParameters<typeof getFrontmattersMappedObject>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-getfrontmattersmappedobject.json",
  "NamedParameters<typeof getInstanceNames>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-getinstancenames.json",
  "NamedParameters<typeof getProjectRelativePaths>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-getprojectrelativepaths.json",
  "NamedParameters<typeof getTodoPages>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-gettodopages.json",
  "NamedParameters<typeof getTodoPaths>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-gettodopaths.json",
  "NamedParameters<typeof hasSameProjectPath>": "/modules/explore-project/db/ts-interfaces/namedparameterstypeof-hassameprojectpath.json",
  "RelativePathType": "/modules/explore-project/db/ts-interfaces/relativepathtype.json",
  "TodoPagesConfig": "/modules/todo-types/db/ts-interfaces/todopagesconfig.json",
  "NamedParameters<typeof useCustomProjectRelativeBaseFolderPath>": "/modules/explorer-core-ui/db/ts-interfaces/namedparameterstypeof-usecustomprojectrelativebasefolderpath.json",
  "NamedParameters<typeof useEditor>": "/modules/explorer-core-ui/db/ts-interfaces/namedparameterstypeof-useeditor.json",
  "NamedParameters<typeof useQueryPath>": "/modules/explorer-core-ui/db/ts-interfaces/namedparameterstypeof-usequerypath.json",
  "NamedParameters<typeof ContentSearch>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-contentsearch.json",
  "NamedParameters<typeof Explorer>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-explorer.json",
  "NamedParameters<typeof FolderMenu>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-foldermenu.json",
  "NamedParameters<typeof FoldersPiece>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-folderspiece.json",
  "NamedParameters<typeof PathSearch>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-pathsearch.json",
  "NamedParameters<typeof QueueStatusComponent>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-queuestatuscomponent.json",
  "NamedParameters<typeof RecentPinned>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-recentpinned.json",
  "NamedParameters<typeof SearchResultComponent>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-searchresultcomponent.json",
  "NamedParameters<typeof SearchResultPage>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-searchresultpage.json",
  "NamedParameters<typeof setConfig>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-setconfig.json",
  "NamedParameters<typeof SettingsPage>": "/modules/explorer-ui/db/ts-interfaces/namedparameterstypeof-settingspage.json",
  "SearchResult": "/modules/search-types/db/ts-interfaces/searchresult.json",
  "NamedParameters<typeof FancyLoader>": "/modules/fancy-loader/db/ts-interfaces/namedparameterstypeof-fancyloader.json",
  "NamedParameters<typeof compressConvert>": "/modules/ffmpeg-util/db/ts-interfaces/namedparameterstypeof-compressconvert.json",
  "NamedParameters<typeof compressImages>": "/modules/ffmpeg-util/db/ts-interfaces/namedparameterstypeof-compressimages.json",
  "NamedParameters<typeof compressImagesCli>": "/modules/ffmpeg-util/db/ts-interfaces/namedparameterstypeof-compressimagescli.json",
  "NamedParameters<typeof compressMp4>": "/modules/ffmpeg-util/db/ts-interfaces/namedparameterstypeof-compressmp4.json",
  "NamedParameters<typeof compressMp4sCli>": "/modules/ffmpeg-util/db/ts-interfaces/namedparameterstypeof-compressmp4scli.json",
  "NamedParameters<typeof convertToMp3>": "/modules/ffmpeg-util/db/ts-interfaces/namedparameterstypeof-converttomp3.json",
  "NamedParameters<typeof convertToMp4>": "/modules/ffmpeg-util/db/ts-interfaces/namedparameterstypeof-converttomp4.json",
  "NamedParameters<typeof getFileCollectionPathsWithContext>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-getfilecollectionpathswithcontext.json",
  "NamedParameters<typeof getFileCollectionStatusWithContext>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-getfilecollectionstatuswithcontext.json",
  "NamedParameters<typeof getFileCollectionWithContext>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-getfilecollectionwithcontext.json",
  "NamedParameters<typeof getFolderContents>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-getfoldercontents.json",
  "NamedParameters<typeof getFolderFileCollections>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-getfolderfilecollections.json",
  "NamedParameters<typeof getNavigationWithContext>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-getnavigationwithcontext.json",
  "NamedParameters<typeof getOpenFilesWithContext>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-getopenfileswithcontext.json",
  "NamedParameters<typeof getQueryInfo>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-getqueryinfo.json",
  "NamedParameters<typeof removeInactiveOpenFiles>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-removeinactiveopenfiles.json",
  "NamedParameters<typeof setOpenFileWithContext>": "/modules/file-collection-functions/db/ts-interfaces/namedparameterstypeof-setopenfilewithcontext.json",
  "FileCollection": "/modules/file-collection-util/db/ts-interfaces/filecollection.json",
  "FileCollectionFile": "/modules/generative-ui/db/ts-interfaces/filecollectionfile.json",
  "FileCollectionObject": "/modules/file-collection-util/db/ts-interfaces/filecollectionobject.json",
  "NamedParameters<typeof getFileCollectionBasename>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-getfilecollectionbasename.json",
  "NamedParameters<typeof getFileCollectionPaths>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-getfilecollectionpaths.json",
  "NamedParameters<typeof getMarkdownIndex>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-getmarkdownindex.json",
  "NamedParameters<typeof getMarkdownIndexPath>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-getmarkdownindexpath.json",
  "NamedParameters<typeof getOnlyUniqueFileCollectionsFromDirentsFilter>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-getonlyuniquefilecollectionsfromdirentsfilter.json",
  "NamedParameters<typeof getPrimaryFileFromFileCollection>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-getprimaryfilefromfilecollection.json",
  "NamedParameters<typeof isFileCollection>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-isfilecollection.json",
  "NamedParameters<typeof onlyUniqueFileCollectionsFilter>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-onlyuniquefilecollectionsfilter.json",
  "NamedParameters<typeof readFolderFileCollections>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-readfolderfilecollections.json",
  "NamedParameters<typeof renameFileCollection>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-renamefilecollection.json",
  "NamedParameters<typeof renameFileCollectionWithContext>": "/modules/file-collection-util/db/ts-interfaces/namedparameterstypeof-renamefilecollectionwithcontext.json",
  "RenameResult": "/modules/file-collection-util/db/ts-interfaces/renameresult.json",
  "NamedParameters<typeof fileExplorerOpen>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-fileexploreropen.json",
  "NamedParameters<typeof getFileType>": "/modules/file-icons/db/ts-interfaces/namedparameterstypeof-getfiletype.json",
  "TypeIconEnum": "/modules/file-icons/db/ts-interfaces/typeiconenum.json",
  "NamedParameters<typeof MatchingText>": "/modules/file-search/db/ts-interfaces/namedparameterstypeof-matchingtext.json",
  "NamedParameters<typeof PathSearchResults>": "/modules/file-search/db/ts-interfaces/namedparameterstypeof-pathsearchresults.json",
  "FileTabsStoreType": "/modules/file-tabs/db/ts-interfaces/filetabsstoretype.json",
  "NamedParameters<typeof OpenFileWriterPages>": "/modules/file-writer/db/ts-interfaces/namedparameterstypeof-openfilewriterpages.json",
  "NamedParameters<typeof WriterLayout>": "/modules/file-writer/db/ts-interfaces/namedparameterstypeof-writerlayout.json",
  "PagesObjectShape": "/modules/file-writer/db/ts-interfaces/pagesobjectshape.json",
  "ActionStatus": "/modules/filename-conventions/db/ts-interfaces/actionstatus.json",
  "DropboxExtension": "/modules/filename-conventions/db/ts-interfaces/dropboxextension.json",
  "JsonExtension": "/modules/filename-conventions/db/ts-interfaces/jsonextension.json",
  "MarkdownExtension": "/modules/filename-conventions/db/ts-interfaces/markdownextension.json",
  "NamedParameters<typeof getFileTypeFromPath>": "/modules/filename-conventions/db/ts-interfaces/namedparameterstypeof-getfiletypefrompath.json",
  "NamedParameters<typeof getWriterType>": "/modules/filename-conventions/db/ts-interfaces/namedparameterstypeof-getwritertype.json",
  "NamedParameters<typeof hasSubExtension>": "/modules/filename-conventions/db/ts-interfaces/namedparameterstypeof-hassubextension.json",
  "NamedParameters<typeof isGeneratedOperation>": "/modules/filename-conventions/db/ts-interfaces/namedparameterstypeof-isgeneratedoperation.json",
  "NamedParameters<typeof isGeneratedOperationName>": "/modules/filename-conventions/db/ts-interfaces/namedparameterstypeof-isgeneratedoperationname.json",
  "NamedParameters<typeof isIndexableFileId>": "/modules/filename-conventions/db/ts-interfaces/namedparameterstypeof-isindexablefileid.json",
  "SearchableExtension": "/modules/rebuild-operation/db/ts-interfaces/searchableextension.json",
  "SearchLevel": "/modules/filename-conventions/db/ts-interfaces/searchlevel.json",
  "TypescriptExtension": "/modules/filename-conventions/db/ts-interfaces/typescriptextension.json",
  "WriterType": "/modules/filename-conventions/db/ts-interfaces/writertype.json",
  "DependencyTree": "/modules/find-all-dependency-operations/db/ts-interfaces/dependencytree.json",
  "DependencyTreeChildObject": "/modules/find-all-dependency-operations/db/ts-interfaces/dependencytreechildobject.json",
  "NamedParameters<typeof findDependantsRecursivelyTest>": "/modules/find-all-dependency-operations/db/ts-interfaces/namedparameterstypeof-finddependantsrecursivelytest.json",
  "NamedParameters<typeof findMonorepoExports>": "/modules/find-all-dependency-operations/db/ts-interfaces/namedparameterstypeof-findmonorepoexports.json",
  "NamedParameters<typeof findMonorepoImports>": "/modules/find-all-dependency-operations/db/ts-interfaces/namedparameterstypeof-findmonorepoimports.json",
  "NamedParameters<typeof getDependencyTree>": "/modules/find-all-dependency-operations/db/ts-interfaces/namedparameterstypeof-getdependencytree.json",
  "NamedParameters<typeof getOldDependencyTree>": "/modules/find-all-dependency-operations/db/ts-interfaces/namedparameterstypeof-getolddependencytree.json",
  "NamedParameters<typeof getOperationDependencyReasons>": "/modules/find-all-dependency-operations/db/ts-interfaces/namedparameterstypeof-getoperationdependencyreasons.json",
  "NamedParameters<typeof test2>": "/modules/read-kvmd-file/db/ts-interfaces/namedparameterstypeof-test2.json",
  "NamedParameters<typeof folderGetUpdatedAt>": "/modules/folder-get-updated-at/db/ts-interfaces/namedparameterstypeof-foldergetupdatedat.json",
  "FrontmatterParse": "/modules/matter-types/db/ts-interfaces/frontmatterparse.json",
  "FrontmatterValue": "/modules/frontmatter-util/db/ts-interfaces/frontmattervalue.json",
  "NamedParameters<typeof frontmatterParseToString>": "/modules/frontmatter-util/db/ts-interfaces/namedparameterstypeof-frontmatterparsetostring.json",
  "NamedParameters<typeof frontmatterToObject>": "/modules/frontmatter-util/db/ts-interfaces/namedparameterstypeof-frontmattertoobject.json",
  "NamedParameters<typeof getFrontmatterValueString>": "/modules/frontmatter-util/db/ts-interfaces/namedparameterstypeof-getfrontmattervaluestring.json",
  "NamedParameters<typeof markdownModelTypeToMarkdownString>": "/modules/frontmatter-util/db/ts-interfaces/namedparameterstypeof-markdownmodeltypetomarkdownstring.json",
  "NamedParameters<typeof objectToFrontmatter>": "/modules/frontmatter-util/db/ts-interfaces/namedparameterstypeof-objecttofrontmatter.json",
  "NamedParameters<typeof parseFrontmatterString>": "/modules/frontmatter-util/db/ts-interfaces/namedparameterstypeof-parsefrontmatterstring.json",
  "NamedParameters<typeof quotedOrNot>": "/modules/frontmatter-util/db/ts-interfaces/namedparameterstypeof-quotedornot.json",
  "NamedParameters<typeof stringifyNewlines>": "/modules/frontmatter-util/db/ts-interfaces/namedparameterstypeof-stringifynewlines.json",
  "NamedParameters<typeof getFsAuthorizationSingleFile>": "/modules/fs-authorization/db/ts-interfaces/namedparameterstypeof-getfsauthorizationsinglefile.json",
  "NamedParameters<typeof getFsAuthorizationTestables>": "/modules/fs-authorization/db/ts-interfaces/namedparameterstypeof-getfsauthorizationtestables.json",
  "NamedParameters<typeof getFsAuthorizationWithContext>": "/modules/fs-authorization/db/ts-interfaces/namedparameterstypeof-getfsauthorizationwithcontext.json",
  "AnyModelObject": "/modules/fs-orm/db/ts-interfaces/anymodelobject.json",
  "CategoryStack": "/modules/todo-types/db/ts-interfaces/categorystack.json",
  "CustomQueryConfig": "/modules/fs-orm/db/ts-interfaces/customqueryconfig.json",
  "DbFileLocation": "/modules/read-kvmd-file/db/ts-interfaces/dbfilelocation.json",
  "DbQueryResult": "/modules/fs-orm/db/ts-interfaces/dbqueryresult.json",
  "IncludeConfig": "/modules/fs-orm/db/ts-interfaces/includeconfig.json",
  "IncludeDataObject": "/modules/fs-orm/db/ts-interfaces/includedataobject.json",
  "Include": "/modules/fs-orm/db/ts-interfaces/include.json",
  "MergedQueryConfig": "/modules/fs-orm/db/ts-interfaces/mergedqueryconfig.json",
  "ModelLocation": "/modules/model-types/db/ts-interfaces/modellocation.json",
  "NamedParameters<typeof augmentItemWithReferencedDataRecursively>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-augmentitemwithreferenceddatarecursively.json",
  "NamedParameters<typeof findParent>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-findparent.json",
  "NamedParameters<typeof getAugmentedData>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getaugmenteddata.json",
  "NamedParameters<typeof getDatabaseFiles>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getdatabasefiles.json",
  "NamedParameters<typeof getDatabaseRootFolder>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getdatabaserootfolder.json",
  "NamedParameters<typeof getDbFileLocation>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getdbfilelocation.json",
  "NamedParameters<typeof getDbStorageMethodExtension>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getdbstoragemethodextension.json",
  "NamedParameters<typeof getLocationPattern>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getlocationpattern.json",
  "NamedParameters<typeof getParentSlug>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getparentslug.json",
  "NamedParameters<typeof getWildcardDbFileLocations__OLD>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getwildcarddbfilelocations-old.json",
  "NamedParameters<typeof getWildcardDbFileLocations>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getwildcarddbfilelocations.json",
  "NamedParameters<typeof removeKeyValueMarkdown>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-removekeyvaluemarkdown.json",
  "NamedParameters<typeof upsertKeyValueMarkdown>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-upsertkeyvaluemarkdown.json",
  "NamedParameters<typeof addDefaultValues>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-adddefaultvalues.json",
  "NamedParameters<typeof calculateOperationsObject>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-calculateoperationsobject.json",
  "NamedParameters<typeof createDb>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-createdb.json",
  "NamedParameters<typeof getDefaultLocationPattern>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getdefaultlocationpattern.json",
  "NamedParameters<typeof getMergedConfigOperationPath>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getmergedconfigoperationpath.json",
  "NamedParameters<typeof getRootFolders>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-getrootfolders.json",
  "NamedParameters<typeof waitForLockfile>": "/modules/fs-orm/db/ts-interfaces/namedparameterstypeof-waitforlockfile.json",
  "QueryConfig": "/modules/fs-orm/db/ts-interfaces/queryconfig.json",
  "RootDbFolder": "/modules/fs-orm/db/ts-interfaces/rootdbfolder.json",
  "UpsertKeyValueMarkdownItem": "/modules/fs-orm/db/ts-interfaces/upsertkeyvaluemarkdownitem.json",
  "UpsertQueryConfig": "/modules/fs-orm/db/ts-interfaces/upsertqueryconfig.json",
  "Dir": "/modules/fs-util/db/ts-interfaces/dir.json",
  "Dirent": "/modules/fs-util/db/ts-interfaces/dirent.json",
  "FolderPath": "/modules/fs-util/db/ts-interfaces/folderpath.json",
  "Fs": "/modules/fs-util/db/ts-interfaces/fs.json",
  "MarkdownContent": "/modules/fs-util/db/ts-interfaces/markdowncontent.json",
  "NamedParameters<typeof findFileNameCaseInsensitive>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-findfilenamecaseinsensitive.json",
  "NamedParameters<typeof getFileName>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getfilename.json",
  "NamedParameters<typeof getFolder>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getfolder.json",
  "NamedParameters<typeof getLastFolder>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getlastfolder.json",
  "NamedParameters<typeof getPathCombinations>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getpathcombinations.json",
  "NamedParameters<typeof parseMd>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-parsemd.json",
  "NamedParameters<typeof removeAllExcept>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-removeallexcept.json",
  "NamedParameters<typeof copyAllRelativeFiles>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-copyallrelativefiles.json",
  "NamedParameters<typeof fileExistsWithCaseSync>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-fileexistswithcasesync.json",
  "NamedParameters<typeof findClosestAbsolutePath>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-findclosestabsolutepath.json",
  "NamedParameters<typeof getAllFoldersUntilFolder>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getallfoldersuntilfolder.json",
  "NamedParameters<typeof getFirstAvailableFilename>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getfirstavailablefilename.json",
  "NamedParameters<typeof getFirstFile>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getfirstfile.json",
  "NamedParameters<typeof getFolderSize>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getfoldersize.json",
  "NamedParameters<typeof getFolderSizeObject>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getfoldersizeobject.json",
  "NamedParameters<typeof getOneFolderUpPath>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-getonefolderuppath.json",
  "NamedParameters<typeof oneUp>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-oneup.json",
  "NamedParameters<typeof readFrontmatter>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-readfrontmatter.json",
  "NamedParameters<typeof renameAndCreate>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-renameandcreate.json",
  "NamedParameters<typeof returnReadmePathFromFolder>": "/modules/fs-util/db/ts-interfaces/namedparameterstypeof-returnreadmepathfromfolder.json",
  "PathLike": "/modules/fs-util/db/ts-interfaces/pathlike.json",
  "Path": "/modules/read-typescript-file/db/ts-interfaces/path.json",
  "Stats": "/modules/fs-util/db/ts-interfaces/stats.json",
  "UnixTimestamp": "/modules/fs-util/db/ts-interfaces/unixtimestamp.json",
  "NamedParameters<typeof join>": "/modules/fs-util-js/db/ts-interfaces/namedparameterstypeof-join.json",
  "NamedParameters<typeof makeRelative>": "/modules/fs-util-js/db/ts-interfaces/namedparameterstypeof-makerelative.json",
  "NamedParameters<typeof getFileFunctions>": "/modules/function-functions-node/db/ts-interfaces/namedparameterstypeof-getfilefunctions.json",
  "NamedParameters<typeof getFunctionExecutions>": "/modules/function-functions-node/db/ts-interfaces/namedparameterstypeof-getfunctionexecutions.json",
  "NamedParameters<typeof getFunctionQueryPaths>": "/modules/function-functions-node/db/ts-interfaces/namedparameterstypeof-getfunctionquerypaths.json",
  "NamedParameters<typeof getPublicBundleConfig>": "/modules/function-functions-node/db/ts-interfaces/namedparameterstypeof-getpublicbundleconfig.json",
  "NamedParameters<typeof getSrcRelativeFolderPath>": "/modules/function-functions-node/db/ts-interfaces/namedparameterstypeof-getsrcrelativefolderpath.json",
  "NamedParameters<typeof getTsFunction>": "/modules/function-server-endpoints/db/ts-interfaces/namedparameterstypeof-gettsfunction.json",
  "NamedParameters<typeof isPathParameter>": "/modules/function-functions-node/db/ts-interfaces/namedparameterstypeof-ispathparameter.json",
  "IPInfo": "/modules/peer-types/db/ts-interfaces/ipinfo.json",
  "IResult": "/modules/peer-types/db/ts-interfaces/iresult.json",
  "NamedParameters<typeof calculateDeviceName>": "/modules/function-server-endpoints/db/ts-interfaces/namedparameterstypeof-calculatedevicename.json",
  "NamedParameters<typeof getAuthorizationInfo>": "/modules/function-server-endpoints/db/ts-interfaces/namedparameterstypeof-getauthorizationinfo.json",
  "NamedParameters<typeof isGetEndpoint>": "/modules/function-server-endpoints/db/ts-interfaces/namedparameterstypeof-isgetendpoint.json",
  "NamedParameters<typeof isRawEndpoint>": "/modules/function-server-endpoints/db/ts-interfaces/namedparameterstypeof-israwendpoint.json",
  "NamedParameters<typeof savePageVisit>": "/modules/function-server-endpoints/db/ts-interfaces/namedparameterstypeof-savepagevisit.json",
  "NamedParameters<typeof storeFunctionExecution>": "/modules/function-server-endpoints/db/ts-interfaces/namedparameterstypeof-storefunctionexecution.json",
  "PerformanceItem": "/modules/measure-performance/db/ts-interfaces/performanceitem.json",
  "FunctionClassification": "/modules/function-types/db/ts-interfaces/functionclassification.json",
  "FunctionData": "/modules/function-types/db/ts-interfaces/functiondata.json",
  "FunctionParameter": "/modules/function-util/db/ts-interfaces/functionparameter.json",
  "Group": "/modules/server-login/db/ts-interfaces/group.json",
  "NamedParameters<typeof getExamples>": "/modules/function-types/db/ts-interfaces/namedparameterstypeof-getexamples.json",
  "NamedParameters<typeof getFunctionExersize>": "/modules/function-types/db/ts-interfaces/namedparameterstypeof-getfunctionexersize.json",
  "QueueFunctionConfig": "/modules/function-types/db/ts-interfaces/queuefunctionconfig.json",
  "RunEveryPeriodEnum": "/modules/payment-types/db/ts-interfaces/runeveryperiodenum.json",
  "SizeSummary": "/modules/types/db/ts-interfaces/sizesummary.json",
  "StandardResponse": "/modules/function-types/db/ts-interfaces/standardresponse.json",
  "TsFunctionIndex": "/modules/function-types/db/ts-interfaces/tsfunctionindex.json",
  "WatchEventType": "/modules/index-typescript/db/ts-interfaces/watcheventtype.json",
  "FnMatch": "/modules/function-util/db/ts-interfaces/fnmatch.json",
  "NamedParameters<typeof converse>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-converse.json",
  "NamedParameters<typeof doCli>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-docli.json",
  "NamedParameters<typeof executeSdkFunction>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-executesdkfunction.json",
  "NamedParameters<typeof getCachedExportedFunctions>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-getcachedexportedfunctions.json",
  "NamedParameters<typeof getMenu>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-getmenu.json",
  "NamedParameters<typeof getParameters>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-getparameters.json",
  "NamedParameters<typeof getParametersAndExecute>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-getparametersandexecute.json",
  "NamedParameters<typeof getSdkFunctionPaths>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-getsdkfunctionpaths.json",
  "NamedParameters<typeof listen>": "/modules/function-util/db/ts-interfaces/namedparameterstypeof-listen.json",
  "ImportStatement": "/modules/generate-index/db/ts-interfaces/importstatement.json",
  "NamedParameters<typeof generateNamedIndex>": "/modules/generate-index/db/ts-interfaces/namedparameterstypeof-generatenamedindex.json",
  "NamedParameters<typeof generateSimpleIndex>": "/modules/generate-index/db/ts-interfaces/namedparameterstypeof-generatesimpleindex.json",
  "NamedParameters<typeof isTestFn>": "/modules/generate-index/db/ts-interfaces/namedparameterstypeof-istestfn.json",
  "NamedParameters<typeof mapToImportStatement>": "/modules/generate-index/db/ts-interfaces/namedparameterstypeof-maptoimportstatement.json",
  "NamedParameters<typeof getContextualPromptResults>": "/modules/generative-functions-node/db/ts-interfaces/namedparameterstypeof-getcontextualpromptresults.json",
  "NamedParameters<typeof getContextualPrompts>": "/modules/generative-functions-node/db/ts-interfaces/namedparameterstypeof-getcontextualprompts.json",
  "NamedParameters<typeof getContextualPromptsArray>": "/modules/generative-functions-node/db/ts-interfaces/namedparameterstypeof-getcontextualpromptsarray.json",
  "NamedParameters<typeof getFolderRelativeScopeDbFilePath>": "/modules/generative-functions-node/db/ts-interfaces/namedparameterstypeof-getfolderrelativescopedbfilepath.json",
  "NamedParameters<typeof Dataset>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-dataset.json",
  "NamedParameters<typeof FileActions>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-fileactions.json",
  "NamedParameters<typeof FileCollectionPage>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-filecollectionpage.json",
  "NamedParameters<typeof FileSpecificPrompts>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-filespecificprompts.json",
  "NamedParameters<typeof FileWriter>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-filewriter.json",
  "NamedParameters<typeof getReaderPageInfo>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-getreaderpageinfo.json",
  "NamedParameters<typeof MyLayout>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-mylayout.json",
  "NamedParameters<typeof openDownload>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-opendownload.json",
  "NamedParameters<typeof PromptButton>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-promptbutton.json",
  "NamedParameters<typeof PromptViewer>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-promptviewer.json",
  "NamedParameters<typeof TextFile>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-textfile.json",
  "NamedParameters<typeof TextWriter>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-textwriter.json",
  "NamedParameters<typeof TranscriptionPlayer>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-transcriptionplayer.json",
  "NamedParameters<typeof useOnFocus>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-useonfocus.json",
  "NamedParameters<typeof useVariantResult>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-usevariantresult.json",
  "NamedParameters<typeof VariantSelector>": "/modules/generative-ui/db/ts-interfaces/namedparameterstypeof-variantselector.json",
  "Address": "/modules/geo-types/db/ts-interfaces/address.json",
  "Area": "/modules/geo-types/db/ts-interfaces/area.json",
  "Circle": "/modules/geo-types/db/ts-interfaces/circle.json",
  "City": "/modules/geo-types/db/ts-interfaces/city.json",
  "Country": "/modules/geo-types/db/ts-interfaces/country.json",
  "DistantObject": "/modules/geo-types/db/ts-interfaces/distantobject.json",
  "Location": "/modules/social-media-types/db/ts-interfaces/location.json",
  "Polygon": "/modules/geo-types/db/ts-interfaces/polygon.json",
  "Position": "/modules/peer-types/db/ts-interfaces/position.json",
  "SpacePosition": "/modules/geo-types/db/ts-interfaces/spaceposition.json",
  "NamedParameters<typeof getImportedDependencies>": "/modules/get-imported-dependencies/db/ts-interfaces/namedparameterstypeof-getimporteddependencies.json",
  "NamedParameters<typeof getPackage>": "/modules/get-imported-dependencies/db/ts-interfaces/namedparameterstypeof-getpackage.json",
  "NamedParameters<typeof isAbsoluteImport>": "/modules/get-imported-dependencies/db/ts-interfaces/namedparameterstypeof-isabsoluteimport.json",
  "NamedParameters<typeof calculatePackageJsonDependencies>": "/modules/get-imports-exports/db/ts-interfaces/namedparameterstypeof-calculatepackagejsondependencies.json",
  "NamedParameters<typeof findAndWriteImportsExports>": "/modules/get-imports-exports/db/ts-interfaces/namedparameterstypeof-findandwriteimportsexports.json",
  "NamedParameters<typeof getImportsExportsTest>": "/modules/get-imports-exports/db/ts-interfaces/namedparameterstypeof-getimportsexportstest.json",
  "NamedParameters<typeof getPackageNameFromAbsoluteImport>": "/modules/get-imports-exports/db/ts-interfaces/namedparameterstypeof-getpackagenamefromabsoluteimport.json",
  "NamedParameters<typeof isAbsoluteImportBuiltin>": "/modules/get-imports-exports/db/ts-interfaces/namedparameterstypeof-isabsoluteimportbuiltin.json",
  "NamedParameters<typeof isImportFromOptionalFile>": "/modules/get-imports-exports/db/ts-interfaces/namedparameterstypeof-isimportfromoptionalfile.json",
  "NamedParameters<typeof isImportGenerated>": "/modules/get-imports-exports/db/ts-interfaces/namedparameterstypeof-isimportgenerated.json",
  "NamedParameters<typeof writeResult>": "/modules/get-imports-exports/db/ts-interfaces/namedparameterstypeof-writeresult.json",
  "NamedParameters<typeof getOperationBins>": "/modules/get-package-json/db/ts-interfaces/namedparameterstypeof-getoperationbins.json",
  "NamedParameters<typeof getOperationPackageName>": "/modules/get-package-json/db/ts-interfaces/namedparameterstypeof-getoperationpackagename.json",
  "NamedParameters<typeof getPackageJson>": "/modules/get-package-json/db/ts-interfaces/namedparameterstypeof-getpackagejson.json",
  "NamedParameters<typeof getPackageSourcePaths>": "/modules/get-package-source-paths/db/ts-interfaces/namedparameterstypeof-getpackagesourcepaths.json",
  "ModuleKind": "/modules/get-path/db/ts-interfaces/modulekind.json",
  "ModuleResolutionKind": "/modules/get-path/db/ts-interfaces/moduleresolutionkind.json",
  "NamedParameters<typeof findOperationBasePath>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-findoperationbasepath.json",
  "NamedParameters<typeof findOperationBasePathWithClassification>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-findoperationbasepathwithclassification.json",
  "NamedParameters<typeof getAllPackageJsonDependencies>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getallpackagejsondependencies.json",
  "NamedParameters<typeof getCommonAncestor>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getcommonancestor.json",
  "NamedParameters<typeof getCommonAncestorMultiple>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getcommonancestormultiple.json",
  "NamedParameters<typeof getFolderPath>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getfolderpath.json",
  "NamedParameters<typeof getOperationClassification>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getoperationclassification.json",
  "NamedParameters<typeof getOperationClassificationObject>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getoperationclassificationobject.json",
  "NamedParameters<typeof getOperationPath>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getoperationpath.json",
  "NamedParameters<typeof getOperationPathParse>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getoperationpathparse.json",
  "NamedParameters<typeof getOperationRelativePath>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getoperationrelativepath.json",
  "NamedParameters<typeof getPathParse>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getpathparse.json",
  "NamedParameters<typeof getPathsWithOperations>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getpathswithoperations.json",
  "NamedParameters<typeof getProjectRoot>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getprojectroot.json",
  "NamedParameters<typeof getRelativeLinkPath>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getrelativelinkpath.json",
  "NamedParameters<typeof getRelativePath>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getrelativepath.json",
  "NamedParameters<typeof getSrcRelativeFileId>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getsrcrelativefileid.json",
  "NamedParameters<typeof getSubExtensions>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-getsubextensions.json",
  "NamedParameters<typeof hasDependency>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-hasdependency.json",
  "NamedParameters<typeof hasProjectRootFile>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-hasprojectrootfile.json",
  "NamedParameters<typeof isBundle>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-isbundle.json",
  "NamedParameters<typeof isOperation>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-isoperation.json",
  "NamedParameters<typeof isUiOperation>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-isuioperation.json",
  "NamedParameters<typeof isWorkspaceRoot>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-isworkspaceroot.json",
  "NamedParameters<typeof packageCompilesTs>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-packagecompilests.json",
  "NamedParameters<typeof tsconfigCompilesEsm>": "/modules/get-path/db/ts-interfaces/namedparameterstypeof-tsconfigcompilesesm.json",
  "OperationClassificationObject": "/modules/get-path/db/ts-interfaces/operationclassificationobject.json",
  "NamedParameters<typeof getTsConfig>": "/modules/get-ts-config/db/ts-interfaces/namedparameterstypeof-gettsconfig.json",
  "NamedParameters<typeof getAllOperations>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-getalloperations.json",
  "NamedParameters<typeof getAllPackagesNames>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-getallpackagesnames.json",
  "NamedParameters<typeof getGithubPersonalAccessToken>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-getgithubpersonalaccesstoken.json",
  "NamedParameters<typeof getGithubRepoLastCommitInfo>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-getgithubrepolastcommitinfo.json",
  "NamedParameters<typeof getRepoNameFromRepositoryUrl>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-getreponamefromrepositoryurl.json",
  "NamedParameters<typeof initializeGitOrUseExistingAndPull>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-initializegitoruseexistingandpull.json",
  "NamedParameters<typeof initializeGitOrUseExistingAndPush>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-initializegitoruseexistingandpush.json",
  "NamedParameters<typeof operationGithubPull>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-operationgithubpull.json",
  "NamedParameters<typeof operationGithubPush>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-operationgithubpush.json",
  "NamedParameters<typeof pullMultipleOperations>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-pullmultipleoperations.json",
  "NamedParameters<typeof pushMultipleOperations>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-pushmultipleoperations.json",
  "NamedParameters<typeof readAndWriteToPackageJsonExample>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-readandwritetopackagejsonexample.json",
  "NamedParameters<typeof updateAllOperationStatus>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-updatealloperationstatus.json",
  "NamedParameters<typeof updateAllOperationStatusTest>": "/modules/github-operation-sync/db/ts-interfaces/namedparameterstypeof-updatealloperationstatustest.json",
  "PushOperationResult": "/modules/github-operation-sync/db/ts-interfaces/pushoperationresult.json",
  "HuggingfaceConfig": "/modules/huggingface-wrapper/db/ts-interfaces/huggingfaceconfig.json",
  "NamedParameters<typeof huggingfaceSpeakerDiarization>": "/modules/huggingface-wrapper/db/ts-interfaces/namedparameterstypeof-huggingfacespeakerdiarization.json",
  "NamedParameters<typeof request>": "/modules/huggingface-wrapper/db/ts-interfaces/namedparameterstypeof-request.json",
  "CommentRange": "/modules/index-typescript/db/ts-interfaces/commentrange.json",
  "CompleteOperationPathParse": "/modules/index-typescript/db/ts-interfaces/completeoperationpathparse.json",
  "Config": "/modules/index-typescript/db/ts-interfaces/config.json",
  "JSONSchema7": "/modules/schema-util/db/ts-interfaces/jsonschema7.json",
  "MorphInterfaceInfo": "/modules/index-typescript/db/ts-interfaces/morphinterfaceinfo.json",
  "NamedParameters<typeof cli>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-cli.json",
  "NamedParameters<typeof findCommentTypes>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-findcommenttypes.json",
  "NamedParameters<typeof generateSchema>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-generateschema.json",
  "NamedParameters<typeof getDbStorageMethod>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getdbstoragemethod.json",
  "NamedParameters<typeof getFrontmatterDbStorageMethod>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getfrontmatterdbstoragemethod.json",
  "NamedParameters<typeof getIndexId>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getindexid.json",
  "NamedParameters<typeof getMaxIndentationDepth>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getmaxindentationdepth.json",
  "NamedParameters<typeof getNumberOfLines>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getnumberoflines.json",
  "NamedParameters<typeof getParametersFromInterfaces>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getparametersfrominterfaces.json",
  "NamedParameters<typeof getPossibleRefs>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getpossiblerefs.json",
  "NamedParameters<typeof getSizeSummary>": "/modules/path-util/db/ts-interfaces/namedparameterstypeof-getsizesummary.json",
  "NamedParameters<typeof getSpecialExtensionDbStorageMethod>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getspecialextensiondbstoragemethod.json",
  "NamedParameters<typeof getValidatedOperationPathParse>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-getvalidatedoperationpathparse.json",
  "NamedParameters<typeof hasDefinition>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-hasdefinition.json",
  "NamedParameters<typeof hasTypescriptFileChanged>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-hastypescriptfilechanged.json",
  "NamedParameters<typeof indexTypescript>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-indextypescript.json",
  "NamedParameters<typeof indexTypescriptFile>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-indextypescriptfile.json",
  "NamedParameters<typeof makeTsComment>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-maketscomment.json",
  "NamedParameters<typeof schemaToTsInterface>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-schematotsinterface.json",
  "NamedParameters<typeof tryCreateSchema>": "/modules/index-typescript/db/ts-interfaces/namedparameterstypeof-trycreateschema.json",
  "Project": "/modules/index-typescript/db/ts-interfaces/project.json",
  "NamedParameters<typeof fetchWithTimeout>": "/modules/is-online/db/ts-interfaces/namedparameterstypeof-fetchwithtimeout.json",
  "NamedParameters<typeof isOnline>": "/modules/is-online/db/ts-interfaces/namedparameterstypeof-isonline.json",
  "NamedParameters<typeof isSystemBusy>": "/modules/is-system-busy/db/ts-interfaces/namedparameterstypeof-issystembusy.json",
  "NamedParameters<typeof concatenate>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-concatenate.json",
  "NamedParameters<typeof getCurrentDate>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-getcurrentdate.json",
  "NamedParameters<typeof getParameterAtLocation>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-getparameteratlocation.json",
  "NamedParameters<typeof hasAllLetters>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-hasallletters.json",
  "NamedParameters<typeof isArrayEqual>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-isarrayequal.json",
  "NamedParameters<typeof mergeNestedObjectTest>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-mergenestedobjecttest.json",
  "NamedParameters<typeof replaceLastOccurence>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-replacelastoccurence.json",
  "NamedParameters<typeof reverseString>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-reversestring.json",
  "NamedParameters<typeof trimSlashes>": "/modules/js-util/db/ts-interfaces/namedparameterstypeof-trimslashes.json",
  "O": "/modules/js-util/db/ts-interfaces/o.json",
  "NamedParameters<typeof getSimpleJsonString>": "/modules/json-util/db/ts-interfaces/namedparameterstypeof-getsimplejsonstring.json",
  "NamedParameters<typeof benchmark>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-benchmark.json",
  "NamedParameters<typeof exploreOperationFolders>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-exploreoperationfolders.json",
  "NamedParameters<typeof findAllDocsFolderPaths>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-findalldocsfolderpaths.json",
  "NamedParameters<typeof findAllFoldersWithName>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-findallfolderswithname.json",
  "NamedParameters<typeof findAllPackages>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-findallpackages.json",
  "NamedParameters<typeof findAllTodoFolderPaths>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-findalltodofolderpaths.json",
  "NamedParameters<typeof getArgument>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-getargument.json",
  "NamedParameters<typeof getFolderTypescriptFiles>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-getfoldertypescriptfiles.json",
  "NamedParameters<typeof pathArrayIsOperation>": "/modules/k-explore/db/ts-interfaces/namedparameterstypeof-patharrayisoperation.json",
  "NamedParameters<typeof runTestsForOperation>": "/modules/k-test/db/ts-interfaces/namedparameterstypeof-runtestsforoperation.json",
  "NamedParameters<typeof sum>": "/modules/k-test/db/ts-interfaces/namedparameterstypeof-sum.json",
  "KeyValueMarkdownParse": "/modules/model-types/db/ts-interfaces/keyvaluemarkdownparse.json",
  "MarkdownChunk": "/modules/markdown-types/db/ts-interfaces/markdownchunk.json",
  "NamedParameters<typeof flattenMarkdownChunks>": "/modules/key-value-markdown-js/db/ts-interfaces/namedparameterstypeof-flattenmarkdownchunks.json",
  "NamedParameters<typeof getKvmdItemsRecursively>": "/modules/key-value-markdown-js/db/ts-interfaces/namedparameterstypeof-getkvmditemsrecursively.json",
  "NamedParameters<typeof getParagraphsRecursively>": "/modules/key-value-markdown-js/db/ts-interfaces/namedparameterstypeof-getparagraphsrecursively.json",
  "NamedParameters<typeof kvmdDataMap>": "/modules/key-value-markdown-js/db/ts-interfaces/namedparameterstypeof-kvmddatamap.json",
  "NamedParameters<typeof kvmdDataToString>": "/modules/key-value-markdown-js/db/ts-interfaces/namedparameterstypeof-kvmddatatostring.json",
  "NamedParameters<typeof kvmdParseToMarkdownString>": "/modules/key-value-markdown-js/db/ts-interfaces/namedparameterstypeof-kvmdparsetomarkdownstring.json",
  "NamedParameters<typeof markdownStringToKvmdParse>": "/modules/key-value-markdown-js/db/ts-interfaces/namedparameterstypeof-markdownstringtokvmdparse.json",
  "NamedParameters<typeof parseKvmdLine>": "/modules/key-value-markdown-js/db/ts-interfaces/namedparameterstypeof-parsekvmdline.json",
  "CoreWordMatrixWord": "/modules/language-types/db/ts-interfaces/corewordmatrixword.json",
  "KvmdWord": "/modules/language-types/db/ts-interfaces/kvmdword.json",
  "MappedWordMatrix": "/modules/language-types/db/ts-interfaces/mappedwordmatrix.json",
  "MarkdownWord": "/modules/language-types/db/ts-interfaces/markdownword.json",
  "NepaliEnglishTranslationMatrix": "/modules/language-types/db/ts-interfaces/nepalienglishtranslationmatrix.json",
  "Statement": "/modules/language-types/db/ts-interfaces/statement.json",
  "Text": "/modules/model-types/db/ts-interfaces/text.json",
  "TokiPonaMatrix": "/modules/language-types/db/ts-interfaces/tokiponamatrix.json",
  "Translation": "/modules/language-types/db/ts-interfaces/translation.json",
  "Word": "/modules/language-types/db/ts-interfaces/word.json",
  "WordCategory": "/modules/language-types/db/ts-interfaces/wordcategory.json",
  "WordCombination": "/modules/language-types/db/ts-interfaces/wordcombination.json",
  "WordConjucation": "/modules/language-types/db/ts-interfaces/wordconjucation.json",
  "WordInfo": "/modules/language-types/db/ts-interfaces/wordinfo.json",
  "WordLanguageInfo": "/modules/language-types/db/ts-interfaces/wordlanguageinfo.json",
  "WordLanguageInfoObject": "/modules/language-types/db/ts-interfaces/wordlanguageinfoobject.json",
  "WordMatrix": "/modules/language-types/db/ts-interfaces/wordmatrix.json",
  "WordPriority": "/modules/writer-types/db/ts-interfaces/wordpriority.json",
  "WordType": "/modules/language-types/db/ts-interfaces/wordtype.json",
  "NamedParameters<typeof Header>": "/modules/layout/db/ts-interfaces/namedparameterstypeof-header.json",
  "NamedParameters<typeof PingApi>": "/modules/layout/db/ts-interfaces/namedparameterstypeof-pingapi.json",
  "NamedParameters<typeof usePing>": "/modules/layout/db/ts-interfaces/namedparameterstypeof-useping.json",
  "NamedParameters<typeof preIndexLint>": "/modules/lint/db/ts-interfaces/namedparameterstypeof-preindexlint.json",
  "NamedParameters<typeof getActionStatusFilePath>": "/modules/lock-util/db/ts-interfaces/namedparameterstypeof-getactionstatusfilepath.json",
  "NamedParameters<typeof isLocked>": "/modules/lock-util/db/ts-interfaces/namedparameterstypeof-islocked.json",
  "NamedParameters<typeof lock>": "/modules/lock-util/db/ts-interfaces/namedparameterstypeof-lock.json",
  "NamedParameters<typeof lockError>": "/modules/lock-util/db/ts-interfaces/namedparameterstypeof-lockerror.json",
  "NamedParameters<typeof unlock>": "/modules/lock-util/db/ts-interfaces/namedparameterstypeof-unlock.json",
  "GlobalLogConfig": "/modules/log/db/ts-interfaces/globallogconfig.json",
  "LogConfig": "/modules/log/db/ts-interfaces/logconfig.json",
  "LogType": "/modules/log/db/ts-interfaces/logtype.json",
  "NamedParameters<typeof getCallerFileName>": "/modules/log/db/ts-interfaces/namedparameterstypeof-getcallerfilename.json",
  "NamedParameters<typeof log>": "/modules/log/db/ts-interfaces/namedparameterstypeof-log.json",
  "NamedParameters<typeof parseTitle>": "/modules/log/db/ts-interfaces/namedparameterstypeof-parsetitle.json",
  "OperationLogConfig": "/modules/log/db/ts-interfaces/operationlogconfig.json",
  "ProjectLogConfig": "/modules/log/db/ts-interfaces/projectlogconfig.json",
  "CodeblockMode": "/modules/markdown/db/ts-interfaces/codeblockmode.json",
  "MarkdownParse": "/modules/writer-input/db/ts-interfaces/markdownparse.json",
  "MarkdownParseRenderConfig": "/modules/writer-input/db/ts-interfaces/markdownparserenderconfig.json",
  "NamedParameters<typeof getRealSrc>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-getrealsrc.json",
  "NamedParameters<typeof getUrlFromRelativeUrl>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-geturlfromrelativeurl.json",
  "NamedParameters<typeof getYoutubeId>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-getyoutubeid.json",
  "NamedParameters<typeof MarkdownCodeblock>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-markdowncodeblock.json",
  "NamedParameters<typeof MarkdownContent>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-markdowncontent.json",
  "NamedParameters<typeof MarkdownContentRender>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-markdowncontentrender.json",
  "NamedParameters<typeof Parameter>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-parameter.json",
  "NamedParameters<typeof renderFrontmatter>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-renderfrontmatter.json",
  "NamedParameters<typeof renderMarkdownChunk>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-rendermarkdownchunk.json",
  "NamedParameters<typeof renderMarkdownContent>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-rendermarkdowncontent.json",
  "NamedParameters<typeof renderMarkdownParse>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-rendermarkdownparse.json",
  "NamedParameters<typeof renderMarkdownTitle>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-rendermarkdowntitle.json",
  "NamedParameters<typeof useOpenHashDetails>": "/modules/markdown/db/ts-interfaces/namedparameterstypeof-useopenhashdetails.json",
  "MarkdownCodeblock": "/modules/markdown-parse-js/db/ts-interfaces/markdowncodeblock.json",
  "MarkdownParagraphChunk": "/modules/markdown-parse-js/db/ts-interfaces/markdownparagraphchunk.json",
  "MarkdownParseConfig": "/modules/markdown-parse-js/db/ts-interfaces/markdownparseconfig.json",
  "MarkdownReference": "/modules/markdown-parse-js/db/ts-interfaces/markdownreference.json",
  "NamedParameters<typeof chunkToStringRecursively>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-chunktostringrecursively.json",
  "NamedParameters<typeof getChunkParagraphsRecursively>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-getchunkparagraphsrecursively.json",
  "NamedParameters<typeof getImplicitId>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-getimplicitid.json",
  "NamedParameters<typeof getMarkdownIntro>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-getmarkdownintro.json",
  "NamedParameters<typeof getMarkdownParseParagraphs>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-getmarkdownparseparagraphs.json",
  "NamedParameters<typeof getMarkdownReferencePaths>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-getmarkdownreferencepaths.json",
  "NamedParameters<typeof getMarkdownReferencesFromParagraph>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-getmarkdownreferencesfromparagraph.json",
  "NamedParameters<typeof markdownParseToMarkdownString>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-markdownparsetomarkdownstring.json",
  "NamedParameters<typeof markdownParseToMarkdownStringFromContent>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-markdownparsetomarkdownstringfromcontent.json",
  "NamedParameters<typeof mdContentParseRecursively>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-mdcontentparserecursively.json",
  "NamedParameters<typeof mdToJsonParse>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-mdtojsonparse.json",
  "NamedParameters<typeof parseFrontmatterMarkdownString>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-parsefrontmattermarkdownstring.json",
  "NamedParameters<typeof parseMarkdownParagraph>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-parsemarkdownparagraph.json",
  "NamedParameters<typeof parseMdToChunks>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-parsemdtochunks.json",
  "NamedParameters<typeof removeHeaderPrefix>": "/modules/markdown-parse-js/db/ts-interfaces/namedparameterstypeof-removeheaderprefix.json",
  "DependantCountObject": "/modules/markdown-parsings/db/ts-interfaces/dependantcountobject.json",
  "JsonPart": "/modules/markdown-parsings/db/ts-interfaces/jsonpart.json",
  "MergedMarkdownOutlineUrl": "/modules/markdown-parsings/db/ts-interfaces/mergedmarkdownoutlineurl.json",
  "NamedParameters<typeof addDependantCount>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-adddependantcount.json",
  "NamedParameters<typeof bundleFolderWithMarkdown>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-bundlefolderwithmarkdown.json",
  "NamedParameters<typeof bundleToBookMarkdown>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-bundletobookmarkdown.json",
  "NamedParameters<typeof bundleToMarkdown>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-bundletomarkdown.json",
  "NamedParameters<typeof concatMarkdownFiles>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-concatmarkdownfiles.json",
  "NamedParameters<typeof createMinimizedSection>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-createminimizedsection.json",
  "NamedParameters<typeof createMinimizedSectionMarkdown>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-createminimizedsectionmarkdown.json",
  "NamedParameters<typeof deployToVercel>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-deploytovercel.json",
  "NamedParameters<typeof emailMarkdownParse>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-emailmarkdownparse.json",
  "NamedParameters<typeof generateStaticSite>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-generatestaticsite.json",
  "NamedParameters<typeof getJsonSchemaSummary>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-getjsonschemasummary.json",
  "NamedParameters<typeof getMarkdownContents>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-getmarkdowncontents.json",
  "NamedParameters<typeof getMergedMarkdownOutlineUrl>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-getmergedmarkdownoutlineurl.json",
  "NamedParameters<typeof getOperationSummary>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-getoperationsummary.json",
  "NamedParameters<typeof getOutline>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-getoutline.json",
  "NamedParameters<typeof getPublicMarkdownNestedPathObject>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-getpublicmarkdownnestedpathobject.json",
  "NamedParameters<typeof getTitlesRecursively>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-gettitlesrecursively.json",
  "NamedParameters<typeof getTypeDescriptorRecursive>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-gettypedescriptorrecursive.json",
  "NamedParameters<typeof isConventionFileStatement>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-isconventionfilestatement.json",
  "NamedParameters<typeof isUpperCase>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-isuppercase.json",
  "NamedParameters<typeof makeOutlineMarkdownString>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-makeoutlinemarkdownstring.json",
  "NamedParameters<typeof makePropertiesTable>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-makepropertiestable.json",
  "NamedParameters<typeof markdownChunksToMarkdownStringRecursive>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-markdownchunkstomarkdownstringrecursive.json",
  "NamedParameters<typeof markdownChunkToMarkdownStringRecursive>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-markdownchunktomarkdownstringrecursive.json",
  "NamedParameters<typeof markdownToSayable>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-markdowntosayable.json",
  "NamedParameters<typeof mdToPdf>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-mdtopdf.json",
  "NamedParameters<typeof mergeMarkdownParse>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-mergemarkdownparse.json",
  "NamedParameters<typeof noNewlines>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-nonewlines.json",
  "NamedParameters<typeof operationRadio>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-operationradio.json",
  "NamedParameters<typeof operationToMarkdown>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-operationtomarkdown.json",
  "NamedParameters<typeof print>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-print.json",
  "NamedParameters<typeof printNestedTitles>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-printnestedtitles.json",
  "NamedParameters<typeof projectToMarkdown>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-projecttomarkdown.json",
  "NamedParameters<typeof propertyToTableRow>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-propertytotablerow.json",
  "NamedParameters<typeof sayablesToMp3>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-sayablestomp3.json",
  "NamedParameters<typeof selectRandomOperation>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-selectrandomoperation.json",
  "NamedParameters<typeof simplifiedSchemaToMarkdownString>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-simplifiedschematomarkdownstring.json",
  "NamedParameters<typeof statementItemToMarkdown>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-statementitemtomarkdown.json",
  "NamedParameters<typeof tsFunctionNameToMarkdownString>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-tsfunctionnametomarkdownstring.json",
  "NamedParameters<typeof tsFunctionToMarkdownString>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-tsfunctiontomarkdownstring.json",
  "NamedParameters<typeof tsInterfaceToMarkdownString>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-tsinterfacetomarkdownstring.json",
  "NamedParameters<typeof tsVariableToMarkdownString>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-tsvariabletomarkdownstring.json",
  "NamedParameters<typeof upMarkdownChunkLevelRecursively>": "/modules/markdown-parsings/db/ts-interfaces/namedparameterstypeof-upmarkdownchunklevelrecursively.json",
  "NestedTitle": "/modules/markdown-parsings/db/ts-interfaces/nestedtitle.json",
  "OperationSummary": "/modules/markdown-parsings/db/ts-interfaces/operationsummary.json",
  "Sayable": "/modules/markdown-parsings/db/ts-interfaces/sayable.json",
  "SimplifiedSchemaProperty": "/modules/schema-types/db/ts-interfaces/simplifiedschemaproperty.json",
  "StatementItem": "/modules/markdown-parsings/db/ts-interfaces/statementitem.json",
  "NamedParameters<typeof getQueryPath>": "/modules/markdown-reader-functions-js/db/ts-interfaces/namedparameterstypeof-getquerypath.json",
  "ParsedUrlQuery": "/modules/next-types/db/ts-interfaces/parsedurlquery.json",
  "AuthorizationProperties": "/modules/markdown-types/db/ts-interfaces/authorizationproperties.json",
  "MarkdownCallToAction": "/modules/read-markdown-file/db/ts-interfaces/markdowncalltoaction.json",
  "MarkdownContentLevel": "/modules/markdown-types/db/ts-interfaces/markdowncontentlevel.json",
  "MarkdownEmbed": "/modules/markdown-types/db/ts-interfaces/markdownembed.json",
  "MarkdownHeader": "/modules/markdown-types/db/ts-interfaces/markdownheader.json",
  "MarkdownIndex": "/modules/markdown-types/db/ts-interfaces/markdownindex.json",
  "MarkdownLink": "/modules/markdown-types/db/ts-interfaces/markdownlink.json",
  "MarkdownParagraph": "/modules/markdown-types/db/ts-interfaces/markdownparagraph.json",
  "NamedParameters<typeof markdownParseToMarkdownModelType>": "/modules/markdown-types/db/ts-interfaces/namedparameterstypeof-markdownparsetomarkdownmodeltype.json",
  "NamedParameters<typeof parseMarkdownModelTimestamp>": "/modules/markdown-types/db/ts-interfaces/namedparameterstypeof-parsemarkdownmodeltimestamp.json",
  "NamedParameters<typeof tryParseDate>": "/modules/markdown-types/db/ts-interfaces/namedparameterstypeof-tryparsedate.json",
  "PostableProperties": "/modules/markdown-types/db/ts-interfaces/postableproperties.json",
  "TextJson": "/modules/markdown-types/db/ts-interfaces/textjson.json",
  "NamedParameters<typeof findCodeblocks>": "/modules/marked-util/db/ts-interfaces/namedparameterstypeof-findcodeblocks.json",
  "NamedParameters<typeof findCodespans>": "/modules/marked-util/db/ts-interfaces/namedparameterstypeof-findcodespans.json",
  "NamedParameters<typeof findEmbeds>": "/modules/marked-util/db/ts-interfaces/namedparameterstypeof-findembeds.json",
  "NamedParameters<typeof findEmbedsTest>": "/modules/marked-util/db/ts-interfaces/namedparameterstypeof-findembedstest.json",
  "NamedParameters<typeof findJsonInMarkdown>": "/modules/marked-util/db/ts-interfaces/namedparameterstypeof-findjsoninmarkdown.json",
  "NamedParameters<typeof findLinks>": "/modules/marked-util/db/ts-interfaces/namedparameterstypeof-findlinks.json",
  "NamedParameters<typeof trimCodeblock>": "/modules/marked-util/db/ts-interfaces/namedparameterstypeof-trimcodeblock.json",
  "NamedParameters<typeof cleanupTimer>": "/modules/measure-performance/db/ts-interfaces/namedparameterstypeof-cleanuptimer.json",
  "NamedParameters<typeof generateUniqueId>": "/modules/measure-performance/db/ts-interfaces/namedparameterstypeof-generateuniqueid.json",
  "NamedParameters<typeof getNewPerformance>": "/modules/measure-performance/db/ts-interfaces/namedparameterstypeof-getnewperformance.json",
  "NamedParameters<typeof minifyBuild>": "/modules/minify-build/db/ts-interfaces/namedparameterstypeof-minifybuild.json",
  "CategoryModelType": "/modules/model-types/db/ts-interfaces/categorymodeltype.json",
  "CreatedAt": "/modules/model-types/db/ts-interfaces/createdat.json",
  "CreatedFirstAt": "/modules/model-types/db/ts-interfaces/createdfirstat.json",
  "Credit": "/modules/peer-types/db/ts-interfaces/credit.json",
  "DeletedAt": "/modules/model-types/db/ts-interfaces/deletedat.json",
  "Email": "/modules/model-types/db/ts-interfaces/email.json",
  "Euro": "/modules/model-types/db/ts-interfaces/euro.json",
  "Index": "/modules/model-types/db/ts-interfaces/index.json",
  "KvmdLine": "/modules/model-types/db/ts-interfaces/kvmdline.json",
  "NamedParameters<typeof generateId>": "/modules/model-types/db/ts-interfaces/namedparameterstypeof-generateid.json",
  "NamedParameters<typeof generatePassword>": "/modules/model-types/db/ts-interfaces/namedparameterstypeof-generatepassword.json",
  "NamedParameters<typeof generateRandomString>": "/modules/model-types/db/ts-interfaces/namedparameterstypeof-generaterandomstring.json",
  "NamedParameters<typeof generateTime>": "/modules/model-types/db/ts-interfaces/namedparameterstypeof-generatetime.json",
  "NamedParameters<typeof isEmail>": "/modules/model-types/db/ts-interfaces/namedparameterstypeof-isemail.json",
  "PhoneNumber": "/modules/model-types/db/ts-interfaces/phonenumber.json",
  "RelationType": "/modules/model-types/db/ts-interfaces/relationtype.json",
  "ShouldNotBeStored": "/modules/model-types/db/ts-interfaces/shouldnotbestored.json",
  "SlugModelProperties": "/modules/model-types/db/ts-interfaces/slugmodelproperties.json",
  "Time": "/modules/model-types/db/ts-interfaces/time.json",
  "TimeTypes": "/modules/model-types/db/ts-interfaces/timetypes.json",
  "UpdatedAt": "/modules/model-types/db/ts-interfaces/updatedat.json",
  "Url": "/modules/model-types/db/ts-interfaces/url.json",
  "NamedParameters<typeof getAssetInputType>": "/modules/name-conventions/db/ts-interfaces/namedparameterstypeof-getassetinputtype.json",
  "NamedParameters<typeof getParameterContentType>": "/modules/name-conventions/db/ts-interfaces/namedparameterstypeof-getparametercontenttype.json",
  "NamedParameters<typeof isCalculatedParameter>": "/modules/name-conventions/db/ts-interfaces/namedparameterstypeof-iscalculatedparameter.json",
  "NamedParameters<typeof isGeneratedParameterName>": "/modules/name-conventions/db/ts-interfaces/namedparameterstypeof-isgeneratedparametername.json",
  "PatternMatcher": "/modules/name-conventions/db/ts-interfaces/patternmatcher.json",
  "ExpandedObject": "/modules/nested-menu/db/ts-interfaces/expandedobject.json",
  "NamedParameters<typeof useExpanded>": "/modules/nested-menu/db/ts-interfaces/namedparameterstypeof-useexpanded.json",
  "NamedParameters<typeof getFullPath>": "/modules/next-paths/db/ts-interfaces/namedparameterstypeof-getfullpath.json",
  "NamedParameters<typeof getLastPathsChunk>": "/modules/next-paths/db/ts-interfaces/namedparameterstypeof-getlastpathschunk.json",
  "NamedParameters<typeof usePath>": "/modules/next-paths/db/ts-interfaces/namedparameterstypeof-usepath.json",
  "GetStaticPathsContext": "/modules/next-types/db/ts-interfaces/getstaticpathscontext.json",
  "PreviewData": "/modules/next-types/db/ts-interfaces/previewdata.json",
  "NamedParameters<typeof nodemon>": "/modules/nodemon/db/ts-interfaces/namedparameterstypeof-nodemon.json",
  "NamedParameters<typeof getDependenciesSummary>": "/modules/operation-util/db/ts-interfaces/namedparameterstypeof-getdependenciessummary.json",
  "NamedParameters<typeof getOperationMetaData>": "/modules/operation-util/db/ts-interfaces/namedparameterstypeof-getoperationmetadata.json",
  "NamedParameters<typeof recalculateOperationIndexJson>": "/modules/operation-util/db/ts-interfaces/namedparameterstypeof-recalculateoperationindexjson.json",
  "OperationMetaData": "/modules/operation-util/db/ts-interfaces/operationmetadata.json",
  "NamedParameters<typeof parsePrimitive>": "/modules/parse-primitive/db/ts-interfaces/namedparameterstypeof-parseprimitive.json",
  "NamedParameters<typeof parsePrimitiveArray>": "/modules/parse-primitive/db/ts-interfaces/namedparameterstypeof-parseprimitivearray.json",
  "NamedParameters<typeof parsePrimitiveBoolean>": "/modules/parse-primitive/db/ts-interfaces/namedparameterstypeof-parseprimitiveboolean.json",
  "NamedParameters<typeof parsePrimitiveString>": "/modules/parse-primitive/db/ts-interfaces/namedparameterstypeof-parseprimitivestring.json",
  "PrimitiveResult": "/modules/parse-primitive/db/ts-interfaces/primitiveresult.json",
  "NamedParameters<typeof byteCount>": "/modules/path-util/db/ts-interfaces/namedparameterstypeof-bytecount.json",
  "NamedParameters<typeof getFolderSummary>": "/modules/path-util/db/ts-interfaces/namedparameterstypeof-getfoldersummary.json",
  "NamedParameters<typeof sumSizeSummary>": "/modules/path-util/db/ts-interfaces/namedparameterstypeof-sumsizesummary.json",
  "NamedParameters<typeof calculatePathMetaData>": "/modules/path-util/db/ts-interfaces/namedparameterstypeof-calculatepathmetadata.json",
  "NamedParameters<typeof categorizeFiles>": "/modules/path-util/db/ts-interfaces/namedparameterstypeof-categorizefiles.json",
  "NamedParameters<typeof getPathMainComment>": "/modules/path-util/db/ts-interfaces/namedparameterstypeof-getpathmaincomment.json",
  "PaymentConfig": "/modules/payment-types/db/ts-interfaces/paymentconfig.json",
  "PaymentCoupon": "/modules/payment-types/db/ts-interfaces/paymentcoupon.json",
  "PaymentEvent": "/modules/payment-types/db/ts-interfaces/paymentevent.json",
  "PaymentPlan": "/modules/payment-types/db/ts-interfaces/paymentplan.json",
  "PaymentRequest": "/modules/payment-types/db/ts-interfaces/paymentrequest.json",
  "PaymentSubscription": "/modules/payment-types/db/ts-interfaces/paymentsubscription.json",
  "PaymentTransaction": "/modules/payment-types/db/ts-interfaces/paymenttransaction.json",
  "NamedParameters<typeof convertPdfToMd>": "/modules/pdf-to-md/db/ts-interfaces/namedparameterstypeof-convertpdftomd.json",
  "NamedParameters<typeof tryParsePdf>": "/modules/pdf-to-md/db/ts-interfaces/namedparameterstypeof-tryparsepdf.json",
  "PdfToMdResult": "/modules/pdf-to-md/db/ts-interfaces/pdftomdresult.json",
  "NamedParameters<typeof addPeer>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-addpeer.json",
  "NamedParameters<typeof addPeerMessage>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-addpeermessage.json",
  "NamedParameters<typeof augmentDevice>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-augmentdevice.json",
  "NamedParameters<typeof deviceGetAppsCalculated>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-devicegetappscalculated.json",
  "NamedParameters<typeof getAllAppOperations>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getallappoperations.json",
  "NamedParameters<typeof getAugmentedPersons>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getaugmentedpersons.json",
  "NamedParameters<typeof getFirstEmoji>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getfirstemoji.json",
  "NamedParameters<typeof getNestedPathObject>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getnestedpathobject.json",
  "NamedParameters<typeof getPeerMessages>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getpeermessages.json",
  "NamedParameters<typeof getPeerPeople>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getpeerpeople.json",
  "NamedParameters<typeof getPeersFromPeersRecursively>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getpeersfrompeersrecursively.json",
  "NamedParameters<typeof getPublicFolderNestedPathObject>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getpublicfoldernestedpathobject.json",
  "NamedParameters<typeof getPublicFolderNestedPathObjectFromPeer>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getpublicfoldernestedpathobjectfrompeer.json",
  "NamedParameters<typeof getPublicPeers>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-getpublicpeers.json",
  "NamedParameters<typeof lateFetchPeerMessageSync>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-latefetchpeermessagesync.json",
  "NamedParameters<typeof ping>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-ping.json",
  "NamedParameters<typeof proactivePushAddPeerMessage>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-proactivepushaddpeermessage.json",
  "NamedParameters<typeof removePeer>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-removepeer.json",
  "NamedParameters<typeof sortDevices>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-sortdevices.json",
  "NamedParameters<typeof updatePeer>": "/modules/peer-functions/db/ts-interfaces/namedparameterstypeof-updatepeer.json",
  "Achievement": "/modules/peer-types/db/ts-interfaces/achievement.json",
  "AppOperation": "/modules/peer-types/db/ts-interfaces/appoperation.json",
  "AssistantState": "/modules/peer-types/db/ts-interfaces/assistantstate.json",
  "AuthenticationMethod": "/modules/peer-types/db/ts-interfaces/authenticationmethod.json",
  "AuthenticationMethodMethod": "/modules/peer-types/db/ts-interfaces/authenticationmethodmethod.json",
  "Developer": "/modules/peer-types/db/ts-interfaces/developer.json",
  "HandleObject": "/modules/peer-types/db/ts-interfaces/handleobject.json",
  "IBrowser": "/modules/peer-types/db/ts-interfaces/ibrowser.json",
  "ICPU": "/modules/peer-types/db/ts-interfaces/icpu.json",
  "IDevice": "/modules/peer-types/db/ts-interfaces/idevice.json",
  "IEngine": "/modules/peer-types/db/ts-interfaces/iengine.json",
  "Interest": "/modules/social-media-types/db/ts-interfaces/interest.json",
  "IOS": "/modules/peer-types/db/ts-interfaces/ios.json",
  "MediaCredential": "/modules/social-media-types/db/ts-interfaces/mediacredential.json",
  "PageVisit": "/modules/peer-types/db/ts-interfaces/pagevisit.json",
  "PeerMessage": "/modules/peer-types/db/ts-interfaces/peermessage.json",
  "PersonInformation": "/modules/peer-types/db/ts-interfaces/personinformation.json",
  "PersonInformationValue": "/modules/peer-types/db/ts-interfaces/personinformationvalue.json",
  "PersonPlatformConnection": "/modules/peer-types/db/ts-interfaces/personplatformconnection.json",
  "PersonSocialMedia": "/modules/peer-types/db/ts-interfaces/personsocialmedia.json",
  "Platform": "/modules/peer-types/db/ts-interfaces/platform.json",
  "PublicPersonKeys": "/modules/peer-types/db/ts-interfaces/publicpersonkeys.json",
  "NamedParameters<typeof getAllGroupsIncludingInheritedRecursive>": "/modules/person-util/db/ts-interfaces/namedparameterstypeof-getallgroupsincludinginheritedrecursive.json",
  "NamedParameters<typeof isPortUsed>": "/modules/person-util/db/ts-interfaces/namedparameterstypeof-isportused.json",
  "NamedParameters<typeof personAttachInheritedGroups>": "/modules/person-util/db/ts-interfaces/namedparameterstypeof-personattachinheritedgroups.json",
  "NamedParameters<typeof getPersona>": "/modules/persona-functions-node/db/ts-interfaces/namedparameterstypeof-getpersona.json",
  "NamedParameters<typeof isPlural>": "/modules/pluralize/db/ts-interfaces/namedparameterstypeof-isplural.json",
  "NamedParameters<typeof isSingular>": "/modules/pluralize/db/ts-interfaces/namedparameterstypeof-issingular.json",
  "NamedParameters<typeof pluralize>": "/modules/pluralize/db/ts-interfaces/namedparameterstypeof-pluralize.json",
  "NamedParameters<typeof singularize>": "/modules/pluralize/db/ts-interfaces/namedparameterstypeof-singularize.json",
  "NamedParameters<typeof deleteApp>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-deleteapp.json",
  "NamedParameters<typeof deleteAppCli>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-deleteappcli.json",
  "NamedParameters<typeof listApps>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-listapps.json",
  "NamedParameters<typeof listAppsCli>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-listappscli.json",
  "NamedParameters<typeof logApp>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-logapp.json",
  "NamedParameters<typeof logTableObject>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-logtableobject.json",
  "NamedParameters<typeof pm2Connect>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-pm2connect.json",
  "NamedParameters<typeof restartApp>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-restartapp.json",
  "NamedParameters<typeof restartAppCli>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-restartappcli.json",
  "NamedParameters<typeof startApp>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-startapp.json",
  "NamedParameters<typeof startAppCli>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-startappcli.json",
  "NamedParameters<typeof stopAllAppsExcept>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-stopallappsexcept.json",
  "NamedParameters<typeof stopAllAppsExceptCli>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-stopallappsexceptcli.json",
  "NamedParameters<typeof stopApps>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-stopapps.json",
  "NamedParameters<typeof stopAppsCli>": "/modules/pm2-util/db/ts-interfaces/namedparameterstypeof-stopappscli.json",
  "NamedParameters<typeof ContextualPromptResultsTab>": "/modules/prompt-components/db/ts-interfaces/namedparameterstypeof-contextualpromptresultstab.json",
  "NamedParameters<typeof FilePromptSelect>": "/modules/prompt-components/db/ts-interfaces/namedparameterstypeof-filepromptselect.json",
  "Browser": "/modules/puppeteer-utils/db/ts-interfaces/browser.json",
  "FacebookLoginPropsType": "/modules/puppeteer-utils/db/ts-interfaces/facebookloginpropstype.json",
  "GmailLoginPropsType": "/modules/puppeteer-utils/db/ts-interfaces/gmailloginpropstype.json",
  "NamedParameters<typeof getChromeExecutablePath>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-getchromeexecutablepath.json",
  "NamedParameters<typeof clickOnSpanTag>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-clickonspantag.json",
  "NamedParameters<typeof delay>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-delay.json",
  "NamedParameters<typeof facebookLogin>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-facebooklogin.json",
  "NamedParameters<typeof foundOrNot>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-foundornot.json",
  "NamedParameters<typeof foundOrNotXpath>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-foundornotxpath.json",
  "NamedParameters<typeof getBrowser>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-getbrowser.json",
  "NamedParameters<typeof getBrowserPageById>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-getbrowserpagebyid.json",
  "NamedParameters<typeof getBrowserTabs>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-getbrowsertabs.json",
  "NamedParameters<typeof getConnectedBrowsers>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-getconnectedbrowsers.json",
  "NamedParameters<typeof getIdlePage>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-getidlepage.json",
  "NamedParameters<typeof getNewPage>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-getnewpage.json",
  "NamedParameters<typeof gmailLogin>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-gmaillogin.json",
  "NamedParameters<typeof isCaptchaExist>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-iscaptchaexist.json",
  "NamedParameters<typeof logConsoleIfDebug>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-logconsoleifdebug.json",
  "NamedParameters<typeof openMultiTabs>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-openmultitabs.json",
  "NamedParameters<typeof openNewBrowser>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-opennewbrowser.json",
  "NamedParameters<typeof openNewBrowserOnChildProcess>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-opennewbrowseronchildprocess.json",
  "NamedParameters<typeof openPage>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-openpage.json",
  "NamedParameters<typeof racePromises>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-racepromises.json",
  "NamedParameters<typeof retryClickAndWaitSelector>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-retryclickandwaitselector.json",
  "NamedParameters<typeof retryWaitSelector>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-retrywaitselector.json",
  "NamedParameters<typeof runBrowser>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-runbrowser.json",
  "NamedParameters<typeof setBrowserPageIdle>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-setbrowserpageidle.json",
  "NamedParameters<typeof setBrowserSession>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-setbrowsersession.json",
  "NamedParameters<typeof setInnerHtml>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-setinnerhtml.json",
  "NamedParameters<typeof solveReptcha>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-solvereptcha.json",
  "NamedParameters<typeof trueClick>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-trueclick.json",
  "NamedParameters<typeof twitterLogin>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-twitterlogin.json",
  "NamedParameters<typeof typeInTheInputField>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-typeintheinputfield.json",
  "NamedParameters<typeof typeOnTheTargetWithXpathSelector>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-typeonthetargetwithxpathselector.json",
  "NamedParameters<typeof waitMilliseconds>": "/modules/puppeteer-utils/db/ts-interfaces/namedparameterstypeof-waitmilliseconds.json",
  "NewPageProps": "/modules/puppeteer-utils/db/ts-interfaces/newpageprops.json",
  "OpenMultiTabProps": "/modules/puppeteer-utils/db/ts-interfaces/openmultitabprops.json",
  "Queue": "/modules/queue-types/db/ts-interfaces/queue.json",
  "NamedParameters<typeof getTailwindModules>": "/modules/react-with-native/db/ts-interfaces/namedparameterstypeof-gettailwindmodules.json",
  "NamedParameters<typeof joinClassNames>": "/modules/react-with-native/db/ts-interfaces/namedparameterstypeof-joinclassnames.json",
  "NamedParameters<typeof Svg>": "/modules/react-with-native/db/ts-interfaces/namedparameterstypeof-svg.json",
  "NamedParameters<typeof trimClassName>": "/modules/react-with-native/db/ts-interfaces/namedparameterstypeof-trimclassname.json",
  "NamedParameters<typeof wrapInTextIfNeeded>": "/modules/react-with-native/db/ts-interfaces/namedparameterstypeof-wrapintextifneeded.json",
  "SvgType": "/modules/react-with-native/db/ts-interfaces/svgtype.json",
  "NamedParameters<typeof AlertProvider>": "/modules/react-with-native-alert/db/ts-interfaces/namedparameterstypeof-alertprovider.json",
  "NamedParameters<typeof useAlert>": "/modules/react-with-native-alert/db/ts-interfaces/namedparameterstypeof-usealert.json",
  "MapLocation": "/modules/react-with-native-form-inputs/db/ts-interfaces/maplocation.json",
  "PluginInputType": "/modules/react-with-native-form-inputs/db/ts-interfaces/plugininputtype.json",
  "Suggestion": "/modules/react-with-native-form-inputs/db/ts-interfaces/suggestion.json",
  "ViewPort": "/modules/react-with-native-form-inputs/db/ts-interfaces/viewport.json",
  "NamedParameters<typeof Modal>": "/modules/react-with-native-modal/db/ts-interfaces/namedparameterstypeof-modal.json",
  "NamedParameters<typeof ModalProvider>": "/modules/react-with-native-modal/db/ts-interfaces/namedparameterstypeof-modalprovider.json",
  "NamedParameters<typeof useModal>": "/modules/react-with-native-modal/db/ts-interfaces/namedparameterstypeof-usemodal.json",
  "NamedParameters<typeof useModalState>": "/modules/react-with-native-modal/db/ts-interfaces/namedparameterstypeof-usemodalstate.json",
  "NamedParameters<typeof useNavigation>": "/modules/react-with-native-router/db/ts-interfaces/namedparameterstypeof-usenavigation.json",
  "NamedParameters<typeof useRouter>": "/modules/react-with-native-router/db/ts-interfaces/namedparameterstypeof-userouter.json",
  "ID": "/modules/react-with-native-select/db/ts-interfaces/id.json",
  "NamedParameters<typeof getItem>": "/modules/react-with-native-store/db/ts-interfaces/namedparameterstypeof-getitem.json",
  "NamedParameters<typeof getItemSync>": "/modules/react-with-native-store/db/ts-interfaces/namedparameterstypeof-getitemsync.json",
  "NamedParameters<typeof setItem>": "/modules/react-with-native-store/db/ts-interfaces/namedparameterstypeof-setitem.json",
  "NamedParameters<typeof readCsvFile>": "/modules/read-csv-file/db/ts-interfaces/namedparameterstypeof-readcsvfile.json",
  "NamedParameters<typeof readCsvFileSync>": "/modules/read-csv-file/db/ts-interfaces/namedparameterstypeof-readcsvfilesync.json",
  "NamedParameters<typeof readRawCsvFile>": "/modules/read-csv-file/db/ts-interfaces/namedparameterstypeof-readrawcsvfile.json",
  "NamedParameters<typeof readJsonFile>": "/modules/read-json-file/db/ts-interfaces/namedparameterstypeof-readjsonfile.json",
  "NamedParameters<typeof readJsonFileSync>": "/modules/read-json-file/db/ts-interfaces/namedparameterstypeof-readjsonfilesync.json",
  "NamedParameters<typeof readProjectRelativeJsonFile>": "/modules/read-json-file/db/ts-interfaces/namedparameterstypeof-readprojectrelativejsonfile.json",
  "NamedParameters<typeof readKvmdFile>": "/modules/read-kvmd-file/db/ts-interfaces/namedparameterstypeof-readkvmdfile.json",
  "NamedParameters<typeof readMarkdownFile>": "/modules/read-markdown-file/db/ts-interfaces/namedparameterstypeof-readmarkdownfile.json",
  "NamedParameters<typeof readMarkdownFileToModel>": "/modules/read-markdown-file/db/ts-interfaces/namedparameterstypeof-readmarkdownfiletomodel.json",
  "IndexFilter": "/modules/read-typescript-file/db/ts-interfaces/indexfilter.json",
  "NamedParameters<typeof getFolderTypescriptIndex>": "/modules/read-typescript-file/db/ts-interfaces/namedparameterstypeof-getfoldertypescriptindex.json",
  "NamedParameters<typeof getOperationIndexModel>": "/modules/read-typescript-file/db/ts-interfaces/namedparameterstypeof-getoperationindexmodel.json",
  "NamedParameters<typeof readTypescriptFile>": "/modules/read-typescript-file/db/ts-interfaces/namedparameterstypeof-readtypescriptfile.json",
  "NamedParameters<typeof uniqueNames>": "/modules/read-typescript-file/db/ts-interfaces/namedparameterstypeof-uniquenames.json",
  "NamedParameters<typeof clearTsDatabase>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-cleartsdatabase.json",
  "NamedParameters<typeof executeCommandQuietUnlessFail>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-executecommandquietunlessfail.json",
  "NamedParameters<typeof exitIfProcessDependenciesChanged>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-exitifprocessdependencieschanged.json",
  "NamedParameters<typeof generateJsonSchemas>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-generatejsonschemas.json",
  "NamedParameters<typeof getAllDbModels>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-getalldbmodels.json",
  "NamedParameters<typeof getFileIds>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-getfileids.json",
  "NamedParameters<typeof getIndexFileIds>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-getindexfileids.json",
  "NamedParameters<typeof getSrcIds>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-getsrcids.json",
  "NamedParameters<typeof isOperationBuildNeeded>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-isoperationbuildneeded.json",
  "NamedParameters<typeof isSdkOperation>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-issdkoperation.json",
  "NamedParameters<typeof rebuildAllOperations>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-rebuildalloperations.json",
  "NamedParameters<typeof rebuildOperation>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-rebuildoperation.json",
  "NamedParameters<typeof rebuildOperationCli>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-rebuildoperationcli.json",
  "NamedParameters<typeof shouldSkip>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-shouldskip.json",
  "NamedParameters<typeof yarnBuild>": "/modules/rebuild-operation/db/ts-interfaces/namedparameterstypeof-yarnbuild.json",
  "NamedParameters<typeof getMenuPagesObject>": "/modules/recursive-util/db/ts-interfaces/namedparameterstypeof-getmenupagesobject.json",
  "NamedParameters<typeof queryPathsArrayToNestedPathObject>": "/modules/recursive-util/db/ts-interfaces/namedparameterstypeof-querypathsarraytonestedpathobject.json",
  "NamedParameters<typeof reduceQueryPathsRecursively>": "/modules/recursive-util/db/ts-interfaces/namedparameterstypeof-reducequerypathsrecursively.json",
  "NestedPathObject": "/modules/recursive-util/db/ts-interfaces/nestedpathobject.json",
  "NamedParameters<typeof bodyFromQueryString>": "/modules/rest-util/db/ts-interfaces/namedparameterstypeof-bodyfromquerystring.json",
  "NamedParameters<typeof getFirstQueryStrings>": "/modules/rest-util/db/ts-interfaces/namedparameterstypeof-getfirstquerystrings.json",
  "NamedParameters<typeof getQueryPart>": "/modules/rest-util/db/ts-interfaces/namedparameterstypeof-getquerypart.json",
  "NamedParameters<typeof isValidEntry>": "/modules/rest-util/db/ts-interfaces/namedparameterstypeof-isvalidentry.json",
  "NamedParameters<typeof toQueryString>": "/modules/rest-util/db/ts-interfaces/namedparameterstypeof-toquerystring.json",
  "QueryableObject": "/modules/rest-util/db/ts-interfaces/queryableobject.json",
  "NamedParameters<typeof runChildProcess>": "/modules/run-child-process/db/ts-interfaces/namedparameterstypeof-runchildprocess.json",
  "NamedParameters<typeof sayDutch>": "/modules/say/db/ts-interfaces/namedparameterstypeof-saydutch.json",
  "NamedParameters<typeof sayLanguage>": "/modules/say/db/ts-interfaces/namedparameterstypeof-saylanguage.json",
  "NamedParameters<typeof sayNepali>": "/modules/say/db/ts-interfaces/namedparameterstypeof-saynepali.json",
  "NamedParameters<typeof saySomething>": "/modules/say/db/ts-interfaces/namedparameterstypeof-saysomething.json",
  "NamedParameters<typeof textToMp3>": "/modules/say/db/ts-interfaces/namedparameterstypeof-texttomp3.json",
  "SayLanguageEnum": "/modules/say/db/ts-interfaces/saylanguageenum.json",
  "SayOptions": "/modules/say/db/ts-interfaces/sayoptions.json",
  "JSONSchema7Type": "/modules/schema-types/db/ts-interfaces/jsonschema7type.json",
  "SimplifiedSchemaItem": "/modules/schema-types/db/ts-interfaces/simplifiedschemaitem.json",
  "JSONSchema7Definition": "/modules/schema-util/db/ts-interfaces/jsonschema7definition.json",
  "NamedParameters<typeof findFirstCommentTypes>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-findfirstcommenttypes.json",
  "NamedParameters<typeof getDataParameterNames>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-getdataparameternames.json",
  "NamedParameters<typeof getPossibleReferenceParameterNames>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-getpossiblereferenceparameternames.json",
  "NamedParameters<typeof getProperties>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-getproperties.json",
  "NamedParameters<typeof getReferencableModels>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-getreferencablemodels.json",
  "NamedParameters<typeof getReferenceParameterInfo>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-getreferenceparameterinfo.json",
  "NamedParameters<typeof getRefLink>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-getreflink.json",
  "NamedParameters<typeof getSchema>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-getschema.json",
  "NamedParameters<typeof getSchemaItems>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-getschemaitems.json",
  "NamedParameters<typeof simplifiedSchemaToTypeDefinitionString>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-simplifiedschematotypedefinitionstring.json",
  "NamedParameters<typeof simplifySchema>": "/modules/schema-util/db/ts-interfaces/namedparameterstypeof-simplifyschema.json",
  "ReferenceParameterInfo": "/modules/simplified-schema-form/db/ts-interfaces/referenceparameterinfo.json",
  "SchemaItem": "/modules/schema-util/db/ts-interfaces/schemaitem.json",
  "NamedParameters<typeof getAllSearchResultsWithContext>": "/modules/search-fs/db/ts-interfaces/namedparameterstypeof-getallsearchresultswithcontext.json",
  "NamedParameters<typeof getExplorableBasePathsWithContext>": "/modules/search-fs/db/ts-interfaces/namedparameterstypeof-getexplorablebasepathswithcontext.json",
  "NamedParameters<typeof getExplorableDbModels>": "/modules/search-fs/db/ts-interfaces/namedparameterstypeof-getexplorabledbmodels.json",
  "NamedParameters<typeof getExplorableFilesWithContext>": "/modules/search-fs/db/ts-interfaces/namedparameterstypeof-getexplorablefileswithcontext.json",
  "NamedParameters<typeof getFunctions>": "/modules/search-fs/db/ts-interfaces/namedparameterstypeof-getfunctions.json",
  "NamedParameters<typeof getMeWithContext>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-getmewithcontext.json",
  "NamedParameters<typeof getPublicPerson>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-getpublicperson.json",
  "NamedParameters<typeof getPublicPersons>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-getpublicpersons.json",
  "NamedParameters<typeof isPhoneNumber>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-isphonenumber.json",
  "NamedParameters<typeof isValidPassword>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-isvalidpassword.json",
  "NamedParameters<typeof loginConfirmWithContext>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-loginconfirmwithcontext.json",
  "NamedParameters<typeof loginWithEmailOrPhone>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-loginwithemailorphone.json",
  "NamedParameters<typeof logoutWithContext>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-logoutwithcontext.json",
  "NamedParameters<typeof signupConfirmWithContext>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-signupconfirmwithcontext.json",
  "NamedParameters<typeof signupWithEmailOrPhone>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-signupwithemailorphone.json",
  "NamedParameters<typeof switchCurrentPersonWithContext>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-switchcurrentpersonwithcontext.json",
  "NamedParameters<typeof updateMeWithContext>": "/modules/server-login/db/ts-interfaces/namedparameterstypeof-updatemewithcontext.json",
  "NamedParameters<typeof setJsonKey>": "/modules/set-json-key/db/ts-interfaces/namedparameterstypeof-setjsonkey.json",
  "NamedParameters<typeof setKeyAtLocation>": "/modules/set-json-key/db/ts-interfaces/namedparameterstypeof-setkeyatlocation.json",
  "NamedParameters<typeof Share>": "/modules/share/db/ts-interfaces/namedparameterstypeof-share.json",
  "NamedParameters<typeof useAllText>": "/modules/share/db/ts-interfaces/namedparameterstypeof-usealltext.json",
  "NamedParameters<typeof useLastSelection>": "/modules/share/db/ts-interfaces/namedparameterstypeof-uselastselection.json",
  "NamedParameters<typeof useProjectRelativeScreenshot>": "/modules/share/db/ts-interfaces/namedparameterstypeof-useprojectrelativescreenshot.json",
  "NamedParameters<typeof useScreenshot>": "/modules/share/db/ts-interfaces/namedparameterstypeof-usescreenshot.json",
  "NamedParameters<typeof findAudioWithViewsArray>": "/modules/short-markdown-parser-js/db/ts-interfaces/namedparameterstypeof-findaudiowithviewsarray.json",
  "NamedParameters<typeof markdownParseToShortMarkdown>": "/modules/short-markdown-parser-js/db/ts-interfaces/namedparameterstypeof-markdownparsetoshortmarkdown.json",
  "NamedParameters<typeof shortMarkdownToMarkdownParse>": "/modules/short-markdown-parser-js/db/ts-interfaces/namedparameterstypeof-shortmarkdowntomarkdownparse.json",
  "AudioWithViews": "/modules/short-markdown-types/db/ts-interfaces/audiowithviews.json",
  "DialogueSentence": "/modules/short-markdown-parser-node/db/ts-interfaces/dialoguesentence.json",
  "NamedParameters<typeof augmentShortMarkdown>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-augmentshortmarkdown.json",
  "NamedParameters<typeof fetchVoices>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-fetchvoices.json",
  "NamedParameters<typeof fetchVoicesTest>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-fetchvoicestest.json",
  "NamedParameters<typeof generateAugmentedShortMarkdown>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-generateaugmentedshortmarkdown.json",
  "NamedParameters<typeof generateAugmentedShortMarkdownTest>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-generateaugmentedshortmarkdowntest.json",
  "NamedParameters<typeof getOrGenerateShortMarkdown>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-getorgenerateshortmarkdown.json",
  "NamedParameters<typeof parseDialogue>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-parsedialogue.json",
  "NamedParameters<typeof uberduckGetPath>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-uberduckgetpath.json",
  "NamedParameters<typeof uberduckSpeak>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-uberduckspeak.json",
  "NamedParameters<typeof voiceCloneDialogue>": "/modules/short-markdown-parser-node/db/ts-interfaces/namedparameterstypeof-voiceclonedialogue.json",
  "ShortMarkdown": "/modules/short-markdown-writer-input/db/ts-interfaces/shortmarkdown.json",
  "AudioTrackItem": "/modules/short-markdown-types/db/ts-interfaces/audiotrackitem.json",
  "ShortMarkdownSlide": "/modules/short-markdown-types/db/ts-interfaces/shortmarkdownslide.json",
  "ViewEmbed": "/modules/short-markdown-types/db/ts-interfaces/viewembed.json",
  "NamedParameters<typeof ShortMarkdownPlayer>": "/modules/short-markdown-writer-input/db/ts-interfaces/namedparameterstypeof-shortmarkdownplayer.json",
  "NamedParameters<typeof useMultiAudio>": "/modules/short-markdown-writer-input/db/ts-interfaces/namedparameterstypeof-usemultiaudio.json",
  "NamedParameters<typeof getReferencedModelDataItem>": "/modules/simplified-schema-form/db/ts-interfaces/namedparameterstypeof-getreferencedmodeldataitem.json",
  "ReferencedModelDataItem": "/modules/simplified-schema-form/db/ts-interfaces/referencedmodeldataitem.json",
  "ReferenceItem": "/modules/simplified-schema-form/db/ts-interfaces/referenceitem.json",
  "ReferenceItemsObject": "/modules/simplified-schema-form/db/ts-interfaces/referenceitemsobject.json",
  "MediaChannel": "/modules/social-media-types/db/ts-interfaces/mediachannel.json",
  "MediaPlatformEnum": "/modules/social-media-types/db/ts-interfaces/mediaplatformenum.json",
  "MediaPost": "/modules/social-media-types/db/ts-interfaces/mediapost.json",
  "SocialMediaPostTypeReturnType": "/modules/social-media-types/db/ts-interfaces/socialmediaposttypereturntype.json",
  "JSONValue": "/modules/string-to-json/db/ts-interfaces/jsonvalue.json",
  "NamedParameters<typeof objectStringToJson>": "/modules/string-to-json/db/ts-interfaces/namedparameterstypeof-objectstringtojson.json",
  "NamedParameters<typeof parseIfJson>": "/modules/string-to-json/db/ts-interfaces/namedparameterstypeof-parseifjson.json",
  "NamedParameters<typeof parsePrimitiveJson>": "/modules/string-to-json/db/ts-interfaces/namedparameterstypeof-parseprimitivejson.json",
  "NamedParameters<typeof stringToJson>": "/modules/string-to-json/db/ts-interfaces/namedparameterstypeof-stringtojson.json",
  "NamedParameters<typeof createNewStripePayment>": "/modules/stripe-wrapper/db/ts-interfaces/namedparameterstypeof-createnewstripepayment.json",
  "NamedParameters<typeof getTestFunctionContext>": "/modules/test-util/db/ts-interfaces/namedparameterstypeof-gettestfunctioncontext.json",
  "EncodingOpts": "/modules/text-or-binary/db/ts-interfaces/encodingopts.json",
  "NamedParameters<typeof getChunkBegin>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-getchunkbegin.json",
  "NamedParameters<typeof getChunkEnd>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-getchunkend.json",
  "NamedParameters<typeof getEncoding>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-getencoding.json",
  "NamedParameters<typeof isBinary>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-isbinary.json",
  "NamedParameters<typeof isFirstByteOf2ByteChar>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-isfirstbyteof2bytechar.json",
  "NamedParameters<typeof isFirstByteOf3ByteChar>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-isfirstbyteof3bytechar.json",
  "NamedParameters<typeof isFirstByteOf4ByteChar>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-isfirstbyteof4bytechar.json",
  "NamedParameters<typeof isLaterByteOfUtf8>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-islaterbyteofutf8.json",
  "NamedParameters<typeof isText>": "/modules/text-or-binary/db/ts-interfaces/namedparameterstypeof-istext.json",
  "NamedParameters<typeof time>": "/modules/time/db/ts-interfaces/namedparameterstypeof-time.json",
  "ReviewSummary": "/modules/todo-types/db/ts-interfaces/reviewsummary.json",
  "SelfSprintReview": "/modules/todo-types/db/ts-interfaces/selfsprintreview.json",
  "SpecialKvmdModelType": "/modules/todo-types/db/ts-interfaces/specialkvmdmodeltype.json",
  "Todo": "/modules/todo-types/db/ts-interfaces/todo.json",
  "TodoFile": "/modules/todo-types/db/ts-interfaces/todofile.json",
  "TodoFileProperties": "/modules/todo-types/db/ts-interfaces/todofileproperties.json",
  "TodoOffer": "/modules/todo-types/db/ts-interfaces/todooffer.json",
  "TodoOfferStatus": "/modules/todo-types/db/ts-interfaces/todoofferstatus.json",
  "TodoPriority": "/modules/todo-types/db/ts-interfaces/todopriority.json",
  "NamedParameters<typeof tryParseJson>": "/modules/try-parse-json/db/ts-interfaces/namedparameterstypeof-tryparsejson.json",
  "NamedParameters<typeof getAllTsMorphSourceFiles>": "/modules/ts-morph-util/db/ts-interfaces/namedparameterstypeof-getalltsmorphsourcefiles.json",
  "NamedParameters<typeof getTsMorphProject>": "/modules/ts-morph-util/db/ts-interfaces/namedparameterstypeof-gettsmorphproject.json",
  "TypeCoverage": "/modules/types/db/ts-interfaces/typecoverage.json",
  "NamedParameters<typeof createCodeblockMarkdown>": "/modules/ui-util/db/ts-interfaces/namedparameterstypeof-createcodeblockmarkdown.json",
  "CustomUrlStoreConfig": "/modules/use-url-store/db/ts-interfaces/customurlstoreconfig.json",
  "NamedParameters<typeof useCustomUrlStore>": "/modules/use-url-store/db/ts-interfaces/namedparameterstypeof-usecustomurlstore.json",
  "NamedParameters<typeof getOpenableFilePath>": "/modules/vscode-open/db/ts-interfaces/namedparameterstypeof-getopenablefilepath.json",
  "NamedParameters<typeof vscodeOpen>": "/modules/vscode-open/db/ts-interfaces/namedparameterstypeof-vscodeopen.json",
  "OpenableFile": "/modules/vscode-open/db/ts-interfaces/openablefile.json",
  "CrudPage": "/modules/webpage-types/db/ts-interfaces/crudpage.json",
  "CustomWebPage": "/modules/webpage-types/db/ts-interfaces/customwebpage.json",
  "FilePage": "/modules/webpage-types/db/ts-interfaces/filepage.json",
  "FileWebPage": "/modules/webpage-types/db/ts-interfaces/filewebpage.json",
  "FunctionFormPage": "/modules/webpage-types/db/ts-interfaces/functionformpage.json",
  "NamedParameters<typeof crudPageToWebPages>": "/modules/webpage-types/db/ts-interfaces/namedparameterstypeof-crudpagetowebpages.json",
  "NamedParameters<typeof functionFormPageToWebPage>": "/modules/webpage-types/db/ts-interfaces/namedparameterstypeof-functionformpagetowebpage.json",
  "NestedWebPage": "/modules/webpage-types/db/ts-interfaces/nestedwebpage.json",
  "WriterWebPage": "/modules/webpage-types/db/ts-interfaces/writerwebpage.json",
  "NamedParameters<typeof writeToAssets>": "/modules/write-to-assets/db/ts-interfaces/namedparameterstypeof-writetoassets.json",
  "NamedParameters<typeof copyPathWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-copypathwithcontext.json",
  "NamedParameters<typeof deleteFileOrFolderWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-deletefileorfolderwithcontext.json",
  "NamedParameters<typeof getFileContentsWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-getfilecontentswithcontext.json",
  "NamedParameters<typeof getWriterWebPages>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-getwriterwebpages.json",
  "NamedParameters<typeof getWriterWebPagesMenu>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-getwriterwebpagesmenu.json",
  "NamedParameters<typeof movePathWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-movepathwithcontext.json",
  "NamedParameters<typeof newFileWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-newfilewithcontext.json",
  "NamedParameters<typeof newFolderWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-newfolderwithcontext.json",
  "NamedParameters<typeof openFinder>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-openfinder.json",
  "NamedParameters<typeof processAssetUploadWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-processassetuploadwithcontext.json",
  "NamedParameters<typeof renameFileOrFolderWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-renamefileorfolderwithcontext.json",
  "NamedParameters<typeof trashFileOrFolderWithContext>": "/modules/writer-functions/db/ts-interfaces/namedparameterstypeof-trashfileorfolderwithcontext.json",
  "NamedParameters<typeof Completion>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-completion.json",
  "NamedParameters<typeof editSubtextSubwordConfig>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-editsubtextsubwordconfig.json",
  "NamedParameters<typeof getContext>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-getcontext.json",
  "NamedParameters<typeof getSubtext>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-getsubtext.json",
  "NamedParameters<typeof getWriterTypeFromContent>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-getwritertypefromcontent.json",
  "NamedParameters<typeof isAugmentedWordMatch>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-isaugmentedwordmatch.json",
  "NamedParameters<typeof isTypescript>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-istypescript.json",
  "NamedParameters<typeof MarkdownCompletions>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-markdowncompletions.json",
  "NamedParameters<typeof MarkdownParsePresentation>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-markdownparsepresentation.json",
  "NamedParameters<typeof MarkdownView>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-markdownview.json",
  "NamedParameters<typeof MarkedToken>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-markedtoken.json",
  "NamedParameters<typeof omitSpecialCharactersFromStart>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-omitspecialcharactersfromstart.json",
  "NamedParameters<typeof SpannedSentence>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-spannedsentence.json",
  "NamedParameters<typeof SubtextContainer>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-subtextcontainer.json",
  "NamedParameters<typeof testAllContentEditableRenderComponents>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-testallcontenteditablerendercomponents.json",
  "NamedParameters<typeof trimAround>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-trimaround.json",
  "NamedParameters<typeof trimLeft>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-trimleft.json",
  "NamedParameters<typeof TypescriptCompletions>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-typescriptcompletions.json",
  "NamedParameters<typeof WriterConfigForm>": "/modules/writer-input/db/ts-interfaces/namedparameterstypeof-writerconfigform.json",
  "SubtextConfig": "/modules/writer-types/db/ts-interfaces/subtextconfig.json",
  "SubwordConfig": "/modules/writer-types/db/ts-interfaces/subwordconfig.json",
  "TextEditingContext": "/modules/writer-input/db/ts-interfaces/texteditingcontext.json",
  "WriterConfigFormValue": "/modules/writer-input/db/ts-interfaces/writerconfigformvalue.json",
  "SubtextRelatedThing": "/modules/writer-types/db/ts-interfaces/subtextrelatedthing.json",
  "SubwordViewMode": "/modules/writer-types/db/ts-interfaces/subwordviewmode.json",
  "WriterViewEnum": "/modules/writer-types/db/ts-interfaces/writerviewenum.json",
  "NamedParameters<typeof youtubeToMp4_old>": "/modules/youtube-to-mp3/db/ts-interfaces/namedparameterstypeof-youtubetomp4-old.json",
  "NamedParameters<typeof youtubeToMp4>": "/modules/youtube-to-mp3/db/ts-interfaces/namedparameterstypeof-youtubetomp4.json",
  "NamedParameters<typeof youtubeToMp4WithContext>": "/modules/youtube-to-mp3/db/ts-interfaces/namedparameterstypeof-youtubetomp4withcontext.json",
  "NamedParameters<typeof zip>": "/modules/zip/db/ts-interfaces/namedparameterstypeof-zip.json",
  "NamedParameters<typeof zipFiles>": "/modules/zip/db/ts-interfaces/namedparameterstypeof-zipfiles.json",
  "NamedParameters<typeof zipFolder>": "/modules/zip/db/ts-interfaces/namedparameterstypeof-zipfolder.json"
};