"use strict";var __awaiter=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(o,s){function r(e){try{a(n.next(e))}catch(e){s(e)}}function u(e){try{a(n.throw(e))}catch(e){s(e)}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,u)}a((n=n.apply(e,t||[])).next())}))},__generator=this&&this.__generator||function(e,t){var i,n,o,s,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(u){return function(a){return function(u){if(i)throw new TypeError("Generator is already executing.");for(;s&&(s=0,u[0]&&(r=0)),r;)try{if(i=1,n&&(o=2&u[0]?n.return:u[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,u[1])).done)return o;switch(n=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return r.label++,{value:u[1],done:!1};case 5:r.label++,n=u[1],u=[0];continue;case 7:u=r.ops.pop(),r.trys.pop();continue;default:if(!(o=r.trys,(o=o.length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){r=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){r.label=u[1];break}if(6===u[0]&&r.label<o[1]){r.label=o[1],o=u;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(u);break}o[2]&&r.ops.pop(),r.trys.pop();continue}u=t.call(e,r)}catch(e){u=[6,e],n=0}finally{i=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,a])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.watchAudioVideoDoc=void 0;var fs_util_1=require("fs-util"),get_path_1=require("get-path"),ffmpeg_util_1=require("ffmpeg-util"),doc_to_md_1=require("doc-to-md"),pdf_to_md_1=require("pdf-to-md"),filename_conventions_1=require("filename-conventions"),extensions_1=require("./extensions"),lock_util_1=require("lock-util"),js_util_1=require("js-util"),watchAudioVideoDoc=function(e,t,i){return __awaiter(void 0,void 0,void 0,(function(){var e,i,n,o,s;return __generator(this,(function(r){switch(r.label){case 0:return fs_util_1.fs.existsSync(t)?(0,lock_util_1.isLocked)(t)?[2/*return*/,{isSuccessful:!1,message:"Locked"}]:t.endsWith(".doc")?[2/*return*/,(0,doc_to_md_1.docToMd)(t,!0)]:t.endsWith(".docx")?[2/*return*/,(0,doc_to_md_1.docxToMd)(t,!0)]:t.endsWith(".pdf")?(e=fs_util_1.path.parse(t),i=fs_util_1.path.join(e.dir,"".concat(e.name,".md")),fs_util_1.fs.existsSync(i)?[2/*return*/,{isSuccessful:!1,message:"Markdown already exists, not overwriting from pdf (for now)"}]:t?[4/*yield*/,(0,pdf_to_md_1.convertPdfToMd)({inputPdfFilePath:t})]:[2/*return*/,{isSuccessful:!1,message:"Doesn't exist"}]):[3/*break*/,2]:[2/*return*/,{isSuccessful:!1,message:"File doesn't exist (anymore)"}];case 1:return[2/*return*/,r.sent()];case 2:return n=fs_util_1.path.parse(t),o=n.ext,(s=extensions_1.audioFileExtensions.includes(o)?"wav":extensions_1.videoFileExtensions.includes(o)?"mp4":// : imageFileExtensions.includes(extension)
// ? "png"
void 0)?[4/*yield*/,(0,ffmpeg_util_1.compressConvert)(t,{targetFormat:s,is16bitWav:"wav"===s,keepOriginal:!1,
// NB: 10fps isn't nice to watch for movies. Let's finetune this
// fps: targetFormat === "mp4" ? 10 : undefined,
sizeWidthPx:"mp4"===s?768:void 0})]:[2/*return*/,{isSuccessful:!1,message:"File isn't audio/video/image"}];case 3:return[2/*return*/,{isSuccessful:!!r.sent()}]}}))}))};exports.watchAudioVideoDoc=watchAudioVideoDoc,exports.watchAudioVideoDoc.config={isHeavy:!0,isInternetRequired:!1,isBrowserRequired:!1},exports.watchAudioVideoDoc.startupStrategy="queue",exports.watchAudioVideoDoc.filter=function(e,t){if("add"!==e)return!1;var i=(0,get_path_1.getProjectRoot)();if(!i)return!1;if(!t.startsWith(i))return!1;if(!fs_util_1.fs.existsSync(t))
// could be that it doesn't exist already
return!1;var n=fs_util_1.path.parse(t),o=n.ext,s=(0,get_path_1.getSubExtensions)(t);
// in case of doc files, we want to keep the original!
if(extensions_1.docFileExtensions.includes(o)){var r=fs_util_1.path.join(n.dir,"".concat(n.name,".md"));return!fs_util_1.fs.existsSync(r)}if(extensions_1.readonlyDocFileExtensions.includes(o)){
// if it's a .pdf, only convert if there's not already a .doc, .docx or .md with the same name
var u=extensions_1.docFileExtensions.concat(".md").map((function(e){return fs_util_1.path.join(n.dir,"".concat(n.name).concat(e))}));return(0,js_util_1.isAllTrue)(u.map((function(e){return!fs_util_1.fs.existsSync(e)})))}
// in case of audio, video, and image files, we want to remove the original, so it should just never be there.
return!!extensions_1.audioFileExtensions.concat(extensions_1.videoFileExtensions).concat(extensions_1.imageFileExtensions).includes(o)&&(!s.includes(filename_conventions_1.temporaryConvertedSubextension)&&!(0,lock_util_1.isLocked)(t))};
//# sourceMappingURL=watchAudioVideoDoc.js.map