{
  "createdAt": 1677579242854,
  "updatedAt": 1677579242854,
  "deletedAt": 0,
  "createdFirstAt": 1677579242854,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/executeWatcherOnFilepath.ts",
  "commentsInside": [],
  "rawText": " async (\n  projectWatchers: ProjectWatcher<any>[],\n  eventName: WatchEventType,\n  path: string,\n  stats?: realFs.Stats | undefined\n) => {\n  const startupWaitMs = 1000;\n  const startTimeAt = Date.now();\n\n  const isStartup = Date.now() < startTimeAt + startupWaitMs;\n  if (isStartup) {\n    return;\n  }\n\n  const isOffline = !(await isOnline());\n  const isBusy = await isSystemBusy();\n  const isUsingBattery = await isSystemUsingBattery();\n  const relevantWatchers = projectWatchers.filter((watcher) => {\n    const isApplicableWatcher = watcher.filter(eventName, path);\n    if (!isApplicableWatcher) {\n      return false;\n    }\n\n    if (watcher.config?.isInternetRequired && isOffline) {\n      // add to queue because internet required but offline\n      db.upsert(\"Queue\", {\n        functionName: watcher.name,\n        parameters: [eventName, path, false],\n      });\n      return false;\n    }\n\n    if (watcher.config?.isHeavy && !isUsingBattery) {\n      // add to queue because waste of battery\n      db.upsert(\"Queue\", {\n        functionName: watcher.name,\n        parameters: [eventName, path, false],\n      });\n      return false;\n    }\n    if (watcher.config?.isHeavy && isBusy) {\n      // add to queue because busy\n\n      db.upsert(\"Queue\", {\n        functionName: watcher.name,\n        parameters: [eventName, path, false],\n      });\n      return false;\n    }\n\n    return true;\n  });\n\n  oneByOne(relevantWatchers, async (projectWatcher) => {\n    console.log(`watchAll: executing ${projectWatcher.name} for ${path}`);\n    await projectWatcher(eventName, path, false);\n  });\n}",
  "name": "executeWatcherOnFilepath",
  "slug": "execute-watcher-on-filepath",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 1576,
    "lines": 58,
    "bytes": 1576,
    "bytesPerCharacter": 1,
    "charactersPerLine": 27,
    "linesPerFile": 58,
    "numberOfFiles": 1
  },
  "id": "ideuxenamtbcvqwdcnfzmvvj"
}