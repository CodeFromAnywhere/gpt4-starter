{
  "createdAt": 1677579245461,
  "updatedAt": 1677579245461,
  "deletedAt": 0,
  "createdFirstAt": 1677579245461,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getQueueItems.ts",
  "commentsInside": [],
  "rawText": " async (\n  projectWatchers: ProjectWatcher<any>[],\n  basePath: string | string[]\n) => {\n  const queueItemsBefore = await db.get(\"Queue\");\n\n  // do everything at startup too, as long as a \"startupStrategy\" is declared\n  const startupFiles = (\n    await explore({\n      basePath,\n      ignore: [\n        \"node_modules\",\n        \".next\",\n        \".expo\",\n        \"db\",\n        \"public\",\n        \".git\",\n        \".turbo\",\n        \"generated\",\n      ],\n    })\n  ).map((x) => x.path);\n\n  console.log({\n    startupFiles: startupFiles.length,\n  });\n\n  const queueItems = await oneByOne(projectWatchers, async (watcher) => {\n    if (watcher.startupStrategy === \"ignore\" || !watcher.startupStrategy) {\n      //console.log(`ignore ${watcher.name}`);\n      return;\n    }\n\n    const thisQueueItemFilePaths = queueItemsBefore\n      .filter((x) => x.functionName === watcher.name)\n      .map((x) => x.parameters[1] as string);\n\n    const realStartupFiles = startupFiles\n      .filter((absolutePath) => {\n        return watcher.filter(\"add\", absolutePath);\n      })\n      .filter((x) => !thisQueueItemFilePaths.includes(x));\n\n    // console.log({\n    //   watcher: watcher.name,\n    //   filesAlreadyInQueue: thisQueueItemFilePaths.length,\n    //   filesToBeAddedToQueue: realStartupFiles.length,\n    // });\n\n    if (realStartupFiles.length === 0) {\n      return;\n    }\n\n    const newQueueItems = realStartupFiles.map((absolutePath) => {\n      const queue: Creation<Queue> = {\n        functionName: watcher.name,\n        parameters: [\"add\", absolutePath, true],\n      };\n      return queue;\n    });\n\n    return newQueueItems;\n  });\n\n  return queueItems.filter(notEmpty).flat();\n}",
  "name": "getQueueItems",
  "slug": "get-queue-items",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 1663,
    "lines": 66,
    "bytes": 1663,
    "bytesPerCharacter": 1,
    "charactersPerLine": 25,
    "linesPerFile": 66,
    "numberOfFiles": 1
  },
  "id": "rrxslspmqsicbrddsegkdowe"
}