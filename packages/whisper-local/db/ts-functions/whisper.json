{
  "createdAt": 1678330960017,
  "updatedAt": 1678330960017,
  "deletedAt": 0,
  "createdFirstAt": 1678330960017,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/whisper.ts",
  "commentsInside": [],
  "rawText": " async (config: WhisperConfig) => {\n  const {\n    isDebug,\n    language,\n    translateToEnglish,\n    model,\n    audioFilePath,\n    outputFolderPath,\n  } = config;\n  if (Array.isArray(audioFilePath) && audioFilePath.length === 0) {\n    return;\n  }\n  const audioFilePaths = makeArray(audioFilePath);\n\n  const debugString = isDebug ? \"--verbose\" : undefined;\n  const languageString = language ? `--language ${language}` : undefined;\n  const translateToEnglishString = translateToEnglish\n    ? `--task translate`\n    : undefined;\n  const modelString = model ? `--model ${model}` : undefined;\n  const inputFileString = audioFilePaths.map((p) => `\"${p}\"`).join(\" \");\n  const outputFolderPathString = outputFolderPath\n    ? `--output_dir ${outputFolderPath}`\n    : `--output_dir ${path.parse(audioFilePaths[0]).dir}`;\n\n  const flags = [\n    debugString,\n    languageString,\n    translateToEnglishString,\n    modelString,\n    outputFolderPathString,\n  ].filter(notEmpty);\n\n  const flagsString = flags.length > 0 ? ` ${flags.join(\" \")}` : \"\";\n\n  const command = `whisper ${inputFileString}${flagsString}`;\n  console.log({ whisperCommand: command });\n  const result = await execAsync(command, {});\n  console.log({ result });\n\n  return audioFilePaths.map((p) => {\n    return {\n      txt: `${p}.txt`,\n      srt: `${p}.txt`,\n      vtt: `${p}.vtt`,\n    };\n  });\n}",
  "name": "whisper",
  "slug": "whisper",
  "parameters": [
    {
      "name": "config",
      "schema": {
        "$ref": "#/definitions/WhisperConfig"
      },
      "simplifiedSchema": {
        "fullComment": "",
        "properties": [
          {
            "name": "isWordSegments",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isRetry",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isVttOutputAdded",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isSrtOutputAdded",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "audioFilePath",
            "required": true,
            "schema": {
              "fullComment": "file or files (absolute paths)",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "prompt",
            "required": false,
            "schema": {
              "fullComment": "whisper.cpp has the --prompt [string] option\n\ndon't know what it does exactly, but could be useful",
              "type": "string"
            }
          },
          {
            "name": "model",
            "required": false,
            "schema": {
              "enum": [
                "tiny",
                "tiny.en",
                "base",
                "base.en",
                "small",
                "small.en",
                "medium",
                "medium.en",
                "large-v1",
                "large"
              ],
              "fullComment": "Defaults to small (good for english speech)\n\nFor English-only applications, the .en models tend to perform better, especially for the tiny.en and base.en models. We observed that the difference becomes less significant for the small.en and medium.en models.\n\n",
              "type": "string"
            }
          },
          {
            "name": "translateToEnglish",
            "required": false,
            "schema": {
              "fullComment": "if true, result will be translated into english (--task translate)",
              "type": "boolean"
            }
          },
          {
            "name": "language",
            "required": false,
            "schema": {
              "enum": [
                "english",
                "chinese",
                "german",
                "spanish",
                "russian",
                "korean",
                "french",
                "japanese",
                "portuguese",
                "turkish",
                "polish",
                "catalan",
                "dutch",
                "arabic",
                "swedish",
                "italian",
                "indonesian",
                "hindi",
                "finnish",
                "vietnamese",
                "hebrew",
                "ukrainian",
                "greek",
                "malay",
                "czech",
                "romanian",
                "danish",
                "hungarian",
                "tamil",
                "norwegian",
                "thai",
                "urdu",
                "croatian",
                "bulgarian",
                "lithuanian",
                "latin",
                "maori",
                "malayalam",
                "welsh",
                "slovak",
                "telugu",
                "persian",
                "latvian",
                "bengali",
                "serbian",
                "azerbaijani",
                "slovenian",
                "kannada",
                "estonian",
                "macedonian",
                "breton",
                "basque",
                "icelandic",
                "armenian",
                "nepali",
                "mongolian",
                "bosnian",
                "kazakh",
                "albanian",
                "swahili",
                "galician",
                "marathi",
                "punjabi",
                "sinhala",
                "khmer",
                "shona",
                "yoruba",
                "somali",
                "afrikaans",
                "occitan",
                "georgian",
                "belarusian",
                "tajik",
                "sindhi",
                "gujarati",
                "amharic",
                "yiddish",
                "lao",
                "uzbek",
                "faroese",
                "haitian creole",
                "pashto",
                "turkmen",
                "nynorsk",
                "maltese",
                "sanskrit",
                "luxembourgish",
                "myanmar",
                "tibetan",
                "tagalog",
                "malagasy",
                "assamese",
                "tatar",
                "hawaiian",
                "lingala",
                "hausa",
                "bashkir",
                "javanese",
                "sundanese",
                "burmese",
                "valencian",
                "flemish",
                "haitian",
                "letzeburgesch",
                "pushto",
                "panjabi",
                "moldavian",
                "moldovan",
                "sinhalese",
                "castilian",
                "en",
                "zh",
                "de",
                "es",
                "ru",
                "ko",
                "fr",
                "ja",
                "pt",
                "tr",
                "pl",
                "ca",
                "nl",
                "ar",
                "sv",
                "it",
                "id",
                "hi",
                "fi",
                "vi",
                "he",
                "uk",
                "el",
                "ms",
                "cs",
                "ro",
                "da",
                "hu",
                "ta",
                "no",
                "th",
                "ur",
                "hr",
                "bg",
                "lt",
                "la",
                "mi",
                "ml",
                "cy",
                "sk",
                "te",
                "fa",
                "lv",
                "bn",
                "sr",
                "az",
                "sl",
                "kn",
                "et",
                "mk",
                "br",
                "eu",
                "is",
                "hy",
                "ne",
                "mn",
                "bs",
                "kk",
                "sq",
                "sw",
                "gl",
                "mr",
                "pa",
                "si",
                "km",
                "sn",
                "yo",
                "so",
                "af",
                "oc",
                "ka",
                "be",
                "tg",
                "sd",
                "gu",
                "am",
                "yi",
                "lo",
                "uz",
                "fo",
                "ht",
                "ps",
                "tk",
                "nn",
                "mt",
                "sa",
                "lb",
                "my",
                "bo",
                "tl",
                "mg",
                "as",
                "tt",
                "haw",
                "ln",
                "ha",
                "ba",
                "jw",
                "su"
              ],
              "fullComment": "If given, will assume audio is in that language\n\n",
              "type": "string"
            }
          },
          {
            "name": "isDebug",
            "required": false,
            "schema": {
              "fullComment": "will use --verbose option of cli",
              "type": "boolean"
            }
          },
          {
            "name": "outputFolderPath",
            "required": false,
            "schema": {
              "fullComment": "Resulting folder path (defaults to the same folder as the first audio file)",
              "type": "string"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "Executes Whisper (https://github.com/openai/whisper) via the CLI\n\nNB: You need to install ffmpeg and the cli, see the github repo for instructions\n\nNB: this is a way slower implementation than `whisper.cpp`\n\nTODO: Check https://github.com/openai/whisper/discussions/categories/show-and-tell for other things we can do with whisper",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 1679,
    "lines": 54,
    "bytes": 1679,
    "bytesPerCharacter": 1,
    "charactersPerLine": 31,
    "linesPerFile": 54,
    "numberOfFiles": 1
  },
  "id": "tiznlcnspefqylrcipkugfna"
}