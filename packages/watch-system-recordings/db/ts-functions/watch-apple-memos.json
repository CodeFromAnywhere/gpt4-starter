{
  "createdAt": 1678330922695,
  "updatedAt": 1678330922695,
  "deletedAt": 0,
  "createdFirstAt": 1678330922695,
  "isApiExposed": false,
  "isExported": true,
  "explicitTypeName": "ProjectWatcher",
  "operationRelativeTypescriptFilePath": "src/watchAppleMemos.ts",
  "commentsInside": [],
  "rawText": " async (\n  _,\n  absolutePath,\n  isStartup\n) => {\n  if (!fs.existsSync(absolutePath)) {\n    return;\n  }\n  const projectRoot = getProjectRoot();\n  if (!projectRoot) return;\n  const screenPath = path.join(projectRoot, \"knowledge\", \"recordings\");\n\n  const stats = await fs.stat(absolutePath);\n  const createdAt = stats.ctimeMs;\n\n  // if (isStartup) {\n  //   return;\n  // }\n\n  // first put the wav there\n  const resultingAudioPath = await compressConvert(absolutePath, {\n    targetFormat: \"wav\",\n    is16bitWav: true,\n    keepOriginal: true,\n    outputFolderPath: screenPath,\n    name: String(createdAt),\n  });\n\n  if (!resultingAudioPath) {\n    return;\n  }\n\n  const movedMarkPath = `${absolutePath}.${movedFileSubextension}`;\n  await fs.writeFile(movedMarkPath, String(Date.now()), \"utf8\");\n}",
  "name": "watchAppleMemos",
  "slug": "watch-apple-memos",
  "parameters": [],
  "description": "Watch `/Application Support/com.apple.voicememos/Recordings` and move them to /knowledge/recordings immediately. on success, add a file. `[recording-name].m4a.moved`\n\nWhen restarting the server, find all m4a's there that don't have this file. Transcribe those too with whisper.",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 1064,
    "lines": 37,
    "bytes": 1064,
    "bytesPerCharacter": 1,
    "charactersPerLine": 29,
    "linesPerFile": 37,
    "numberOfFiles": 1
  },
  "id": "nilxxefmusvyrrkmkxmrtsvh"
}