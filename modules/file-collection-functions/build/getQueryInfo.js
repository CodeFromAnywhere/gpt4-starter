"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(s,i){function o(e){try{u(n.next(e))}catch(e){i(e)}}function a(e){try{u(n.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(o,a)}u((n=n.apply(e,t||[])).next())}))},__generator=this&&this.__generator||function(e,t){var r,n,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(a){return function(u){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;i&&(i=0,a[0]&&(o=0)),o;)try{if(r=1,n&&(s=2&a[0]?n.return:a[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,a[1])).done)return s;switch(n=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,n=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],n=0}finally{r=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getQueryInfo=void 0;var fs_util_1=require("fs-util"),fs_util_js_1=require("fs-util-js"),get_path_1=require("get-path"),getQueryInfo=function(e){return __awaiter(void 0,void 0,void 0,(function(){var t,r,n,s,i,o,a,u,l,c,f,_,h,p,v,d;return __generator(this,(function(y){switch(y.label){case 0:
//NB: Hide .DS_Store and other dotfiles as the default file-collection for a folder. Instead, search for a readme or index and show that one (or first file). Basically, never show nothing, unless the folder is empty.
return(t=(0,get_path_1.getProjectRoot)())?(r=e.queryPath,n=e.customProjectRelativeBaseFolderPath,(s=n?fs_util_1.path.join(t,n):t)&&fs_util_1.fs.existsSync(s)?(i=fs_util_1.path.join(s,r),fs_util_1.fs.existsSync(i)?[3/*break*/,2]:[4/*yield*/,(0,fs_util_1.findClosestAbsolutePath)(i)]):[2/*return*/,{isSuccessful:!1,message:"No valid root"}]):[2/*return*/,{isSuccessful:!1,message:"No project root"}];case 1:return a=y.sent(),[3/*break*/,3];case 2:a=i,y.label=3;case 3:return(o=a)?[4/*yield*/,fs_util_1.fs.stat(o)]:[2/*return*/,{isSuccessful:!1,message:"Couldn't find path"}];case 4:return u=y.sent(),l=u.isFile(),c=u.isDirectory(),f=fs_util_1.path.parse(o),_=l?f.dir:o,c?[4/*yield*/,(0,fs_util_1.getFirstFile)(o)]:[3/*break*/,6];case 5:return p=y.sent(),[3/*break*/,7];case 6:p=void 0,y.label=7;case 7:return v=(h=p)?fs_util_1.path.join(o,h):l?o:void 0,d=(0,fs_util_js_1.makeRelative)(_,t),[2/*return*/,{isSuccessful:!0,result:{projectRelativeFilePath:v?(0,fs_util_js_1.makeRelative)(v,t):void 0,projectRelativeFolderPath:d,queryIsFolder:c}}]}}))}))};exports.getQueryInfo=getQueryInfo;
//# sourceMappingURL=getQueryInfo.js.map