{
  "createdAt": 1668328692437,
  "updatedAt": 1668328692437,
  "deletedAt": 0,
  "createdFirstAt": 1668328692437,
  "id": "dbWxqZljJGXXfdTi",
  "dependencies": {
    "ajv": "^8.11.2",
    "asset-functions-node": "0.0.1",
    "bundle-types": "0.0.1",
    "bundle-util": "0.0.1",
    "code-types": "0.0.1",
    "convert-case": "0.0.1",
    "database": "0.0.1",
    "db-util": "0.0.1",
    "fs-orm": "1.0.1",
    "fs-util": "1.0.5",
    "get-path": "0.0.1",
    "js-util": "0.0.1",
    "k-explore": "0.0.2",
    "model-types": "0.0.1",
    "name-conventions": "0.0.1",
    "nested-menu": "0.0.1",
    "read-json-file": "0.0.1",
    "recursive-types": "0.0.1",
    "recursive-util": "0.0.1",
    "webpage-types": "0.0.1",
    "log": "0.0.1",
    "function-types": "0.0.1"
  },
  "devDependencies": {
    "@types/node": "^18.0.1",
    "typescript": "^4.7.4"
  },
  "main": "build/index.js",
  "scripts": {
    "dev": "tsc -w",
    "build": "tsc",
    "test": "node ./build/cli.js",
    "up": "npm version patch -f",
    "pub": "yarn up && npm publish"
  },
  "source": "src/index.ts",
  "version": "0.0.1",
  "name": "db-recipes",
  "language": "english",
  "slug": "db-recipes",
  "operation": {
    "buildResultIndexed": {
      "buildSucceeded": true,
      "dependenciesBuildsFailed": false,
      "indexErrors": [],
      "indexImportExportError": "",
      "indexInteracesErrors": [
        "No schema/definitions found for /Users/clarity/os/operations/tools/purpose/codebase-introspection/database/db-recipes/src/wrapFunction.test.ts. Error: TypeError: Cannot read properties of undefined (reading 'getId')"
      ],
      "lintProblems": []
    },
    "classificationIndexed": "node-cjs",
    "coreDependenciesIndexed": [],
    "folderNameIndexed": "db-recipes",
    "hasGeneratedDependenciesIndexed": true,
    "indirectDependencies": [
      "bundle-types"
    ],
    "lastPullTimeAtIndexed": 0,
    "lastRebuildAt": 1677580381416,
    "operationDependenciesIndexed": [
      "BundleConfig",
      "db",
      "DbQueryResult",
      "FunctionContext",
      "DbModelEnum",
      "notEmpty",
      "ModelInfo",
      "humanCase",
      "DatasetConfig",
      "DatasetItem",
      "db",
      "FunctionContext",
      "getSubsetFromObject",
      "hasAllLetters",
      "removeOptionalKeysFromObject",
      "removeOptionalKeysFromObjectStrings",
      "DbModelEnum",
      "DbModels",
      "Dataset",
      "TsInterface",
      "db",
      "getMergedQueryConfig",
      "getDatabaseFiles",
      "MergedQueryConfig",
      "FunctionContext",
      "readProjectRelativeJsonFile",
      "DbModelEnum",
      "dbModelKeys",
      "DbModels",
      "sdkInterfacePaths",
      "getDbModelsForBundle",
      "TsInterface",
      "db",
      "getDbModelsFromOperations",
      "getLastFolder",
      "path",
      "getProjectRoot",
      "isBundle",
      "exploreOperationFolders",
      "dbModelKeys",
      "DbModels",
      "db",
      "TsFunction",
      "camelCase",
      "db",
      "operations",
      "getFolder",
      "destructureOptionalObject",
      "getProjectRoot",
      "isBundle",
      "NestedWebPage",
      "WebPage",
      "getMenuPagesObject",
      "db",
      "FunctionContext",
      "AugmentedAnyModelType",
      "DbModels",
      "TsInterface",
      "path",
      "getProjectRoot",
      "Storing",
      "readJsonFile",
      "DbModels",
      "sdkInterfacePaths",
      "FunctionContext",
      "notEmpty",
      "DbModels",
      "TsInterface",
      "db",
      "DbModels",
      "CustomQueryConfig",
      "DbQueryResult",
      "getAssetInputType",
      "makeArray",
      "notEmpty",
      "sdkInterfacePaths",
      "processItemAssets",
      "FunctionContext",
      "readJsonFile",
      "Storing",
      "TsInterface",
      "path",
      "getProjectRoot",
      "TsFunction",
      "sdk",
      "notEmpty",
      "log",
      "TsFunction",
      "sdk",
      "log"
    ],
    "packageDependenciesIndexed": [],
    "relativeOperationLocationPathIndexed": "operations/tools/purpose/codebase-introspection/database",
    "markdown": "Useful library of functions that wrap the `fs-orm` database.\n\nTODO: should probably be split up further to differentiate between db-ui functions and a more general purpose library\n",
    "sizeIndexed": {
      "codeSize": {
        "numberOfFiles": 20,
        "lines": 891,
        "characters": 27002,
        "bytes": 27002
      },
      "dataSize": {
        "numberOfFiles": 2,
        "lines": 231,
        "characters": 5646,
        "bytes": 5646
      },
      "textSize": {
        "numberOfFiles": 4,
        "lines": 477,
        "characters": 10934,
        "bytes": 10934
      },
      "size": {
        "bytes": 43582,
        "characters": 43582,
        "lines": 1599,
        "numberOfFiles": 26
      }
    },
    "hasGeneratedImportsIndexed": false
  }
}