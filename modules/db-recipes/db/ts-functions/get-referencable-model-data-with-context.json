{
  "createdAt": 1677580347646,
  "updatedAt": 1677580347646,
  "deletedAt": 0,
  "createdFirstAt": 1677580347646,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getReferencableModelData.ts",
  "commentsInside": [],
  "rawText": " async (\n  functionContext: FunctionContext,\n  dbModelName: keyof DbModels\n) => {\n  if (!dbModelName) {\n    return [];\n  }\n  const canRead = await hasDataPermissions(functionContext, dbModelName, [\"r\"]);\n\n  if (!canRead) {\n    return [];\n  }\n  const referencableModelData = (await db.get(dbModelName)).map(\n    (item: AugmentedAnyModelType) => ({\n      id: item.id,\n      name: item.name,\n      slug: item.slug,\n      categoryStack: item.categoryStack,\n    })\n  );\n\n  return referencableModelData;\n}",
  "name": "getReferencableModelDataWithContext",
  "slug": "get-referencable-model-data-with-context",
  "parameters": [],
  "description": "Get referencableModelData for a single DbModel.\n\nNB: this does not get the items that can be referenced in that model!\n\nFor getting all required `ReferencableModelData` for the prop in `SimplifiedSchemaForm`, use `useGetReferencableModelData`.",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 742,
    "lines": 27,
    "bytes": 742,
    "bytesPerCharacter": 1,
    "charactersPerLine": 27,
    "linesPerFile": 27,
    "numberOfFiles": 1
  },
  "id": "oambnoxttzgqluddknsqnypd"
}