{
  "createdAt": 1678043871099,
  "updatedAt": 1678043871099,
  "deletedAt": 0,
  "createdFirstAt": 1678043871099,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "UserApp",
  "slug": "user-app",
  "operationRelativeTypescriptFilePath": "src/UserApp.tsx",
  "type": {
    "rawType": "(props: { overwriteDefaultPages?: string[] | undefined; NextPage?: any; pageProps?: any; menuProps?: import(\"/Users/clarity/os/operations/tools/user-interfaces/gui/wise/menu/build/MenuProps\").MenuProps | undefined; customHeader?: React.ReactNode; customMenu?: React.ReactNode; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: {\n  overwriteDefaultPages?: string[];\n  NextPage?: any;\n  pageProps?: any;\n  menuProps?: MenuProps;\n  customHeader?: ReactNode;\n  customMenu?: ReactNode;\n}) => {\n  const {\n    NextPage,\n    pageProps,\n    overwriteDefaultPages,\n    customHeader,\n    customMenu,\n    menuProps,\n  } = props;\n\n  const router = useRouter();\n  const path = router.asPath.substring(1).split(\"?\")[0];\n\n  const pages: { [key: string]: (props?: any) => JSX.Element } = {\n    login: LoginForm,\n    signup: SignupForm,\n    \"signup-confirm\": () => <ConfirmForm isSignup />,\n    \"login-confirm\": () => <ConfirmForm />,\n    \"edit-profile\": UpdateMeForm,\n    profile: PublicProfile,\n  };\n\n  const DefaultPage = pages[path] ? pages[path] : undefined;\n\n  const pageContent =\n    DefaultPage && !overwriteDefaultPages?.includes(path) ? (\n      <DefaultPage />\n    ) : (\n      <NextPage {...pageProps} />\n    );\n\n  return (\n    <LoginWrapper>\n      <LayoutGrid\n        header={customHeader || <Header />}\n        menu={customMenu || <Menu {...menuProps} message={undefined} />}\n      >\n        {pageContent}\n      </LayoutGrid>\n    </LoginWrapper>\n  );\n}",
  "description": "Layout that includes login wrapper (able to be logged in) and default pages.",
  "id": "fdonvoobzedcpsokgbnzrgte"
}