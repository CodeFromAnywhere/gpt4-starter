import { Context } from "server/typings/common";
import { RealApiReturnType } from "api-types";
/**
steps for someone to use the API

1) auth
2) cache lookup
3) input validation
4) running function
5) store cache
6) store performance
7) returning result

TODO: make it possible to return result BEFORE storing cache and performance. we probably need to use the server.reply for this, which makes this function unusable in any other setting than an api, so let's make it optional

*/
export declare const executeFunctionWithParameters: <TFunctionName extends "fetchUrl" | "addEmojiToEveryWord" | "addStatement" | "addWord" | "biggestFunctionName" | "checkQueue" | "cleanup" | "controlChatGptWrapper" | "deletePromptResult" | "developersQuote" | "diaryToInstagram" | "documentationWriting" | "emojiAugmentation" | "explainInDutch" | "explainInNepali" | "explainInPortuguese" | "explainLineByLine" | "explain" | "fixGrammarAndSpellingMistakes" | "followUpQuestions" | "getContextualPromptCategories" | "getContextualPromptResultJsonFilePath" | "getContextualPrompt" | "getObjectForkKeyRecursively" | "getQueueStatus" | "getToolFunctions" | "haiku" | "hookOneliners" | "improveCode" | "investorPitch" | "marcusAurelius" | "opposite" | "outlineToInvestorPitch" | "poem" | "processChatGptPrompt" | "processPromptOnFile" | "processPromptOnFolderWithContext" | "quiz" | "removeAllFake" | "rickAndMortyRick" | "rickAndMorty" | "setIsFavoritePromptResult" | "shouldAddToQueue" | "socratesAndSnoopDogg" | "storytelling" | "summarizeMeetingWithContext" | "toolFunctionWithContext" | "translateEverythingIntoHindi" | "translateEverythingPortuguese" | "translateEverything" | "translateToPortuguese" | "typescriptExplain" | "williamShakespear" | "writeContextualPromptSdk" | "writeCreatePromptCode" | "ye" | "yodafy" | "getGroupOrPersonId" | "imageToText" | "languageTranslation" | "musicTrackSeparation" | "speakerSeparation" | "speechToText" | "textToImage" | "textToSpeech" | "textToText" | "augmentMarkdown" | "getContextualPromptResults" | "getContextualPromptsArray" | "getContextualPrompts" | "getFolderRelativeScopeDbFilePath" | "makeMarkdownLink" | "gtpIndex" | "addToken" | "ensureToken" | "findAssetParametersRecursively" | "getAssetDirectlyApiUrl" | "getConversionInfoFromType" | "getExtensionFromAsset" | "getNameFromRelativePath" | "getNameWithTokenFromRelativePath" | "getReferencedAssetApiUrl" | "getTypeFromUrlOrPath" | "readableSize" | "removeTokenIfPresent" | "compressAsset" | "createDownloadWithContext" | "deleteReferencedAsset" | "downloadGetApi" | "downloadRemoteAsset" | "findAbsoluteAssetPathFromReference" | "findAllProjectMedia" | "findDownload" | "getAssetDirectlyGetApi" | "getReferencedAssetGetApi" | "getStorageLocationInfo" | "getTemporaryAssetsFolderPath" | "makeDownloadableFile" | "processAsset" | "processItemAssets" | "removeOldTemporaryAssets" | "serverDownloadReply" | "uploadAssetWithContext" | "getEncoding" | "isBinary" | "isText" | "generateInstantResponseMessage" | "getChatMessageAnalysis" | "getSystemMessageOtherLanguage" | "getSystemMessage" | "jsonGpt" | "proactiveOutreach" | "processMessage" | "sendDailyAlarmSms" | "truncateMessages" | "weeklyMail" | "loginToDevto" | "publishBlogOnDevTo" | "typeIntoTheField" | "facebookPostOnTheGroup" | "facebookPost" | "facebookTimeLinePost" | "getLatestFacebookPostUrl" | "sendFacebookMessage" | "searchAndDownloadGifs" | "buildQuery" | "errArrayLenZero" | "errFileSize" | "errFileType" | "errInvalidType" | "errTextLenZero" | "errTextOverflow" | "generateArrayFromJson" | "getStringForTranslation" | "launch" | "startTranslation" | "storeResult" | "translateText" | "publishBlogOnMedium" | "publishBlogOnReddit" | "youtubeSearchAndDownload" | "youtubeSearch" | "getFileCollectionPathsWithContext" | "getFileCollectionStatusWithContext" | "getFileCollectionWithContext" | "getFolderContents" | "getFolderFileCollections" | "getNavigationWithContext" | "getOpenFilesWithContext" | "getQueryInfo" | "removeInactiveOpenFiles" | "setOpenFileWithContext" | "getFileCollectionBasename" | "getFileCollectionPaths" | "getMarkdownIndexPath" | "getMarkdownIndex" | "getOnlyUniqueFileCollectionsFromDirentsFilter" | "getPrimaryFileFromFileCollection" | "isFileCollection" | "onlyUniqueFileCollectionsFilter" | "readFolderFileCollections" | "renameFileCollectionWithContext" | "renameFileCollection" | "updateMarkdownIndex" | "folderGetUpdatedAt" | "getFsAuthorizationSingleFile" | "getFsAuthorizationTestables" | "getFsAuthorizationWithContext" | "canAccessSync" | "canAccess" | "canExecuteSync" | "canExecute" | "canReadSync" | "canRead" | "canSeeSync" | "canSee" | "canWriteSync" | "canWrite" | "copyAllRelativeFiles" | "fileExistsWithCaseSync" | "findClosestAbsolutePath" | "findFileNameCaseInsensitive" | "getAllFoldersUntilFolder" | "getFileName" | "getFirstAvailableFilename" | "getFirstFile" | "getFolderSizeObject" | "getFolder" | "getLastFolder" | "getOneFolderUpPath" | "getPathCombinations" | "oneUp" | "parseMd" | "readFilePerLine" | "readFrontmatter" | "removeAllExcept" | "renameAndCreate" | "returnReadmePathFromFolder" | "writeJsonToFile" | "writeStringToFile" | "writeToFiles" | "getExtension" | "getFileOrFolderName" | "getFolderJs" | "getSubExtension" | "isPathRelative" | "makeRelative" | "removeTrailingSlash" | "withoutExtension" | "withoutSubExtensions" | "getAssociatedMd" | "getAvailableFolderPath" | "getOperationBins" | "getOperationPackageName" | "getPackageJson" | "getPackageSourcePaths" | "getTsConfig" | "byteCount" | "calculatePathMetaData" | "categorizeFiles" | "getFolderSummary" | "getPathMainComment" | "getSizeSummary" | "sumSizeSummary" | "isEqualArray" | "renameTemplateFiles" | "renameTemplateToNormalFile" | "renameToTemplateFile" | "setJsonKey" | "setKeyAtLocation" | "initiateWatch" | "makeSubscription" | "pickWatcher" | "watchFoldersChokidar" | "watchFoldersFs" | "watchFolders" | "writeToAssets" | "allOperationsRemoveJsSrc" | "allOperationsToMarkdown" | "clearAllTsDatabases" | "codeAll" | "forAllFiles" | "forAllFolders" | "getAllOperationClassifications" | "gitShipAllRepos" | "mdAllOperations" | "minifyAllOperations" | "publishAllOperations" | "removeAllFiles" | "removeAllFolders" | "removeAll" | "renameAll" | "runScriptEverywhere" | "setScriptEverywhere" | "makeFileType" | "exploreOperation" | "exploreProject" | "getExplorationType" | "getFileWithExtension" | "getFolderExplorationDetails" | "getFrontmattersMappedObject" | "getInstanceNames" | "getProjectRelativePaths" | "getTodoPages" | "getTodoPaths" | "hasSameProjectPath" | "getAllOperationSourcePaths" | "findFolderWhereMatch" | "findOperationBasePathWithClassification" | "findOperationBasePath" | "getAllPackageJsonDependencies" | "getCommonAncestorMultiple" | "getCommonAncestor" | "getFolderPath" | "getOperationClassificationObject" | "getOperationClassification" | "getOperationPathParse" | "getOperationPath" | "getOperationRelativePath" | "getPathParse" | "getPathsWithOperations" | "getProjectRoot" | "getRelativeLinkPath" | "getRelativePath" | "getRootPath" | "getSrcRelativeFileId" | "getSubExtensions" | "hasDependency" | "isBundle" | "isOperation" | "isUiOperation" | "isWorkspaceRoot" | "packageCompilesTs" | "tsconfigCompilesEsm" | "determineFileType" | "exploreGitRepoFolders" | "exploreMultiple" | "exploreOperationFolders" | "explorePreset" | "explore" | "findAllDocsFolderPaths" | "findAllDotGitFolders" | "findAllFoldersWithName" | "findAllPackages" | "findAllTodoFolderPaths" | "findFilesRecursively" | "getFolderTypescriptFiles" | "getOutline" | "pathArrayIsOperation" | "getDependenciesSummary" | "getOperationMetaData" | "recalculateOperationIndexJson" | "deleteApp" | "listApps" | "logApp" | "logTableObject" | "pm2ConnectDisconnect" | "pm2Connect" | "restartApp" | "startApp" | "stopAllAppsExcept" | "stopApps" | "executeWatcherOnFilepath" | "getQueueItems" | "watchAll" | "exitIfOperationsChange" | "gitCommitAllCron" | "watchOperations" | "getBatteryLevelPercentage" | "isSystemUsingBattery" | "brigtnessFull" | "brigtnessZero" | "decreaseBrightness" | "increaseBrightness" | "macosSetup" | "clickToSpeak" | "fileExplorerOpen" | "getLight" | "getLocation" | "importAppleNotes" | "importGhostBlogs" | "importGoogleKeep" | "fetchWithTimeout" | "isOnline" | "isSystemBusy" | "getFolderNames" | "playMusic" | "generateRecurringReminders" | "remindMeAboutNextMinute" | "setRandomTimezone" | "cmdSpaceListener" | "time" | "disableDarkMode" | "enableDarkMode" | "setDarkmodeCommand" | "toggleDarkMode" | "disableScreenSleep2" | "disableScreenSleep" | "enableScreenSleep" | "downVolume" | "getVolume" | "setVolume" | "upVolume" | "getOpenableFilePath" | "vscodeOpen" | "watchAudioVideoDoc" | "watchMp3WithoutWav" | "watchMp4WithoutWav" | "watchWavToSpeakers" | "watchWavToSpeech" | "watchWavWithoutMp3" | "exploreBadNamingFiles" | "isBadName" | "renameAllBadlyNamedFiles" | "renameBadlyNamedFile" | "watchBadNaming" | "getBetterLocation" | "getIsPrivate" | "makeMarkdownIndex" | "watchMarkdown" | "getRecordingType" | "transcriptionToGptChunks" | "watchMp3Transcriptions" | "getYoutubeVideoUrls" | "watchAppleMemos" | "calculateBbqAbility" | "calculateCloudyness" | "calculateCodeFromNatureAbility" | "calculateDresscode" | "calculateKiteability" | "calculateRainyness" | "calculateSunnyness" | "calculateWindyness" | "fetchWeatherStormGlass" | "fetchWeatherTommorowIOApi" | "getCustomWeatherData" | "createTranscriptionJson" | "getTranslationText" | "isWav16bit" | "readTranscriptionCsv" | "whisperLocalCpp" | "whisper" | "bananaCarrot" | "bananaStableDiffusion" | "bananaWhisper" | "receiveTwilioMessageWithContextRaw" | "sendMail" | "sendMessage" | "sendSms" | "sendTwilioMessage" | "trySendMessage" | "getAllOperations" | "getAllPackagesNames" | "getGithubPersonalAccessToken" | "getGithubRepoLastCommitInfo" | "getRepoNameFromRepositoryUrl" | "initializeGitOrUseExistingAndPull" | "operationGithubPull" | "operationGithubPush" | "pullMultipleOperations" | "pushMultipleOperations" | "readAndWriteToPackageJsonExample" | "updateAllOperationStatus" | "huggingfaceSpeakerDiarization" | "request" | "calculateMessagesTokenCount" | "calculateOpenaiMessagesTokenCountSum" | "calculateOpenaiMessagesTokenCount" | "calculateTokenCount" | "chatCompletion" | "chat" | "getOpenaiInstance" | "gpt3" | "messagesToTokenableText" | "createNewStripePayment" | "receivePaymentUpdateWithContextRaw" | "youtubeToMp4_old" | "youtubeToMp4WithContext" | "youtubeToMp4" | "exploreRenameFiles" | "exploreRenameFolders" | "fixName" | "isBadFilename" | "printPretty" | "exploreSubExtensions" | "getFileTypeFromPath" | "getWriterType" | "hasSubExtension" | "isGeneratedOperationName" | "isGeneratedOperation" | "isIndexableFileId" | "getPort" | "exploreAndRename" | "getBetterFilename" | "getActionStatusFilePath" | "isLocked" | "lockError" | "lock" | "unlock" | "getAssetInputType" | "getParameterContentType" | "isCalculatedParameter" | "isGeneratedParameterName" | "getBundleSummary" | "getDbModelsForBundle" | "createBackup" | "createClarityBundle" | "getHumanReadableDate" | "createDistribution" | "filterInterfacesFromOperationNames" | "getDbModelsFromOperations" | "applyDataset" | "calculateBundleDependencies" | "calculateToPath" | "copyCodestories" | "copyDocsAndReadme" | "copyFromRepoToNiche" | "copyOperation" | "copyReadmesBeforeFolderToBundle" | "copyTodosIntoBundle" | "findAndCopyOperations" | "findInherited" | "generateAllBundles" | "generateBundle" | "generateBundles" | "getBundlePaths" | "getCompareFn" | "getDataset" | "getIndirectDependencies" | "getMatchingFilters" | "mergeBundleConfigs" | "syncInformation" | "syncNicheFolder" | "yarnInstall" | "installNodeModules" | "yarnInstallNewDistribution" | "containsNumbers" | "getFinalDictionary" | "getMarkdownWordDictionaryForFolder" | "getPathDictionaryObject" | "halfDictionaryArray" | "sortDictionary" | "detectFolderLanguage" | "detectLanguage" | "generateSimpleSentence" | "makeAudioCourse" | "sleep" | "createFolder" | "getAllMarkdownFiles" | "getFileInfo" | "getTranslatedWord" | "markdownStoreAndRecord" | "parseMarkdownWordByWord" | "recordMdFile" | "startMarkdownTranslator" | "translatedArrayToKeyValue" | "watchMdFile" | "createWordSimplificationMap" | "findBetterWords" | "getSynonymFrequencyDataset" | "preprocessSynonyms" | "preprocessWordFrequencies" | "createPaymentRequestWithContext" | "createPaymentTransactionWithContext" | "defaultResponse" | "fail" | "getPaymentWebPages" | "succeed" | "mapArrayJson" | "mapObjectJson" | "unzip" | "zipFiles" | "zipFolder" | "zip" | "csvItemArrayToCsvString" | "tryParseCsv" | "compressConvert" | "compressImages" | "compressMp4" | "convertToMp3" | "convertToMp4" | "jsonToMdString" | "jsonToSayString" | "getSimpleJsonString" | "copyCopyPairs" | "copyReaderStaticAssets" | "findReaderStaticAssets" | "findStaticAssets" | "docToMd" | "docxToMd" | "runTests" | "flattenMarkdownChunks" | "getKvmdItemsRecursively" | "getParagraphsRecursively" | "kvmdDataMap" | "kvmdDataToString" | "kvmdParseToMarkdownString" | "markdownStringToKvmdParse" | "parseKvmdLine" | "addCodestoryToSection" | "addModelName" | "findCodestories" | "makeCodespanMappedObject" | "makeCodestory" | "mapChunkRecursively" | "mapMarkdownParseSections" | "writeAllCodestories" | "writeCodespanDetails" | "chunkToStringRecursively" | "getChunkParagraphsRecursively" | "getImplicitId" | "getMarkdownIntro" | "getMarkdownParseParagraphs" | "getMarkdownReferencePaths" | "getMarkdownReferencesFromParagraph" | "markdownParseToMarkdownStringFromContent" | "markdownParseToMarkdownString" | "mdContentParseRecursively" | "mdToJsonParse" | "parseFrontmatterMarkdownString" | "parseMarkdownParagraph" | "parseMdToChunks" | "removeHeaderPrefix" | "addDependantCount" | "bundleFolderWithMarkdown" | "bundleToBookMarkdown" | "bundleToMarkdown" | "createMinimizedSectionMarkdown" | "createMinimizedSection" | "deployToVercel" | "emailMarkdownParse" | "flattenNestedObject" | "generateStaticSite" | "getJsonSchemaSummary" | "getMarkdownContents" | "getMergedMarkdownOutlineUrl" | "getOperationSummary" | "getPublicMarkdownNestedPathObject" | "getTitlesRecursively" | "getTypeDescriptorRecursive" | "isConventionFileStatement" | "isUpperCase" | "makeOutlineMarkdownString" | "makePropertiesTable" | "markdownChunkToMarkdownStringRecursive" | "markdownChunksToMarkdownStringRecursive" | "markdownToSayable" | "mdToPdf" | "mergeMarkdownParse" | "noNewlines" | "operationRadio" | "operationToMarkdown" | "printNestedTitles" | "print" | "projectToMarkdown" | "propertyToTableRow" | "sayablesToMp3" | "selectRandomOperation" | "simplifiedSchemaToMarkdownString" | "statementItemToMarkdown" | "tsFunctionNameToMarkdownString" | "tsFunctionToMarkdownString" | "tsInterfaceToMarkdownString" | "tsVariableToMarkdownString" | "upMarkdownChunkLevelRecursively" | "findCodeblocks" | "findCodespans" | "findEmbeds" | "findJsonInMarkdown" | "findLinks" | "flattenMarkdownString" | "flattenMarkedTokenRecursive" | "trimCodeblock" | "convertPdfToMd" | "tryParsePdf" | "findAudioWithViewsArray" | "markdownParseToShortMarkdown" | "shortMarkdownToMarkdownParse" | "augmentShortMarkdown" | "fetchVoices" | "generateAugmentedShortMarkdown" | "getOrGenerateShortMarkdown" | "parseDialogue" | "uberduckGetPath" | "uberduckSpeak" | "voiceCloneDialogue" | "convertCsvToJson" | "convertXlsToJson" | "parsePrimitiveArray" | "parsePrimitiveBoolean" | "parsePrimitiveString" | "parsePrimitive" | "readCsvFileSync" | "readCsvFile" | "readRawCsvFile" | "readJsonFileSync" | "readJsonFile" | "readProjectRelativeJsonFile" | "readKvmdFile" | "readMarkdownFileToModel" | "readMarkdownFile" | "getFolderTypescriptIndex" | "readTypescriptFile" | "tryParseJson" | "bodyFromQueryString" | "getFirstQueryStrings" | "getQueryPart" | "isValidEntry" | "toQueryString" | "getAllGroupsIncludingInheritedRecursive" | "isPortUsed" | "personAttachInheritedGroups" | "generateCsvInstance" | "generateJsonSingleInstance" | "generateKvmdInstance" | "generateMarkdownInstance" | "generateSlugTestModel" | "getMergedQueryConfig" | "randomName" | "runModelEndToEndTest" | "testOperationModels" | "upsert" | "cacheLookup" | "calculateOperatingSystemBundle" | "deleteDbModelWithContext" | "getDatabaseMenu" | "getDbModelMetadataWithContext" | "getDbModelNames" | "getDbModelWithContext" | "getFunctionIndex" | "getNestedDatabaseMenu" | "getReferencableModelDataWithContext" | "getTsInterface" | "hasDataPermissions" | "hasDbRecipes" | "makeSrcRelativeFolder" | "tsInterfaceToDbMenu" | "upsertDbModelWithContext" | "validateInput" | "validateResult" | "addDefaultValues" | "alterAny" | "alterCsv" | "alterJsonMultiple" | "alterJsonSingle" | "alterKeyValueMarkdown" | "alterMarkdown" | "augmentItemWithReferencedDataRecursively" | "calculateOperationsObject" | "createDb" | "findParent" | "getAugmentedData" | "getDatabaseFiles" | "getDatabaseRootFolder" | "getDbFileLocation" | "getDbStorageMethodExtension" | "getDefaultLocationPattern" | "getItemModelLocation" | "getLength" | "getLocationPattern" | "getMergedConfigOperationPath" | "getParentSlug" | "getRootFolders" | "getWildcardDbFileLocations__OLD" | "getWildcardDbFileLocations" | "groupByFile" | "makeStoringItem" | "mergeConfigs" | "removeKeyValueMarkdown" | "removeMultiple" | "upsertItems" | "upsertKeyValueMarkdown" | "waitForLockfile" | "validateModel" | "validate" | "getFileFunctions" | "getFunctionExecutions" | "getFunctionQueryPaths" | "getPublicBundleConfig" | "getSrcRelativeFolderPath" | "getTsFunction" | "isPathParameter" | "getFunctionExersize" | "getAugmentedWordObject" | "getAugmentedWords" | "getBundleAugmentedWords" | "codestoriesGetPages" | "codestoriesGetStaticPaths" | "codestoriesGetStaticProps" | "docsGetPages" | "getMarkdownReaderPages" | "getPublicMarkdownFilePaths" | "removeExtensionsFromPath" | "removeNumberPrefix" | "shouldExposeMarkdownFile" | "stripReadmeFromFolder" | "copyStaticAssets" | "docsGetStaticPaths" | "docsGetStaticProps" | "getAllMarkdownReaderPages" | "getChildren" | "getFolderExplorationInfo" | "getMarkdownModelPages" | "getMarkdownPageInfo" | "getMarkdownReaderQueryPaths" | "getOperationPages" | "getReaderTodoPages" | "markdownReaderGetStaticPaths" | "markdownReaderGetStaticPropsFromPages" | "markdownReaderGetStaticProps" | "putReadmeOnTop" | "getQueryPath" | "addPeerMessage" | "addPeer" | "augmentDevice" | "deviceGetAppsCalculated" | "getAllAppOperations" | "getAugmentedPersons" | "getFirstEmoji" | "getNestedPathObject" | "getPeerMessages" | "getPeerPeople" | "getPeersFromPeersRecursively" | "getPublicFolderNestedPathObjectFromPeer" | "getPublicFolderNestedPathObject" | "getPublicPeers" | "lateFetchPeerMessageSync" | "ping" | "proactivePushAddPeerMessage" | "removePeer" | "sortDevices" | "updatePeer" | "getPrimaryPersona" | "youtubeToPlayItem" | "getDayNumber" | "remindMe" | "MatchingText" | "PathSearchResults" | "findSentenceMatches" | "searchRecursiveObjectArray" | "getAllSearchResultsWithContext" | "getExplorableBasePathsWithContext" | "getExplorableDbModels" | "getExplorableFilesWithContext" | "getFunctions" | "getPostableFrontmatterSchema" | "frontmatterParseToString" | "frontmatterToObject" | "getFrontmatterValueString" | "markdownModelTypeToMarkdownString" | "objectToFrontmatter" | "parseFrontmatterString" | "quotedOrNot" | "stringifyNewlines" | "copyPathWithContext" | "deleteFileOrFolderWithContext" | "getFileContentsWithContext" | "getFrontmatterSchema" | "getWriterWebPagesMenu" | "getWriterWebPages" | "movePathWithContext" | "newFileWithContext" | "newFolderWithContext" | "openFinder" | "processAssetUploadWithContext" | "renameFileOrFolderWithContext" | "saveFileContentsWithContext" | "trashFileOrFolderWithContext" | "updateFrontmatterWithContext" | "createInvoiceContactMarkdown" | "createInvoiceMarkdown" | "createKeyValueMarkdown" | "money" | "newInvoice" | "printDate" | "markdownParseToMarkdownModelType" | "parseMarkdownModelTimestamp" | "tryParseDate" | "generateId" | "generatePassword" | "generateRandomString" | "generateTime" | "isEmail" | "createUser" | "encryptPassword" | "getBacktickContents" | "isInPeriod" | "isOutOfStock" | "kvmdToCredential" | "upcomingOutgoingFlights" | "whereShouldIgo" | "crudPageToWebPages" | "functionFormPageToWebPage" | "cleanupTsDatabase" | "shouldDeleteTsModel" | "stripCommentEnd" | "stripCommentStart" | "stripComment" | "stripSlashes" | "stripStar" | "trim" | "getCompileErrors" | "getTypescriptErrorsFromFiles" | "writeBuildErrors" | "findAllDependencyOperations" | "findDependantsRecursively" | "findDependants" | "findDependenciesRecursively" | "findMonorepoExports" | "findMonorepoImports" | "findMonorepoModules" | "getDependencyObject" | "getDependencyTree" | "getOldDependencyTree" | "getOperationDependencyReasons" | "generateBunFile" | "generateBunMonopackage" | "generateBunTypes" | "generateBunVariables" | "getItemNewPath" | "generateNamedIndex" | "generateSimpleIndex" | "isTestFn" | "mapToImportStatement" | "generateDbSdk" | "generateEnvSdks" | "generateFunctionPathsSdk" | "generateFunctionSdks" | "generateInterfacePathsSdk" | "generateOperationsSdk" | "generateSdkApiWatcher" | "generateSdkApi" | "generateSdkOperations" | "getFunctionSdksContent" | "getSdkDescription" | "getSdkFunctionsPerClassification" | "isNonUiOperationBuild" | "newEnvSdk" | "newFunctionKeysSdkOperation" | "newFunctionSdkOperation" | "tsFunctionIsIndexable" | "tsFunctionIsSdkable" | "updateClassifications" | "getImportedDependencies" | "getPackage" | "isAbsoluteImport" | "calculatePackageJsonDependencies" | "findAndWriteImportsExports" | "getDefaultSymbolType" | "getExportSpecifierNames" | "getExportSymbolTypeRecursive" | "getImportSpecifiersWithNames" | "getImportsExports" | "getPackageNameFromAbsoluteImport" | "getSymbolTypeDeclarations" | "getTypeFromImportSpecifierRecursive" | "isAbsoluteImportBuiltin" | "isImportFromOptionalFile" | "writeResult" | "getMissingDependencies" | "findAndUpsertTsInterfaces" | "findCommentTypes" | "generateSchema" | "getAllComments" | "getDbStorageMethod" | "getFrontmatterDbStorageMethod" | "getFrontmatterFunctionParameters" | "getIndexId" | "getMaxIndentationDepth" | "getMinMaxValidation" | "getNumberOfLines" | "getParamSchema" | "getParametersFromInterfaces" | "getPossibleRefs" | "getSpecialExtensionDbStorageMethod" | "getTsStatements" | "getTypeInfo" | "getValidatedOperationPathParse" | "hasDefinition" | "hasTypescriptFileChanged" | "indexImportsExportsForFilePath" | "indexTypescriptFilePath" | "indexTypescriptFile" | "indexTypescript" | "isPrimitive" | "makeTsComment" | "removeTypescriptIndex" | "schemaToTsInterface" | "tryCreateSchema" | "typeToSchema" | "preIndexLint" | "minifyBuild" | "getAvailableOperationName" | "newOperationWithFiles" | "newOperation" | "newTemplate" | "buildPackage" | "installMissingMonorepoDependencies" | "obfucsate" | "testPackage" | "prettierOperation" | "clearTsDatabase" | "executeCommandQuietUnlessFail" | "exitIfProcessDependenciesChanged" | "generateJsonSchemas" | "getAllDbModels" | "getFileIds" | "getIndexFileIds" | "getSrcIds" | "isOperationBuildNeeded" | "isSdkOperation" | "rebuildAllOperations" | "rebuildOperation" | "shouldSkip" | "yarnBuild" | "renameOperation" | "findFirstCommentTypes" | "getDataParameterNames" | "getPossibleReferenceParameterNames" | "getProperties" | "getRefLink" | "getReferencableModels" | "getReferenceParameterInfo" | "getSchemaItems" | "getSchema" | "simplifiedSchemaToTypeDefinitionString" | "simplifySchema" | "getSimpleTypescriptFileString" | "jsonToString" | "parseRawSimpleTypescriptFile" | "createSimpleTypescriptFile" | "alterTypescriptFile" | "alterTypescriptInstance" | "buildEverythingInRightOrder" | "detectCircularDependencies" | "detectSwcDangles" | "findTypescriptFiles" | "fixImportsEverywhere" | "getDependencyLayerLevels" | "getOperationPathsRebuildRequired" | "getSwcFunctions" | "getSwcImports" | "getSwcInterfaces" | "getSwcVariables" | "getTypescriptData" | "getTypescriptFileData" | "getTypescriptFileOperationName" | "operationGetDependencies" | "operationGetIndexedDependencies" | "organizeImports" | "recursiveImportFetchCode" | "reindexAllOperationsCircularDependencies" | "reindexCircularDependencies" | "setTypescriptData" | "splitTypescriptFile" | "trySwcParseFile" | "watchSrcFiles" | "runTestsForOperation" | "sum" | "isResultOfInterface" | "makeTest" | "getTestFunctionContext" | "getAllTsMorphSourceFiles" | "getHasGeneric" | "getTsMorphProject" | "untypedApiFunction" | "getGetApiUrl" | "makeArraysGetEndpoint" | "makeGetEndpoint" | "comparePassword" | "calculateDeviceName" | "executeFunctionWithParameters" | "getAuthorizationInfo" | "isGetEndpoint" | "isRawEndpoint" | "savePageVisit" | "storeFunctionExecution" | "upsertDevice" | "defaultMessage" | "getMeWithContext" | "getPublicPerson" | "getPublicPersons" | "isPhoneNumber" | "isValidPassword" | "loginConfirmWithContext" | "loginWithEmailOrPhone" | "logoutWithContext" | "signupBare" | "signupConfirmWithContext" | "signupWithEmailOrPhone" | "switchCurrentPersonWithContext" | "updateMeWithContext" | "sayDutch" | "sayLanguage" | "sayNepali" | "saySomething" | "textToMp3" | "askOk" | "ask" | "getArgumentOrAsk" | "cliVersionUpdates" | "handleVersionUpdates" | "converse" | "executeSdkFunction" | "getCachedExportedFunctions" | "getMenu" | "getSdkFunctionPaths" | "objectStringToJson" | "parseIfJson" | "parsePrimitiveJson" | "stringToJson" | "BreadCrumbs" | "renderBreadCrumbs" | "ClickableIcon" | "errorToast" | "infoToast" | "showStandardResponse" | "successToast" | "warningToast" | "FancyLoader" | "getFileType" | "LabeledButton" | "getFullPath" | "getLastPathsChunk" | "usePath" | "Tabs" | "createCodeblockMarkdown" | "useCustomUrlStore" | "getKeysAtPathFromNestedObject" | "getMenuPagesObject" | "makeNestedObjectFromQueryPathObject" | "mapChildObjectRecursive" | "nestedObjectToChildObject" | "nestedPathObjectToNestedMenuRecursive" | "nestifyQueryPathObjectRecursive" | "queryPathsArrayToNestedPathObject" | "reduceQueryPathsRecursively" | "execAsync" | "spawnAsync" | "camelCase" | "capitalCase" | "capitaliseFirstLetter" | "convertCase" | "fileSlugify" | "getDelimiter" | "humanCase" | "kebabCase" | "lowerCaseArray" | "pascalCase" | "slugify" | "snakeCase" | "executeCommand" | "getCommand" | "isCommandPerOs" | "getDbPath" | "rawPolygonToPolygon" | "apply" | "createEnum" | "createMappedObject" | "destructureOptionalObject" | "findLastIndex" | "getObjectFromParamsString" | "getObjectKeysArray" | "getParameterAtLocation" | "getSubsetFromObject" | "groupByKey" | "hasAllLetters" | "insertAt" | "isAllTrue" | "isArrayEqual" | "makeArray" | "mapAsync" | "mapKeys" | "mapMany" | "mapValuesSync" | "mergeNestedObject" | "mergeObjectParameters" | "mergeObjectsArray" | "mergeObjects" | "noEmptyString" | "objectMapAsync" | "objectMapSync" | "objectValuesMap" | "omitUndefinedValues" | "onlyDuplicates" | "onlyUnique2" | "onlyUnique" | "pickRandomArrayItem" | "putIndexAtIndex" | "removeIndexFromArray" | "removeOptionalKeysFromObjectStrings" | "removeOptionalKeysFromObject" | "replaceLastOccurence" | "reverseString" | "sumAllKeys" | "sumObjectParameters" | "takeFirst" | "trimSlashes" | "dev" | "getCallerFileName" | "log" | "parseTitle" | "cleanupTimer" | "generateUniqueId" | "getNewPerformance" | "nodemon" | "oneByOne" | "isPlural" | "isSingular" | "pluralize" | "singularize" | "runChildProcess" | "chatGPTAuth" | "detectChatGptPage" | "openAIChat" | "createLinkedinPost" | "linkedinGroupPost" | "linkedinPost" | "loginLinkedin" | "makeApi" | "scrapeConnections" | "sendMessageLinkedin" | "signUpLinkedin" | "waitMilliseconds" | "clickOnSpanTag" | "delay" | "facebookLogin" | "foundOrNotXpath" | "foundOrNot" | "getBrowserPageById" | "getBrowserTabs" | "getBrowser" | "getChromeExecutablePath" | "getConnectedBrowsers" | "getIdlePage" | "getNewPage" | "gmailLogin" | "isCaptchaExist" | "logConsoleIfDebug" | "openMultiTabs" | "openNewBrowserOnChildProcess" | "openNewBrowser" | "openPage" | "racePromises" | "retryClickAndWaitSelector" | "retryWaitSelector" | "setBrowserPageIdle" | "setBrowserSession" | "setInnerHtml" | "setInputValue" | "solveReptcha" | "trueClick" | "twitterLogin" | "typeInTheInputField" | "typeOnTheTargetWithXpathSelector" | "checkAndGetSlackFileUrl" | "elementExists" | "getAllMessages" | "getLatestMessages" | "getSlackChannelMemberList" | "getSlackChannels" | "getSlackMessageFrom" | "getSlackWorkspaces" | "scrapeSlackMessage" | "scrollToTop" | "selectSlackChannel" | "selectSlackWorkspace" | "sendSlackMessage" | "slackLogin" | "storeAllSlackChannel" | "storeSlackChannelMember" | "detectTwitterPage" | "generateTweetsReply" | "getTwitterPostUrl" | "postTweetOnTwitter" | "replyTweet" | "scrapPersonTweets" | "sotreChatGPTTweetReply" | "startReplyTweet" | "startTwitterSraper" | "storeMediaChannelInformation" | "storePersonTweets" | "tweetPropmtTemplate" | "getAbsolutePathMdFileName" | "getAllPostables" | "getPersonDetails" | "getPersonsMenu" | "getSocialMediaChannelsMenu" | "getSocialMediaMenu" | "addSocialMediaCredential" | "canBePosted" | "createAllSocialMediaPost" | "createSocialMediaPost" | "devtoCotentAnalyzer" | "facebookContentAnalyzer" | "getSocialMediaCredentials" | "mediumCotentAnalyzer" | "postSocialMediaPostToDevto" | "postSocialMediaPostToFacebook" | "postSocialMediaPostToMedium" | "postSocialMediaPostToReddit" | "postSocialMediaPostToTwitter" | "redditContentAnalyzer" | "socialMediaPostPlanner" | "startSocialMediaController" | "twitterContentAnalyzer" | "updateSocialMediaPost">(functionName: TFunctionName, parameters: undefined | any[], serverContext: Context) => Promise<RealApiReturnType<any>>;
//# sourceMappingURL=executeFunctionWithParameters.d.ts.map