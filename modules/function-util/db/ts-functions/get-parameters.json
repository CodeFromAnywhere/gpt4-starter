{
  "createdAt": 1677581841015,
  "updatedAt": 1677581841015,
  "deletedAt": 0,
  "createdFirstAt": 1677581841015,
  "isApiExposed": false,
  "isExported": false,
  "operationRelativeTypescriptFilePath": "src/converse.ts",
  "commentsInside": [],
  "rawText": " async (parameters?: FunctionParameter[]) => {\n  return parameters\n    ? oneByOne(parameters, async (parameter) => {\n        /** TODO: Walking:\n         * - if a parameter is a string, it's easy\n         * - if a parameter is a number or boolean, just cast string to that\n         * - if a parameter is an object, walk over all keys\n         * - if a parameter is/can be an array, just insert the first via the above way, but ask if you want to insert another entry after that\n         * - for every entry you can also enter '?'. This will look for all operations that return something that could be used as entry here.\n         */\n        const answer = await ask(`${parameter.name} (${parameter.required})`);\n        return answer;\n      })\n    : undefined;\n}",
  "name": "getParameters",
  "slug": "get-parameters",
  "parameters": [
    {
      "name": "parameters",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/FunctionParameter"
        }
      },
      "simplifiedSchema": {
        "items": [
          {
            "schema": {
              "fullComment": "",
              "properties": [
                {
                  "name": "name",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "schema",
                  "required": false,
                  "schema": {
                    "fullComment": "",
                    "properties": [
                      {
                        "name": "$id",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "$ref",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "$comment",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "$defs",
                        "required": false,
                        "schema": {
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "type",
                        "required": false,
                        "schema": {
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "enum",
                        "required": false,
                        "schema": {
                          "items": [
                            {
                              "schema": {
                                "fullComment": "Primitive type",
                                "properties": [],
                                "type": "object"
                              },
                              "name": "JSONSchema7Type"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      {
                        "name": "const",
                        "required": false,
                        "schema": {
                          "fullComment": "Primitive type",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "multipleOf",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "maximum",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "exclusiveMaximum",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "minimum",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "exclusiveMinimum",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "maxLength",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "minLength",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "pattern",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "items",
                        "required": false,
                        "schema": {
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "additionalItems",
                        "required": false,
                        "schema": {
                          "fullComment": "JSON Schema v7",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "maxItems",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "minItems",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "uniqueItems",
                        "required": false,
                        "schema": {
                          "type": "boolean"
                        }
                      },
                      {
                        "name": "contains",
                        "required": false,
                        "schema": {
                          "circularRefName": "JSONSchema7",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "maxProperties",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "minProperties",
                        "required": false,
                        "schema": {
                          "type": "number"
                        }
                      },
                      {
                        "name": "required",
                        "required": false,
                        "schema": {
                          "items": [
                            {
                              "schema": {
                                "type": "string"
                              },
                              "name": null
                            }
                          ],
                          "type": "array"
                        }
                      },
                      {
                        "name": "properties",
                        "required": false,
                        "schema": {
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "patternProperties",
                        "required": false,
                        "schema": {
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "additionalProperties",
                        "required": false,
                        "schema": {
                          "fullComment": "JSON Schema v7",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "dependencies",
                        "required": false,
                        "schema": {
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "propertyNames",
                        "required": false,
                        "schema": {
                          "fullComment": "JSON Schema v7",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "if",
                        "required": false,
                        "schema": {
                          "fullComment": "JSON Schema v7",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "then",
                        "required": false,
                        "schema": {
                          "fullComment": "JSON Schema v7",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "else",
                        "required": false,
                        "schema": {
                          "fullComment": "JSON Schema v7",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "allOf",
                        "required": false,
                        "schema": {
                          "items": [
                            {
                              "schema": {
                                "fullComment": "JSON Schema v7",
                                "properties": [],
                                "type": "object"
                              },
                              "name": "JSONSchema7Definition"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      {
                        "name": "anyOf",
                        "required": false,
                        "schema": {
                          "items": [
                            {
                              "schema": {
                                "fullComment": "JSON Schema v7",
                                "properties": [],
                                "type": "object"
                              },
                              "name": "JSONSchema7Definition"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      {
                        "name": "oneOf",
                        "required": false,
                        "schema": {
                          "items": [
                            {
                              "schema": {
                                "fullComment": "JSON Schema v7",
                                "properties": [],
                                "type": "object"
                              },
                              "name": "JSONSchema7Definition"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      {
                        "name": "not",
                        "required": false,
                        "schema": {
                          "fullComment": "JSON Schema v7",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "format",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "contentMediaType",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "contentEncoding",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "definitions",
                        "required": false,
                        "schema": {
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "title",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "description",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "default",
                        "required": false,
                        "schema": {
                          "fullComment": "Primitive type",
                          "properties": [],
                          "type": "object"
                        }
                      },
                      {
                        "name": "readOnly",
                        "required": false,
                        "schema": {
                          "type": "boolean"
                        }
                      },
                      {
                        "name": "writeOnly",
                        "required": false,
                        "schema": {
                          "type": "boolean"
                        }
                      },
                      {
                        "name": "examples",
                        "required": false,
                        "schema": {
                          "fullComment": "Primitive type",
                          "properties": [],
                          "type": "object"
                        }
                      }
                    ],
                    "type": "object"
                  }
                },
                {
                  "name": "simplifiedSchema",
                  "required": false,
                  "schema": {
                    "fullComment": "JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form",
                    "properties": [
                      {
                        "name": "todo",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "discussion",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "idea",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "later",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "nb",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "title",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "section",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "description",
                        "required": false,
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "name": "type",
                        "required": true,
                        "schema": {
                          "enum": [
                            "string",
                            "number",
                            "boolean",
                            "object",
                            "array",
                            "null"
                          ],
                          "fullComment": "- string\n- number\n- boolean\n- object\n- array\n- null\n\nNB: Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;\n\n",
                          "nb": "Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;",
                          "type": "string"
                        }
                      },
                      {
                        "name": "circularRefName",
                        "required": false,
                        "schema": {
                          "fullComment": "sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here",
                          "type": "string"
                        }
                      },
                      {
                        "name": "enum",
                        "required": false,
                        "schema": {
                          "fullComment": "in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think",
                          "items": [
                            {
                              "schema": {
                                "fullComment": "Primitive type",
                                "properties": [],
                                "type": "object"
                              },
                              "name": "JSONSchema7Type"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      {
                        "name": "properties",
                        "required": false,
                        "schema": {
                          "fullComment": "in case of object, this will always appear",
                          "items": [
                            {
                              "schema": {
                                "fullComment": "",
                                "properties": [
                                  {
                                    "name": "name",
                                    "required": true,
                                    "schema": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "name": "schema",
                                    "required": true,
                                    "schema": {
                                      "circularRefName": "SimplifiedSchema",
                                      "properties": [],
                                      "type": "object"
                                    }
                                  },
                                  {
                                    "name": "required",
                                    "required": true,
                                    "schema": {
                                      "fullComment": "NB: can't we put this in the SimplifiedSchema itself?",
                                      "nb": "can't we put this in the SimplifiedSchema itself?",
                                      "type": "boolean"
                                    }
                                  }
                                ],
                                "type": "object"
                              },
                              "name": "SimplifiedSchemaProperty"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      {
                        "name": "items",
                        "required": false,
                        "schema": {
                          "fullComment": "in case of arrays, this will always appear",
                          "items": [
                            {
                              "schema": {
                                "fullComment": "",
                                "properties": [
                                  {
                                    "name": "name",
                                    "required": true,
                                    "schema": {
                                      "fullComment": "name in case of it being a reference, otherwise null",
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "name": "schema",
                                    "required": true,
                                    "schema": {
                                      "circularRefName": "SimplifiedSchema",
                                      "properties": [],
                                      "type": "object"
                                    }
                                  }
                                ],
                                "type": "object"
                              },
                              "name": "SimplifiedSchemaItem"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      {
                        "name": "fullComment",
                        "required": false,
                        "schema": {
                          "fullComment": "Full doccomment, parsed without all stars syntax.\n\nNB: besides this, every `CommentType` can optionally also be found as a property on the `SimplifiedSchema`",
                          "nb": "besides this, every `CommentType` can optionally also be found as a property on the `SimplifiedSchema`",
                          "type": "string"
                        }
                      }
                    ],
                    "type": "object"
                  }
                },
                {
                  "name": "required",
                  "required": true,
                  "schema": {
                    "type": "boolean"
                  }
                }
              ],
              "type": "object"
            },
            "name": "FunctionParameter"
          }
        ],
        "type": "array"
      },
      "required": false
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 761,
    "lines": 15,
    "bytes": 761,
    "bytesPerCharacter": 1,
    "charactersPerLine": 51,
    "linesPerFile": 15,
    "numberOfFiles": 1
  },
  "id": "dzxsgfdowqoynempcajrrgew"
}