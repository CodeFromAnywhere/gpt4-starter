{
  "createdAt": 1677582375248,
  "updatedAt": 1677582375248,
  "deletedAt": 0,
  "createdFirstAt": 1677582375248,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/racePromises.ts",
  "commentsInside": [],
  "rawText": " async (\n    promises: Promise<any>[]\n): Promise<number> => {\n    const indexedPromises: Array<Promise<number>> = promises.map(\n        (promise, index) =>\n            new Promise<number>((resolve) =>\n                promise\n                    .then(() => resolve(index))\n                    .catch((err) => {\n                        resolve(1000);\n                    })\n            )\n    );\n    return Promise.race(indexedPromises);\n}",
  "name": "racePromises",
  "slug": "race-promises",
  "parameters": [
    {
      "name": "promises",
      "schema": {
        "type": "array",
        "items": {}
      },
      "simplifiedSchema": {
        "items": [
          {
            "schema": {
              "properties": [],
              "type": "object"
            },
            "name": null
          }
        ],
        "type": "array"
      },
      "required": true
    }
  ],
  "description": "Typescript",
  "returnType": {
    "rawType": "Promise<number>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 12,
  "size": {
    "characters": 447,
    "lines": 15,
    "bytes": 447,
    "bytesPerCharacter": 1,
    "charactersPerLine": 30,
    "linesPerFile": 15,
    "numberOfFiles": 1
  },
  "id": "utvxenjtedxhvwvgydupcznn"
}