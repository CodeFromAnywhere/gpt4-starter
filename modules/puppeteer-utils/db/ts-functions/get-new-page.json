{
  "createdAt": 1677582359075,
  "updatedAt": 1677582359075,
  "deletedAt": 0,
  "createdFirstAt": 1677582359075,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getNewPage.ts",
  "commentsInside": [],
  "rawText": " async (\n    browser: Browser\n): Promise<Page | undefined> => {\n    const allPage = await browser.pages();\n    const allPageTitle = await Promise.all(allPage.map(async (p) => p.title()));\n    let indexOfIdlePage = allPageTitle.indexOf(\"\");\n    if (indexOfIdlePage === -1) {\n        const idlePage = await getIdlePage(browser);\n        return idlePage;\n    }\n    return allPage[indexOfIdlePage];\n}",
  "name": "getNewPage",
  "slug": "get-new-page",
  "parameters": [
    {
      "name": "browser",
      "schema": {
        "$ref": "#/definitions/Browser"
      },
      "simplifiedSchema": {
        "fullComment": "A Browser is created when Puppeteer connects to a Chromium instance, either through\n {@link  PuppeteerNode.launch }  or  {@link  Puppeteer.connect } .",
        "properties": [],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "Promise<import(\"/Users/clarity/os/operations/node_modules/puppeteer/lib/types\").Page | undefined>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 396,
    "lines": 12,
    "bytes": 396,
    "bytesPerCharacter": 1,
    "charactersPerLine": 33,
    "linesPerFile": 12,
    "numberOfFiles": 1
  },
  "id": "xquheldptnqjwqarafypqpcv"
}