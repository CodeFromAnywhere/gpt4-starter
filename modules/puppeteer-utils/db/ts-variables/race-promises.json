{
  "createdAt": 1677582375398,
  "updatedAt": 1677582375398,
  "deletedAt": 0,
  "createdFirstAt": 1677582375398,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "racePromises",
  "slug": "race-promises",
  "operationRelativeTypescriptFilePath": "src/racePromises.ts",
  "type": {
    "rawType": "(promises: Promise<any>[]) => Promise<number>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n    promises: Promise<any>[]\n): Promise<number> => {\n    const indexedPromises: Array<Promise<number>> = promises.map(\n        (promise, index) =>\n            new Promise<number>((resolve) =>\n                promise\n                    .then(() => resolve(index))\n                    .catch((err) => {\n                        resolve(1000);\n                    })\n            )\n    );\n    return Promise.race(indexedPromises);\n}",
  "description": "",
  "id": "ouydvkyjprrdsjuyuuaosefv"
}