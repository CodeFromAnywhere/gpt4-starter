[
  {
    "createdAt": 1678330984042,
    "updatedAt": 1678330984042,
    "deletedAt": 0,
    "createdFirstAt": 1678330984042,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/bananaCarrot.ts",
    "comment": "",
    "rawStatement": "export const bananaCarrot = async (modelParameters: {\n  imageUrl: string;\n\n  /**\n   * text for QA / Similarity*/\n  text?: string;\n  /**\n   * whether to return text-image similarity\n   */\n  similarity?: boolean;\n  /**\n   * max length of the generation\n   */\n  maxLength?: number;\n  /**\n   * min length of the generation\n   */\n  minLength?: number;\n}) => {\n  const persona = await getPrimaryPersona();\n\n  const apiKey = persona.bananadevApiKey;\n\n  if (!apiKey) {\n    return {\n      isSuccessful: false,\n      message: \"Please setup an API Key for Carrot Banana\",\n    };\n  }\n\n  const modelKey = persona.bananadevModelKeys?.carrot;\n\n  if (!modelKey) {\n    return {\n      isSuccessful: false,\n      message: \"Please provide a correct model that you have a model key for\",\n    };\n  }\n\n  const result = await banana.run(apiKey, modelKey, modelParameters);\n\n  console.log({ carrotResult: result });\n  return { isSuccessful: true, message: \"You did it\", result };\n};",
    "parameters": {},
    "types": [],
    "firstLine": 4,
    "lastLine": 6,
    "id": "gfkjesijkwqurfpmtbmftqtt"
  }
]