{
  "createdAt": 1678330502909,
  "updatedAt": 1678330502909,
  "deletedAt": 0,
  "createdFirstAt": 1678330502909,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "readFolderFileCollections",
  "slug": "read-folder-file-collections",
  "operationRelativeTypescriptFilePath": "src/readFolderFileCollections.ts",
  "type": {
    "rawType": "(absoluteBaseFolderPath: string) => Promise<import(\"/Users/clarity/os/operations/tools/control-fs/file-collection-util/src/FileCollection\").FileCollectionObject>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  absoluteBaseFolderPath: string\n): Promise<FileCollectionObject> => {\n  const dirents = await fs.readdir(absoluteBaseFolderPath, {\n    withFileTypes: true,\n    encoding: \"utf8\",\n  });\n\n  // for every file, calculate the root filename and put it in the collection object under that key\n  const fileCollectionObject: FileCollectionObject = {};\n  dirents.map((dirent) => {\n    const rootName = withoutSubExtensions(dirent.name);\n    const collectionNow = fileCollectionObject[rootName] || [];\n    fileCollectionObject[rootName] = collectionNow.concat(dirent.name);\n  });\n\n  return fileCollectionObject;\n}",
  "description": "Returns an array of `FileCollection`s\n\nimportant for ui as well as renaming as well as many other things!",
  "id": "moxixewljcjinegycfbgqfvy"
}