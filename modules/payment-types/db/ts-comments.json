[
  {
    "createdAt": 1673852997308,
    "updatedAt": 1673852997308,
    "deletedAt": 0,
    "createdFirstAt": 1673852997308,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/later.ts",
    "comment": "",
    "rawStatement": "import { RunEveryPeriodEnum } from \"code-types\";",
    "parameters": {},
    "types": [],
    "firstLine": 1,
    "lastLine": 4,
    "id": "ckvubcwkjfpdurdaegjcypjo"
  },
  {
    "createdAt": 1673852997308,
    "updatedAt": 1673852997308,
    "deletedAt": 0,
    "createdFirstAt": 1673852997308,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/later.ts",
    "comment": "A credit transaction between person A and person B.",
    "rawStatement": "export interface PaymentTransaction extends DefaultModelType {\n  payer_personId: Id;\n  receiver_personId: Id;\n  credit: Credit;\n}",
    "parameters": {},
    "types": [],
    "firstLine": 16,
    "lastLine": 18,
    "id": "pmobsldcuuhdymquzrmmzqyf"
  },
  {
    "createdAt": 1673852997308,
    "updatedAt": 1673852997308,
    "deletedAt": 0,
    "createdFirstAt": 1673852997308,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/later.ts",
    "comment": "A request for a `PaymentTransaction` to be made to receiver from one or multiple payers",
    "rawStatement": "export interface PaymentRequest extends DefaultModelType {\n  receiver_personId: Id;\n  /**\n   * optional, you can also make it public\n   */\n  payer_personIds?: Id[];\n  /**\n   * required token in order to make the payment. Can be part of a link for example\n   *\n   * We don't want to use the ID because the payment request may become visible in a interface without being able to pay\n   */\n  token: string;\n  /**\n   * If true, anyone can pay this if they have the token\n   */\n  isPublic?: boolean;\n  credit?: Credit;\n}",
    "parameters": {},
    "types": [],
    "firstLine": 25,
    "lastLine": 27,
    "id": "sbkpglojzhmffaigyvhosfxk"
  },
  {
    "createdAt": 1673852997308,
    "updatedAt": 1673852997308,
    "deletedAt": 0,
    "createdFirstAt": 1673852997308,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/later.ts",
    "comment": "A person can subscribe to a paymentplan to receive something. Must be a `PaymentPlan` with a `.intervalPrice`, this is for the recurring payment that should be initiated and done.",
    "rawStatement": "export interface PaymentSubscription extends DefaultModelType {\n  personId?: Id;\n  paymentPlanSlug: Slug;\n  paymentPlan?: PaymentPlan;\n}",
    "parameters": {},
    "types": [],
    "firstLine": 47,
    "lastLine": 49,
    "id": "vjykzgelmjzazgfxvzpwxzfa"
  },
  {
    "createdAt": 1673852997309,
    "updatedAt": 1673852997309,
    "deletedAt": 0,
    "createdFirstAt": 1673852997309,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/later.ts",
    "comment": "Model for one-time coupons with invalidation\n\nCan be filled in for any `PaymentPlan` with initial cost.\n\nWill not pay for the subscription cost.\n\nLater, this can be extended",
    "rawStatement": "export interface PaymentCoupon extends DefaultModelType {\n  /**\n   * Unique code that is sent to a `Person`\n   */\n  couponCode: string;\n  /**\n   * Maximum price for the credit\n   *\n   * If filled in at a paymentPlan with a higher price, this will be the maximum discount.\n   *\n   * If filled in at a paymentPlan with a lower price, the whole coupon will still be removed\n   */\n  maximumPrice: Price;\n\n  /**\n   * After this date the coupon will not be valid anymore and should be removed\n   */\n  validUntilAt: number;\n}",
    "parameters": {},
    "types": [],
    "firstLine": 56,
    "lastLine": 64,
    "id": "lbjikechqlvcjncvjwdcrqtp"
  },
  {
    "createdAt": 1673852997309,
    "updatedAt": 1673852997309,
    "deletedAt": 0,
    "createdFirstAt": 1673852997309,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/later.ts",
    "comment": "PaymentPlans are plans that provide certain features, perks, statuses, access, or roles on different platforms.",
    "rawStatement": "export interface PaymentPlan extends MarkdownModelType {\n  /**\n   * If given, PaymentPlan will be active for these bundle(s)\n   */\n  bundleConfigSlugs?: Slug[];\n  /**\n   * If there's a one-time price, it should be filled in here.\n   */\n  oneTimePrice?: Price;\n  intervalPrice?: Price;\n  /**\n   * When does the payment occur?\n   *\n   * Leave undefined for one-time payments\n   */\n  paymentInterval?: RunEveryPeriodEnum;\n\n  /**\n   * How many credit are received?\n   */\n  credit?: Credit;\n\n  /**\n   * Description of the plan\n   */\n  markdown: string;\n}",
    "parameters": {},
    "types": [],
    "firstLine": 85,
    "lastLine": 87,
    "id": "bpdofrlkhrimxjullsluhyht"
  }
]