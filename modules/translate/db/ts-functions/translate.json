{
  "createdAt": 1678861920177,
  "updatedAt": 1678861920177,
  "deletedAt": 0,
  "createdFirstAt": 1678861920177,
  "isApiExposed": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/translate.ts",
  "commentsInside": [],
  "rawText": " (\n  text: string,\n  variables?: { [key: string]: string | number }\n) => {\n  if (!variables) {\n    return text;\n  }\n\n  const finalText = Object.keys(variables).reduce((previousText, key) => {\n    // NB: replace all occurences\n    return previousText.replaceAll(`$\\{${key}\\}`, String(variables[key]));\n  }, text);\n\n  return finalText;\n}",
  "name": "translate",
  "slug": "translate",
  "parameters": [
    {
      "name": "text",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "variables",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      },
      "required": false
    }
  ],
  "description": "Simple function for translations, that inputs a string (coming from your translation object and a variable object `{[key:string]:string}` that can hold other strings to be inserted. Translate tries to match every key to $keyName, and replaces it by its value.\n\nNB: I purposefully dont create a `t` function like many i18n libraries do, because the type safety is useful, as it can, with a proper doc-comment, show which variables need to be inserted.",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 785,
    "lines": 17,
    "bytes": 785,
    "bytesPerCharacter": 1,
    "charactersPerLine": 46,
    "linesPerFile": 17,
    "numberOfFiles": 1
  },
  "id": "tgglbcfmwcgfixspnuvlaxez"
}