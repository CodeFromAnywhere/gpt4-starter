{
  "createdAt": 1678505781168,
  "updatedAt": 1678505781168,
  "deletedAt": 0,
  "createdFirstAt": 1678505781168,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getPersonSlug",
  "slug": "get-person-slug",
  "operationRelativeTypescriptFilePath": "src/insertPerson.ts",
  "type": {
    "rawType": "(projectRoot: string, key: import(\"/Users/clarity/os/operations/tools/purpose/codebase-introspection/database/chat-message-orm/src/insertPerson\").PersonIndex, value: string) => Promise<string | undefined>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  projectRoot: string,\n  key: PersonIndex,\n  value: string\n): Promise<string | undefined> => {\n  if (key === \"slug\") {\n    return value;\n  }\n\n  // 1) get path\n  const kvObjectPath = path.join(projectRoot, \"db\", `person-${key}-index.json`);\n\n  // 2) read kv object\n  const kvObject = await readJsonFile<{ [key: string]: string }>(kvObjectPath);\n\n  if (!kvObject) {\n    return;\n  }\n  // 3) return value (slug)\n  return kvObject[value];\n}",
  "description": "",
  "id": "jkbmfgdtnvcamjxpjuhqmtgz"
}