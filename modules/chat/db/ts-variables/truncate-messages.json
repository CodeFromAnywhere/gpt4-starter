{
  "createdAt": 1678372652770,
  "updatedAt": 1678372652770,
  "deletedAt": 0,
  "createdFirstAt": 1678372652770,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "truncateMessages",
  "slug": "truncate-messages",
  "operationRelativeTypescriptFilePath": "src/truncateMessages.ts",
  "type": {
    "rawType": "(chatMessages: import(\"/Users/clarity/os/operations/tools/purpose/social-media/social-media-types/build/ChatMessage\").ChatMessage[]) => { truncatedMessages: import(\"/Users/clarity/os/operations/tools/purpose/social-media/social-media-types/build/ChatMessage\").ChatMessage[]; inputTokensCalculated: number; }",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(chatMessages: ChatMessage[]) => {\n  const messagesWithTokenCount = calculateMessagesTokenCount(chatMessages);\n\n  // newest first\n  const reversed = messagesWithTokenCount.reverse();\n\n  // remove old stuff\n\n  const filteredOld = reversed.filter((item, index) => {\n    if (index <= 9) {\n      // keep 10 newest always\n      return true;\n    }\n    const isNew = Date.now() - item.createdAt < 86400000;\n    if (isNew) {\n      return true;\n    }\n    return false;\n  });\n\n  // remove everything before last 3000 tokens\n  const index = filteredOld.findIndex((item, index, array) => {\n    const totalTokens = sum(array.slice(0, index).map((x) => x.tokenCount));\n    if (totalTokens > 3000) return true;\n  });\n  const sliced = index === -1 ? filteredOld : filteredOld.slice(0, index);\n  const truncatedMessages: ChatMessage[] = sliced\n    .reverse()\n    .map(({ tokenCount, ...item }) => item);\n\n  const inputTokensCalculated = sum(sliced.map((x) => x.tokenCount));\n\n  return { truncatedMessages, inputTokensCalculated };\n}",
  "description": "Simple algo to truncate chat messages.\n\n- omit everything from more than 24h ago except for the last 10 messages\n- also everything that makes our input larger than 3000 tokens.\n\nCan later be improved by analysing the messages, but this seems good enough for now to stay under the 3000 tokens...",
  "id": "fepsuruuwxdwacpavlhbewlq"
}