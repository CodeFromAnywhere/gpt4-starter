{
  "createdAt": 1678042870527,
  "updatedAt": 1678042870527,
  "deletedAt": 0,
  "createdFirstAt": 1678042870527,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "docToMd",
  "slug": "doc-to-md",
  "operationRelativeTypescriptFilePath": "src/docToMd.ts",
  "type": {
    "rawType": "(absoluteDocFilePath: string, isForce?: boolean | undefined) => Promise<{ isSuccessful: boolean; message?: string | undefined; }>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  absoluteDocFilePath: string,\n  isForce?: boolean\n): Promise<{\n  isSuccessful: boolean;\n  message?: string;\n}> => {\n  await lock(absoluteDocFilePath, \"locking\", \"docToMd\", [\n    absoluteDocFilePath,\n    isForce,\n  ]);\n\n  const result = await new Promise<{ isSuccessful: boolean; message?: any }>(\n    async (resolve, reject) => {\n      const parsedPath = path.parse(absoluteDocFilePath);\n      const absoluteMarkdownFilePath = path.join(\n        parsedPath.dir,\n        `${parsedPath.name}.md`\n      );\n\n      if (fs.existsSync(absoluteMarkdownFilePath) && !isForce) {\n        // wtf, why???\n        return { isSuccessful: false };\n      }\n      // Some code to open here\n      // Read the archive file into a typedArray\n\n      try {\n        textract.fromFileWithPath(\n          absoluteDocFilePath,\n          async (error: any, text: any) => {\n            if (error) {\n              console.log({ error });\n              resolve({ isSuccessful: false, message: error });\n              return;\n            }\n\n            const fullText = `---\nisSource: false\ncreatedAt: ${Date.now()}\nsource: docToMd\n---\n\n${text}`;\n\n            await fs.writeFile(absoluteMarkdownFilePath, fullText, \"utf8\");\n            resolve({ isSuccessful: true });\n          }\n        );\n      } catch (e) {\n        resolve({ isSuccessful: false });\n      }\n    }\n  );\n\n  if (result.isSuccessful) {\n    await unlock(absoluteDocFilePath);\n  } else {\n    await lockError(absoluteDocFilePath, result.message, undefined, \"docToMd\", [\n      absoluteDocFilePath,\n      isForce,\n    ]);\n  }\n\n  return result;\n}",
  "description": "",
  "id": "xlagpydmqrkahykxcgirdzwm"
}